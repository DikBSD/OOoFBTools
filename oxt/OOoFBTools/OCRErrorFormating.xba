<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="OCRErrorFormating" script:language="StarBasic">&apos;======================================================================================================================
&apos; 				модуль обработки ошибок OCR форматирования: снятие курсива со знаков препинания, кавычек и скобок
&apos;======================================================================================================================

Option Explicit

Public oOCREF As Object
Private Const sOCREFSettings As String = &quot;ocr_error_formating.txt&quot; &apos; файл настроек
Private Iter As Integer

&apos;******************************************************************
&apos; инициализация и запуск диалога исправления OCR ошибок форматирования
Sub OCRErrorFormatStart()
&apos;	DialogLibraries.LoadLibrary( &quot;OOoFBTools&quot; )
	If Not GlobalScope.DialogLibraries.isLibraryLoaded( &quot;OOoFBTools&quot; ) Then
    	GlobalScope.DialogLibraries.LoadLibrary( &quot;OOoFBTools&quot; )
	End If
	oOCREF = CreateUnoDialog( GlobalScope.DialogLibraries.OOoFBTools.OCRErrorFormatingDlg )
	
	&apos; инициализация диалога
	InitOCRErrorFormatingDlg()

	With oOCREF.Model
		.Height	= 56
		.Width	= 219
	End With
	
	&apos; считаем положение диалога из файла настроек
	Dim nX As Integer, nY As Integer
	ReadDlgSettings( getOOoFBToolsSettingsDir() &amp; sOCREFSettings, oOCREF, nX, nY )
	oOCREF.setPosSize( nX, nY, 56, 219, com.sun.star.awt.PosSize.POS )
	VerifyCheckOptions()
	oOCREF.execute()
End Sub

&apos; Кнопка запуска обработки доступна только при выборе хотя бы одной опции корректировки
Sub VerifyCheckOptions()
	If oOCREF.getControl( &quot;ChbBrackets&quot; ).State	= 0 And oOCREF.getControl( &quot;ChbQuotation&quot; ).State = 0 And oOCREF.getControl( &quot;ChbSignPunct&quot; ).State = 0 Then
		oOCREF.getControl( &quot;cmdbtnWork&quot; ).Enable = False
	Else
		oOCREF.getControl( &quot;cmdbtnWork&quot; ).Enable = True
	End If
End Sub

&apos; начало обработки
&apos;******************************************************************
Sub OCRErrorFormatWorking()
	&apos; записываем настройки диалога
	SaveSettings( getOOoFBToolsSettingsDir() &amp; sOCREFSettings, oOCREF )
	
	Iter = 1
	Dim ProgressMaxIter As Integer : ProgressMaxIter = 1
	If oOCREF.getControl( &quot;ChbBrackets&quot; ).State		= 1 Then ProgressMaxIter = ProgressMaxIter + 1&apos;4
	If oOCREF.getControl( &quot;ChbQuotation&quot; ).State	= 1 Then ProgressMaxIter = ProgressMaxIter + 1&apos;4
	If oOCREF.getControl( &quot;ChbSignPunct&quot; ).State	= 1 Then ProgressMaxIter = ProgressMaxIter + 1&apos;4
	
	If ProgressMaxIter = 0 Then
		MsgBox sOCREF.sEndMessage, 64, sOCREF.sTitle
		Exit Sub
	End If
	oOCREF.endExecute()
	Dim oProgressBar : oProgressBar = ThisComponent.CurrentController.StatusIndicator
	oProgressBar.start( sOCREF.sTitle &amp; &quot;:&quot;, ProgressMaxIter )

	Dim aLeftList()		As String
	Dim aRightList()	As String
	If oOCREF.getControl( &quot;ChbBrackets&quot; ).State = 1 Then
		&apos; обработка курсива на скобках в тексте, таблицах, сносках и текстовых врезок (ошибки OCR форматирования
		aLeftList()		= Array( &quot;(&quot;, &quot;{&quot;, &quot;[&quot; )
		aRightList()	= Array( &quot;)&quot;, &quot;}&quot;, &quot;]&quot; )
		TextNoteTableTextFrameWorker( aLeftList(), aRightList(), oProgressBar )
	End If
	
	If oOCREF.getControl( &quot;ChbQuotation&quot; ).State = 1 Then
		&apos; обработка курсива на кавычках в тексте, таблицах, сносках и текстовых врезок (ошибки OCR форматирования
		aLeftList()		= Array( &quot;«&quot;, &quot;“&quot;, &quot;„&quot; )
		aRightList()	= Array( &quot;»&quot;, &quot;”&quot;, &quot;”&quot; )
		TextNoteTableTextFrameWorker( aLeftList(), aRightList(), oProgressBar )
	End If
	
	If oOCREF.getControl( &quot;ChbSignPunct&quot; ).State = 1 Then
		&apos; обработка курсива на знаках препинания в тексте, таблицах, сносках и текстовых врезок (ошибки OCR форматирования)
		SignPunctWorker( oProgressBar )
	End If

	MsgBox sOCREF.sEndMessage, 64, sOCREF.sTitle
	oProgressBar.end
End Sub

&apos; =========================================================================================================================
&apos; 						Обработка курсива скобок и/или кавычек в тексте, таблицах, сносках и текстовых врезках
&apos; =========================================================================================================================

&apos; обработка текста, таблиц, сносок и текстовых врезок: снятие курсива с заданных символов (скобки и кавычки) (ошибки OCR форматирования)
Sub TextNoteTableTextFrameWorker( ByRef aLeftList(), ByRef aRightList(), ByRef oProgressBar As Object )
	Dim oDoc		As Object	: oDoc			= ThisComponent
	Dim oDocControl	As Object	: oDocControl	= oDoc.getCurrentController()
	Dim vLSymSearch	As Variant	: vLSymSearch	= oDoc.createSearchDescriptor()
	Dim vLSymFound	As Variant

	&apos; леввый поисковый символ
	Dim SrchAttributes(0) As New com.sun.star.beans.PropertyValue
	SrchAttributes(0).Name = &quot;CharPosture&quot;
	With vLSymSearch
		.SearchRegularExpression = False
		.ValueSearch = False
	End With
	
	Dim i As Integer

	oProgressBar.setValue( Iter ) : Iter = Iter + 1
	For i=0 To UBound( aLeftList() )
		&apos; левый поисковый символ
		vLSymSearch.SearchString = aLeftList( i )
		&apos; ищем левый поисковый символ
		vLSymFound = oDoc.FindFirst( vLSymSearch )
		If Not IsNull(vLSymFound) Then 
			Do
				&apos; поиск и обработка курсива на скобках/кавычках
				UnItalicBracketWorker( vLSymFound, aLeftList( i ), aRightList( i ) )
				&apos; поиск следущего элемента
				vLSymFound = oDoc.FindNext( vLSymFound.End, vLSymSearch )
			Loop Until IsNull( vLSymFound ) &apos; выполняем хотя бы раз пока vLSymFound не пусто
		End If
		
		oProgressBar.setValue( Iter ) : Iter = Iter + 1
	Next i
End Sub
&apos;******************************************************************

&apos; поиск и снятие курсива со скобок/кавычек
Sub UnItalicBracketWorker( ByRef vLSymFound As Variant, sFindLeftSymbol As String, sFindRightSymbol As String )
	&apos; нашли левый поисковый символ
	Dim oLSymCurs	As Object : oLSymCurs = vLSymFound.getText().CreateTextCursorByRange( vLSymFound )
	oLSymCurs.collapseToEnd()
		
	&apos; ищем правый поисковый символ
	Dim oRSymCurs	As Object : oRSymCurs = vLSymFound.getText().CreateTextCursorByRange( vLSymFound )
	
	Dim FirstWordLetterAfterRightSymbol As Boolean
	
FindLSym:
	Do While oRSymCurs.goRight(1, True) And ( Not oRSymCurs.Text.compareRegionEnds( oRSymCurs, oRSymCurs.End ) &lt;= 0 )
		FirstWordLetterAfterRightSymbol = False
		If Right( oRSymCurs.getString(), 1 ) = sFindLeftSymbol Then
			&apos; нашли еще один левый поисковый символ ДО правого поискового символ
			oLSymCurs.gotoRange( oRSymCurs, False )
			oLSymCurs.collapseToEnd()
			GoTo FindLSym
		ElseIf Right( oRSymCurs.getString(), 1 ) = sFindRightSymbol Then
			&apos; нашли парный правый поисковый символ
			oRSymCurs.goLeft(1, True)
			oRSymCurs.collapseToEnd()
			&apos; ищем 1-й символ после правого символа, кроме пробелоа и/или табуляции
			FirstWordLetterAfterRightSymbol = FindFirstWordLetterAfterRightSymbol( oRSymCurs )
			Exit Do
		End If
	Loop

	&apos; ищем последний символ слова левее левого поискового символа, кроме пробелоа и/или табуляции
	Dim EndWordLetterBeforeLeftBracket As Boolean : EndWordLetterBeforeLeftBracket = FindEndWordLetterBeforeLeftSymbol( oLSymCurs )

	&apos; Обработка заданных поисковых символов
	If EndWordLetterBeforeLeftBracket = True And FirstWordLetterAfterRightSymbol = True Then
		UnItalic(  oLSymCurs, oRSymCurs )
	End If
End Sub
&apos;******************************************************************

&apos; ищем последний символ слова левее левого поискового символа, кроме пробелоа и/или табуляции
Function FindEndWordLetterBeforeLeftSymbol( ByRef oLSymCurs As Object ) As Boolean
	FindEndWordLetterBeforeLeftSymbol = False
	Dim s As String
	Do While oLSymCurs.goLeft(1, True)
		s = Left( oLSymCurs.getString(), 1 )
		If s &lt;&gt; &quot;&quot; And s &lt;&gt; Chr(32) And s &lt;&gt; Chr(9) And s &lt;&gt; Chr(160) Then
			If IsLetter( s ) OR IsNumber( s ) Then &apos; нашли последний символ слова левее левой скобки
				FindEndWordLetterBeforeLeftSymbol = True
				Exit Function
			End If
		End If
	Loop
End Function
&apos;******************************************************************

&apos; ищем 1-й символ после поискового символа, кроме пробелоа и/или табуляции
Function FindFirstWordLetterAfterRightSymbol( ByRef oRSymCurs As Object ) As Boolean
	FindFirstWordLetterAfterRightSymbol = False
	Dim s As String
	Do While oRSymCurs.goRight(1, True)
		s = Right( oRSymCurs.getString(), 1 )
		If s &lt;&gt; &quot;&quot; And s &lt;&gt; Chr(32) And s &lt;&gt; Chr(9) And s &lt;&gt; Chr(160) Then
			If IsLetter( s ) OR IsNumber( s ) OR s = &quot;.&quot; OR s = &quot;!&quot; OR s = &quot;?&quot; Then &apos; нашли 1-й символ после правой скобки
				FindFirstWordLetterAfterRightSymbol = True
				Exit Function
			End If
		End If
	Loop
End Function
&apos;******************************************************************

&apos; снятие курсива со скобок/кавычек
Function UnItalic( ByRef oLSymCurs As Object, ByRef oRSymCurs As Object ) As Boolean
	UnItalic = False
	Dim IsLItalic As Boolean : IsLItalic = False
	Dim IsRItalic As Boolean : IsRItalic = False
	Dim oCurs As Object : oCurs = oLSymCurs.getText().CreateTextCursorByRange( oLSymCurs )
	oCurs.collapseToStart() : oCurs.goRight(1, True)
	If oCurs.CharPosture = com.sun.star.awt.FontSlant.ITALIC Then IsLItalic = True
		
	oCurs.gotoRange( oRSymCurs, False )
	oCurs.collapseToEnd() : oCurs.goLeft(1, True)
	If oCurs.CharPosture = com.sun.star.awt.FontSlant.ITALIC Then IsRItalic = True
	If Not IsLItalic And Not IsRItalic Then
		&apos; Если левый символ и правый символ от скобок/кавычек – оба без курсива, то с обоих скобок (кавычек) снимаем курсив.
		oLSymCurs.CharPosture = com.sun.star.awt.FontSlant.NONE
		oRSymCurs.CharPosture = com.sun.star.awt.FontSlant.NONE
		UnItalic = True
	ElseIf IsLItalic And IsRItalic Then
		&apos; Если левый символ и правый символ от скобок/кавычек – оба с  курсивом, то на обои скобки (кавычки) ставим курсив.
		oLSymCurs.collapseToEnd() : oLSymCurs.goLeft(1, True)
		oLSymCurs.CharPosture = com.sun.star.awt.FontSlant.ITALIC
		oRSymCurs.collapseToStart() : oRSymCurs.goRight(1, True)
		oRSymCurs.CharPosture = com.sun.star.awt.FontSlant.ITALIC
		UnItalic = True
	Else
		&apos; Если или только левый символ, или только правый символ от скобок/кавычек – с курсивом, а второй - без курсива, то с обоих скобок (кавычек) снимаем курсив.
		oLSymCurs.collapseToEnd() : oLSymCurs.goLeft(1, True)
		oLSymCurs.CharPosture = com.sun.star.awt.FontSlant.NONE
		oRSymCurs.goLeft(1, True)
		oRSymCurs.CharPosture = com.sun.star.awt.FontSlant.NONE
		UnItalic = True
	End If
End Function

&apos; =========================================================================================================================
&apos; 						Обработка знаков препинания в тексте, таблицах, сносках и текстовых врезках
&apos; =========================================================================================================================
&apos; обработка текста, таблиц, сносок и текстовых врезок: снятие курсива со знаков препинания (ошибки OCR форматирования)
Sub SignPunctWorker( ByRef oProgressBar As Object )
	Dim aSignPunctList() As String : aSignPunctList() = Array( &quot;,&quot;, &quot;.&quot;, &quot;:&quot;, &quot;;&quot;, &quot;!&quot;, &quot;?&quot; )
	Dim oDoc As Object : oDoc = ThisComponent
	Dim vSignPunctSearch	As Variant	: vSignPunctSearch	= oDoc.createSearchDescriptor()
	Dim vSignPunctFound		As Variant
	Dim i As Integer
	
	Dim SrchAttributes(0) As New com.sun.star.beans.PropertyValue
	SrchAttributes(0).Name = &quot;CharPosture&quot;
	With vSignPunctSearch
		.SearchRegularExpression = False
		.SetSearchAttributes( SrchAttributes() )
		.ValueSearch			 = False
	End With
		
	oProgressBar.setValue( Iter ) : Iter = Iter + 1
	
	&apos; удаление курсива для знаков препинания в тексте
	For i=0 To UBound( aSignPunctList() )
		&apos; знак пунктуации с курсивом
		vSignPunctSearch.SearchString = aSignPunctList( i )

		&apos; ищем левый поисковый символ
		vSignPunctFound = oDoc.FindFirst( vSignPunctSearch )
		If Not IsNull(vSignPunctFound) Then 
			Do
				&apos; поиск и обработка курсива на знаках препинания
				UnItalicSignPunctuationWorker( vSignPunctFound )
				&apos; Поиск следущего элемента
				vSignPunctFound = oDoc.FindNext( vSignPunctFound.End, vSignPunctSearch )
			Loop Until IsNull( vSignPunctFound ) &apos; выполняем хотя бы раз пока vSignPunctFound не пусто
		EndIf

		oProgressBar.setValue( Iter ) : Iter = Iter + 1
	Next i
End Sub
&apos;******************************************************************

&apos; поиск и снятие курсива с знаков препинания
Sub UnItalicSignPunctuationWorker( ByRef vLSymFound As Variant )
	Dim oSignPunctCurs				As Object :	oSignPunctCurs				= vLSymFound.getText().CreateTextCursorByRange( vLSymFound )
	Dim oStartSentenceLetterCurs	As Object :	oStartSentenceLetterCurs	= oSignPunctCurs.getText().CreateTextCursorByRange( oSignPunctCurs )
	
	&apos; ищем первый символ после найденного знака препинания
	Dim FirstWordLetterAfterSignPunctuation	As Boolean : FirstWordLetterAfterSignPunctuation	= FindFirstWordLetterAfterRightSymbol( oSignPunctCurs )
	&apos; ищем 1-й символ Начала предложения
	Dim StartOfSentenceLetter				As Boolean : StartOfSentenceLetter					= oStartSentenceLetterCurs.gotoStartOfSentence( False )
	oStartSentenceLetterCurs.goRight(1, True)

	&apos; Обработка заданных поисковых символов
	Dim IsSoSLetterItalic		As Boolean : IsSoSLetterItalic		= False : 
	Dim IsFirstLetterAsItalic	As Boolean : IsFirstLetterAsItalic	= False
	Dim oCurs As Object : oCurs = oSignPunctCurs.getText().CreateTextCursorByRange( oSignPunctCurs )
	oCurs.collapseToEnd() : oCurs.goLeft(1, True)
	If oCurs.CharPosture					= com.sun.star.awt.FontSlant.ITALIC Then IsFirstLetterAsItalic	= True
	If oStartSentenceLetterCurs.CharPosture = com.sun.star.awt.FontSlant.ITALIC Then IsSoSLetterItalic		= True
	If Not IsSoSLetterItalic And Not IsFirstLetterAsItalic Then
		&apos; убираем курсив
		oSignPunctCurs.CharPosture = com.sun.star.awt.FontSlant.NONE
	ElseIf IsSoSLetterItalic And Not IsFirstLetterAsItalic Then
		&apos; первый символ начала предложения - с курсивом, а первый символ после знака препинания - без курсива
		Dim s As String : s = Right( oCurs.getString(), 1 )
		If s = &quot;,&quot; Or s = &quot;.&quot; Or s = &quot;;&quot; Or s = &quot;:&quot; Then
			oSignPunctCurs.CharPosture = com.sun.star.awt.FontSlant.NONE
		ElseIf s = &quot;!&quot; Or s = &quot;?&quot; Then
			oSignPunctCurs.CharPosture = com.sun.star.awt.FontSlant.NONE
		End If
	End If
End Sub
&apos;******************************************************************

</script:module>