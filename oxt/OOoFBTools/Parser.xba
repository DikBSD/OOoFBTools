<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="Parser" script:language="StarBasic">REM  *****  BASIC  *****
Option Explicit

&apos; оформление сносок
Public sFootnoteLeft As String
Public sFootnoteRight As String
Public bFootnoteSpace As Boolean
&apos; применение стиля к тексту сносок
Public bStyleFootnote As Boolean
Public sFootnoteTitle As String
&apos; экспорт сложных структур текста сносок
Public bNotesElements As Boolean
&apos; для аннотации
Public bMergeAnnotationSubTitle As Boolean
&apos; оформление подзаголовков
Public bMergeSubTitle As Boolean
&apos; оформление авторов эпиграфов
Public bMergeEpigraphAuthors As Boolean
&apos; оформление заголовков стихов
Public bMergePoemTitle As Boolean
&apos; оформление авторов стихов
Public bMergePoemAuthors As Boolean
&apos; оформление подзаголовков поэм
Public bMergePoemSubTitle As Boolean
&apos; оформление авторов цитат
Public bMergeCiteAuthors As Boolean
&apos; оформление подзаголовков цитат
Public bMergeCiteSubTitle As Boolean
&apos; удаление пустых строк
Public bDelEL As Boolean
&apos; обработка &quot;проблемных&quot; знаков (&lt; &gt;)
Public bCorrectPara As Boolean
&apos; обработка ссылок внутри документа
Public bDocLinks As Boolean
&apos; сохранение названия картинки, как аттрибута &quot;title&apos;
Public bSaveImageTitle As Boolean
&apos; &quot;Служебная область&quot; для &quot;служебных стилей&quot; (по умолчанию - верх документа)
Public bUp As Boolean

Public lBATIndex As Long 	&apos; Указатель на индекс ячейки массива sBodyParagraphs, хранящей стиль Book Author или Book Title

Public sFootnoteText() As String
Dim iFootnoteCount As Integer
Dim iImgCurrent As Integer	&apos; для формирования номера картинки
Dim sPrevStyle As String 	&apos; название предыдущего стиля - для формирования Уровней из нескольких строк
Dim sPara As String 		&apos; отформатированный текст параграфа

Sub DocumentParser
	Dim oParEnum As Object 	&apos;Счетчик, используемый для перебора параграфов
	Dim oPar As Object 		&apos;Перебираемый параграф
	Dim oSectEnum As Object &apos;Счетчик, используемый для перебора текстовых разделов
	Dim oSect As Object 	&apos;Перебиремый текстовый раздел (section)
	Dim oCEnum As Object 	&apos;Перебирает содержимое, такое как графические объекты
	Dim oContent As Object 	&apos;Перебираемое содержимое
	Dim textGraphService As String, graphicService As String, customShapeService As String
	Dim iCurrentTable As Integer &apos; номер текушей таблицы
	
	textGraphService	= &quot;com.sun.star.text.TextGraphicObject&quot;
	graphicService		= &quot;com.sun.star.drawing.GraphicObjectShape&quot;
	customShapeService	= &quot;com.sun.star.drawing.CustomShape&quot;

	&apos; номер текущей таблицы, если она есть
	iCurrentTable = 0
	&apos; номер текущей картинки, если она есть
	iImgCurrent = 0
	
	lBATIndex = -1 &apos; пока нет ни Автора Книги, ни Названия Книги
			
	&apos; Перебрать параграфы. Таблицы перебираются одновременно с параграфами
	oParEnum = ThisComponent.getText().createEnumeration()
	Do While oParEnum.hasMoreElements()
		oPar = oParEnum.nextElement()
		&apos; сначала ищем таблицы
		If oPar.supportsService(&quot;com.sun.star.text.TextTable&quot;) Then
			&apos; парсер таблицы
			OOo23TextTableParser(iCurrentTable)
		ElseIf oPar.supportsService(&quot;com.sun.star.text.Paragraph&quot;) Then
			oCEnum = oPar.createContentEnumeration(&quot;com.sun.star.text.TextContent&quot;)
			Do While oCEnum.hasMoreElements()
				oContent = oCEnum.nextElement()
				If oContent.supportsService(textGraphService) Then
					&apos; парсер графики TextGraphicObject, привязанной к параграфу
					TextGraphicObjectParagraphParser(oContent)
				ElseIf oContent.supportsService(graphicService) Then
					&apos; парсер графики GraphicObjectShape, привязанной к параграфу
					GraphicObjectShapeParagraphParser(oContent)
				ElseIf oContent.supportsService(customShapeService) Then
					&apos; парсер графики CustomShape, привязанной к параграфу
					GraphicCustomShapeParagraphParser(oContent)
				&apos;ElseIf oContent.supportsService(&quot;com.sun.star.drawing.LineShape&quot;) Then
				&apos;	MsgBox &quot;Line&quot;, 0, &quot;Привязка к параграфу&quot;
				Else
				&apos;	MsgBox &quot;?????&quot;, 0, &quot;Привязка к параграфу&quot;
					If oContent.ShapeType = &quot;FrameShape&quot; Then
						&apos; Парсер Текстовой Врезки
						TextFrameParser(oContent)
					End If
				End If

				
				&apos;If oPar.getString() = &quot;&quot; Then
					&apos;MsgBox &quot;Пустая строка - от картинки&quot;, 0, &quot;Привязка - параграф&quot;
				&apos;End if
				
			Loop

			&apos; Теперь переберем текстовые разделы (sections) и поищем графические объекты,
			&apos; которые привязаны к символу, или вставлены как символы
			oSectEnum = oPar.createEnumeration()
			Dim sAllSectString As String &apos; текст всех секций параграфа (нужен для определения нумерации и маркеров)
&apos;			Dim sPara As String
			sPara = &quot;&quot;
			Do While oSectEnum.hasMoreElements()
				oSect = oSectEnum.nextElement()
				If oSect.TextPortionType = &quot;Text&quot; Then
					If oSect.NumberingIsNumber = True AND oSect.NumberingStyleName &lt;&gt; &quot;Outline&quot; Then &apos; заголовки стиля Heading игнорируются
						sAllSectString = sAllSectString + oSect.getString()
					End If
					&apos; парсер текстового абзаца
					sPara = sPara &amp; InLineParser(oSect)
				ElseIf oSect.TextPortionType = &quot;Frame&quot; Then
					oCEnum = oSect.createContentEnumeration(textGraphService)
					Do While oCEnum.hasMoreElements()
						oContent = oCEnum.nextElement()
						If oContent.supportsService(textGraphService) Then
							&apos; парсер графики TextGraphicObject, привязанной к символу
							TextGraphicObjectSymbolParser(oContent)
						ElseIf oContent.supportsService(graphicService) Then
							&apos; парсер графики GraphicObjectShape, привязанной к символу
							GraphicObjectShapeSymbolParser(oContent)
						ElseIf oContent.supportsService(customShapeService) Then
							&apos; парсер графики CustomShape, привязанной к символу
							GraphicCustomShapeSymbolParser(oContent)
						&apos;ElseIf oContent.supportsService(&quot;com.sun.star.drawing.LineShape&quot;) Then
						&apos;	MsgBox &quot;Line&quot;, 0, &quot;Привязка к символу&quot;
						Else
							&apos;MsgBox &quot;?????&quot;, 0, &quot;Привязка к символу&quot;
							If oContent.ShapeType = &quot;FrameShape&quot; Then
								&apos; Парсер Текстовой Врезки
								TextFrameParser(oContent)
							End If
						End If

					Loop
				ElseIf oSect.TextPortionType = &quot;Footnote&quot; Then
					&apos; парсер сносок
					sPara = sPara + FootEndNoteParser(oSect)
				ElseIf oSect.TextPortionType = &quot;Endnote&quot; Then
					&apos; парсер сносок
					sPara = sPara + FootEndNoteParser(oSect)
				ElseIf oSect.TextPortionType = &quot;TextField&quot; Then
					&apos; текстовые поля
					sPara = sPara &amp; InLineParser(oSect)
				ElseIf oSect.TextPortionType = &quot;Bookmark&quot; Then
					&apos; закладки
					If bDocLinks = True Then
						&apos; сохраняем позицию ОТКУДА ссылка и ее ID
						&apos; не заносим дважды одну и ту же закладку...
						If UBound(sLinksTo) = -1 Then
							AddLinksToArray(UBound(sBodyParagraphs)+1, oSect.Bookmark.Name)
						Else
							If sLinksTo(UBound(sLinksTo), 0) &lt;&gt; UBound(sBodyParagraphs)+1 AND _
								sLinksTo(UBound(sLinksTo), 1) &lt;&gt; oSect.Bookmark.Name Then
								AddLinksToArray(UBound(sBodyParagraphs)+1, oSect.Bookmark.Name)
							End If
						End If
					End If
					&apos;MsgBox &quot;Закладка - &quot; &amp; oSect.Bookmark.Name
				&apos;Else
				&apos;	MsgBox &quot;Что-то другое : &quot; &amp; oSect.TextPortionType
				End If
			Loop
			
			&apos; Теперь - парсер элементов - по стилям
			If oSect.NumberingIsNumber = True AND oSect.NumberingStyleName &lt;&gt; &quot;Outline&quot; Then
				&apos; заголовки стиля Heading игнорируются
				Dim sMarker As String
				sMarker = Mid(oPar.getString(), 1, Len(oPar.getString())-Len(sAllSectString))
				sPara = sMarker &amp; &quot; &quot; &amp; sPara
				If sMarker = &quot;&quot; Then &apos; для маркеров • и других
					sPara = &quot;• &quot; &amp; sPara 
				End If
				sAllSectString = &quot;&quot; &apos; &quot;обнуляем&quot;
			End If
			StyleParser(oPar.ParaStyleName, sPara)
		End If
	Loop
End Sub

Function StyleParser(sParaStyleName As String, sPara As String)
	&apos; перебор по стилям
	If sPara = &quot;&quot; Then
		If sParaStyleName = sStylePoem Then
			&apos; для разных видов стихов (каждое четверостишие - в своем &lt;stanza&gt;)
			AddBodyArray(&quot;&quot;, sParaStyleName, False)
		ElseIf sParaStyleName = sStyleCite Then
			&apos; для пустых строк в цитатах
			AddBodyArray(&quot;&quot;, sParaStyleName, False)
		ElseIf sParaStyleName = sStyleAnnotation Then
			&apos; для пустых строк в аннотациях
			AddBodyArray(&quot;&quot;, sParaStyleName, False)
		ElseIf sParaStyleName = sStyleEpigraph Then
			&apos; для пустых строк в эпиграфах
			AddBodyArray(&quot;&quot;, sParaStyleName, False)
		Else
			AddBodyArray(&quot;&lt;empty-line/&gt;&quot;, &quot;&quot;, False)
		End If
	Else
		Select Case sParaStyleName
			Case sStyleBookTitle
				AddBodyArray(sPara, sParaStyleName, False)
				If lBATIndex = -1 Then
					lBATIndex = UBound(sBodyParagraphs())
				End If
				
			Case sStylePoemTitle
				AddBodyArray(sPara, sParaStyleName, False)
			Case sStylePoemSubTitle
				AddBodyArray(sPara, sParaStyleName, False)
			Case sStylePoem
				AddBodyArray(sPara, sParaStyleName, False)
			Case sStylePoemAuthor
				AddBodyArray(sPara, sParaStyleName, False)
			Case sStylePoemDate
				AddBodyArray(sPara, sParaStyleName, False)
				
			Case sStyleEpigraph
				AddBodyArray(sPara, sParaStyleName, False)
			Case sStyleEpigraphAuthor
				AddBodyArray(sPara, sParaStyleName, False)
				
			Case sStyleCite
				AddBodyArray(sPara, sParaStyleName, False)
			Case sStyleCiteSubTitle
				AddBodyArray(sPara, sParaStyleName, False)
			Case sStyleCiteAuthor
				AddBodyArray(sPara, sParaStyleName, False)
				
			Case sStyleAnnotation
				AddBodyArray(sPara, sParaStyleName, False)
			Case sStyleAnnotationSubTitle
				AddBodyArray(sPara, sParaStyleName, False)
					
			Case sStyleSubTitle
				AddBodyArray(sPara, sParaStyleName, False)
				
			Case sStyleLevel1
				AddBodyArray(sPara, sParaStyleName, True)
			Case sStyleLevel2
				AddBodyArray(sPara, sParaStyleName, True)
			Case sStyleLevel3
				AddBodyArray(sPara, sParaStyleName, True)
			Case sStyleLevel4
				AddBodyArray(sPara, sParaStyleName, True)
			Case sStyleLevel5
				AddBodyArray(sPara, sParaStyleName, True)
			Case sStyleLevel6
				AddBodyArray(sPara, sParaStyleName, True)
			Case sStyleLevel7
				AddBodyArray(sPara, sParaStyleName, True)
			Case sStyleLevel8
				AddBodyArray(sPara, sParaStyleName, True)
			Case sStyleLevel9
				AddBodyArray(sPara, sParaStyleName, True)
			Case sStyleLevel10
				AddBodyArray(sPara, sParaStyleName, True)
				
			Case sStyle_BookAnnotation
				AddBookAnnotation(sPara)
			Case Else &apos; что-то другое или просто параграф
				&apos; Отлов &quot;служебных&quot; стилей, применяемых для формирования раздела &lt;Description&gt; -
				&apos; они не должны быть в основном тексте книги  в fb2 файле.
				If sParaStyleName &lt;&gt; sStyle_BookAuthor AND sParaStyleName &lt;&gt; sStyle_BookTranslator AND _
					sParaStyleName &lt;&gt; sStyle_BookSeries AND sParaStyleName &lt;&gt; sStyle_PaperBookName AND _
					sParaStyleName &lt;&gt; sStyle_PaperBookPublisher AND sParaStyleName &lt;&gt; sStyle_PaperBookCity AND _
					sParaStyleName &lt;&gt; sStyle_PaperBookYear AND sParaStyleName &lt;&gt; sStyle_PaperBookISBN AND _
					sParaStyleName &lt;&gt; sStyle_PaperBookSeries AND sParaStyleName &lt;&gt; sStyle_BookKeywords AND _
					sParaStyleName &lt;&gt; sStyle_DateText AND sParaStyleName &lt;&gt; sStyle_DateValue AND _
					sParaStyleName &lt;&gt; sStyle_CustomInfo Then
					AddBodyArray(sPara, &quot;Para&quot;, False)
				End If
		End Select
	End If
	sPrevStyle = sParaStyleName
End Function

Function InLineParser(oSect As Object) As String
	&apos; перебор по in-line стилям
	If oSect.HyperLinkURL &lt;&gt; &quot;&quot; Then &apos; гиперссылка
		If bCorrectPara = True Then
			InLineParser = &quot;&lt;a l:href=&quot;&quot;&quot; &amp; oSect.HyperLinkURL &amp; &quot;&quot;&quot;&gt;&quot; &amp; CorrectPara(oSect.getString()) &amp; &quot;&lt;/a&gt;&quot;
		Else
			InLineParser = &quot;&lt;a l:href=&quot;&quot;&quot; &amp; oSect.HyperLinkURL &amp; &quot;&quot;&quot;&gt;&quot; &amp; oSect.getString() &amp; &quot;&lt;/a&gt;&quot;
		End If
	ElseIf oSect.CharWeight = com.sun.star.awt.FontWeight.BOLD Then
		If bCorrectPara = True Then
			InLineParser = &quot;&lt;strong&gt;&quot; &amp; CorrectPara(oSect.getString()) &amp; &quot;&lt;/strong&gt;&quot;
		Else
			InLineParser = &quot;&lt;strong&gt;&quot; &amp; oSect.getString() &amp; &quot;&lt;/strong&gt;&quot;
		End If
	ElseIf oSect.CharPosture = com.sun.star.awt.FontSlant.ITALIC Then
		If bCorrectPara = True Then
			InLineParser = &quot;&lt;emphasis&gt;&quot; &amp; CorrectPara(oSect.getString()) &amp; &quot;&lt;/emphasis&gt;&quot;
		Else
			InLineParser = &quot;&lt;emphasis&gt;&quot; &amp; oSect.getString() &amp; &quot;&lt;/emphasis&gt;&quot;
		End If
	ElseIf oSect.CharEscapement &gt; 0 Then
		If bCorrectPara = True Then
			InLineParser = &quot;&lt;sup&gt;&quot; &amp; CorrectPara(oSect.getString()) &amp; &quot;&lt;/sup&gt;&quot;
		Else
			InLineParser = &quot;&lt;sup&gt;&quot; &amp; oSect.getString() &amp; &quot;&lt;/sup&gt;&quot;
		End If
	ElseIf oSect.CharEscapement &lt; 0 Then
		If bCorrectPara = True Then
			InLineParser = &quot;&lt;sub&gt;&quot; &amp; CorrectPara(oSect.getString()) &amp; &quot;&lt;/sub&gt;&quot;
		Else
			InLineParser = &quot;&lt;sub&gt;&quot; &amp; oSect.getString() &amp; &quot;&lt;/sub&gt;&quot;
		End If
	ElseIf oSect.CharShadowed = True OR oSect.CharContoured = True Then &apos; тень или контур
		If bCorrectPara = True Then
			InLineParser = &quot;&lt;code&gt;&quot; &amp; CorrectPara(oSect.getString()) &amp; &quot;&lt;/code&gt;&quot;
		Else
			InLineParser = &quot;&lt;code&gt;&quot; &amp; oSect.getString() &amp; &quot;&lt;/code&gt;&quot;
		End If
	ElseIf oSect.CharStrikeout &gt; 0 Then
		If bCorrectPara = True Then
			InLineParser = &quot;&lt;strikethrough&gt;&quot; &amp; CorrectPara(oSect.getString()) &amp; &quot;&lt;/strikethrough&gt;&quot;
		Else
			InLineParser = &quot;&lt;strikethrough&gt;&quot; &amp; oSect.getString() &amp; &quot;&lt;/strikethrough&gt;&quot;
		End If
	Else
		If bCorrectPara = True Then
			InLineParser = CorrectPara(oSect.getString())
		Else
			InLineParser = oSect.getString()
		End If
	End If
	&apos; проверка на пустой абзац с форматом &lt;strong&gt;, &lt;emphasis&gt;...
	If InLineParser = &quot;&lt;strong&gt;&lt;/strong&gt;&quot; OR _
		InLineParser = &quot;&lt;emphasis&gt;&lt;/emphasis&gt;&quot; OR _
		InLineParser = &quot;&lt;sub&gt;&lt;/sub&gt;&quot; OR _
		InLineParser = &quot;&lt;sup&gt;&lt;/sup&gt;&quot; OR _
		InLineParser = &quot;&lt;code&gt;&lt;/code&gt;&quot; OR _
		InLineParser = &quot;&lt;strikethrough&gt;&lt;/strikethrough&gt;&quot; Then
		InLineParser = &quot;&quot;
	End If
End Function			

Function FootEndNoteParser(oSect As Object) As String
	&apos; парсер сносок
	Dim sNote As String, sNoteText As String
	Dim oFootnoteCursor As Object
	Static i As Integer
	sNote = &quot;&quot;
	i = iFootnoteCount + 1
	If bFootnoteSpace = True Then
		sNote = sNote &amp; &quot; &quot;
	End If
	sNote = sNote &amp; &quot;&lt;a l:href=&quot;&quot;#n&quot; &amp; i &amp; &quot;&quot;&quot; type=&quot;&quot;note&quot;&quot;&gt;&quot; &amp; sFootnoteLeft &amp; i &amp; sFootnoteRight &amp; &quot;&lt;/a&gt;&quot;
	
	ReDim Preserve sFootnoteText(iFootnoteCount) As String

	If bStyleFootnote = True Then &apos; форматирование текста сноски по inline-стилям
		&apos; отформатированный текст сноски сохраняем в массив
		FormatFootnoteText(oSect)
	Else &apos; не применяем inline-стили к тексту сносок
		oFootnoteCursor = oSect.Footnote.createTextCursor()
		oFootnoteCursor.gotoStart(False)
		If bNotesElements = True Then &apos; Экспорт сложных структур
			Dim sTextArray() As String &apos; временный массив для хранения всех строк одного абзаца
			Dim sType As String &apos; тип абзаца - стих, абзац, цитата...
			Do
				oFootnoteCursor.gotoEndOfParagraph(True)
				
				If bCorrectPara = True Then
					sNoteText = CorrectPara(oFootnoteCursor.String)
				Else
					sNoteText = oFootnoteCursor.String
				End If
			
				sType = FootnoteStyleParser(sTextArray, oFootnoteCursor.ParaStyleName, sNoteText)
				sTextArray(UBound(sTextArray())) = sTextArray(UBound(sTextArray())) &amp; chr(10) &amp; sType
			Loop While oFootnoteCursor.gotoNextParagraph(False)
			sFootnoteText(iFootnoteCount) = Join(sTextArray(), chr(10))
		Else &apos; Не экспортируем сложные структуры текста сносок
			Do
				oFootnoteCursor.gotoEndOfParagraph(True)
				sNoteText = sNoteText &amp; oFootnoteCursor.String &amp; chr(10)
			Loop While oFootnoteCursor.gotoNextParagraph(False)
	
			If bCorrectPara = True Then
				sFootnoteText(iFootnoteCount) = CorrectPara(sNoteText)
			Else
				sFootnoteText(iFootnoteCount) = sNoteText
			End If
		End If
	End If
	
	iFootnoteCount = iFootnoteCount + 1
	
	FootEndNoteParser = sNote
End Function

Function FormatFootnoteText(oSect)
	&apos; форматирование текста сноски по стилям
	Dim oFootnoteCursor As Object
	oFootnoteCursor = oSect.Footnote.createTextCursor()
	oFootnoteCursor.gotoStart(False)
	oFootnoteCursor.gotoEndOfParagraph(True)
	
	Dim oEnumF As Object, oSecEnumF As Object, oTextF As Object, oTextPortionF As Object
	Dim sParagF As String, sFNTH As String
		sParagF = &quot;&quot;
	Dim sTextArray() As String &apos; временный массив для хранения всех строк одного абзаца
	Dim sType As String &apos; тип абзаца - стих, абзац, цитата...
	
	Do
		oFootnoteCursor.gotoEndOfParagraph(True)
		oEnumF = oFootnoteCursor.createEnumeration
		While oEnumF.hasMoreElements
			oTextF = oEnumF.nextElement
			oSecEnumF = oTextF.createEnumeration
			While oSecEnumF.hasMoreElements
				oTextPortionF = oSecEnumF.nextElement
				If oTextPortionF.HyperLinkURL &lt;&gt; &quot;&quot; Then &apos; гиперссылка
					If bCorrectPara = True Then
						&apos; Если последний элемент строки сноски - гиперссылка, то в oSecEnumF она отображается дважды (не разобрался пока. почему)
						&apos; Поэтому ставим защиту от этого
						If sFNTH &lt;&gt; CorrectPara(oTextPortionF.String) Then
							sFNTH = CorrectPara(oTextPortionF.String)
							sParagF = sParagF &amp; &quot;&lt;a l:href=&quot;&quot;&quot; &amp; oTextPortionF.HyperLinkURL &amp; &quot;&quot;&quot;&gt;&quot; &amp; sFNTH &amp; &quot;&lt;/a&gt;&quot;
						End If
					Else
						&apos; Поэтому ставим защиту от этого
						If sFNTH &lt;&gt; oTextPortionF.String Then
							sFNTH = oTextPortionF.String
							sParagF = sParagF &amp; &quot;&lt;a l:href=&quot;&quot;&quot; &amp; oTextPortionF.HyperLinkURL &amp; &quot;&quot;&quot;&gt;&quot; &amp; sFNTH &amp; &quot;&lt;/a&gt;&quot;
						End If
					End If
				Elseif oTextPortionF.CharWeight = com.sun.star.awt.FontWeight.BOLD Then
					If bCorrectPara = True Then
						sParagF = sParagF &amp; &quot;&lt;strong&gt;&quot; &amp; CorrectPara(oTextPortionF.String) &amp; &quot;&lt;/strong&gt;&quot;
					Else
						sParagF = sParagF &amp; &quot;&lt;strong&gt;&quot; &amp; oTextPortionF.String &amp; &quot;&lt;/strong&gt;&quot;
					End If
				ElseIf oTextPortionF.CharPosture = com.sun.star.awt.FontSlant.ITALIC Then
					If bCorrectPara = True Then
						sParagF = sParagF &amp; &quot;&lt;emphasis&gt;&quot; &amp; CorrectPara(oTextPortionF.String) &amp; &quot;&lt;/emphasis&gt;&quot;
					Else
						sParagF = sParagF &amp; &quot;&lt;emphasis&gt;&quot; &amp; oTextPortionF.String &amp; &quot;&lt;/emphasis&gt;&quot;
					End If
				ElseIf oTextPortionF.CharEscapement &gt; 0 Then
					If bCorrectPara = True Then
						sParagF = sParagF &amp; &quot;&lt;sup&gt;&quot; &amp; CorrectPara(oTextPortionF.String) &amp; &quot;&lt;/sup&gt;&quot;
					Else
						sParagF = sParagF &amp; &quot;&lt;sup&gt;&quot; &amp; oTextPortionF.String &amp; &quot;&lt;/sup&gt;&quot;
					End If
				ElseIf oTextPortionF.CharEscapement &lt; 0 Then
					If bCorrectPara = True Then
						sParagF = sParagF &amp; &quot;&lt;sub&gt;&quot; &amp; CorrectPara(oTextPortionF.String) &amp; &quot;&lt;/sub&gt;&quot;
					Else
						sParagF = sParagF &amp; &quot;&lt;sub&gt;&quot; &amp; oTextPortionF.String &amp; &quot;&lt;/sub&gt;&quot;
					End If
				ElseIf oTextPortionF.CharShadowed = True OR oTextPortionF.CharContoured = True Then &apos; тень или контур
					If bCorrectPara = True Then
						sParagF = sParagF &amp; &quot;&lt;code&gt;&quot; &amp; CorrectPara(oTextPortionF.String) &amp; &quot;&lt;/code&gt;&quot;
					Else
						sParagF = sParagF &amp; &quot;&lt;code&gt;&quot; &amp; oTextPortionF.String &amp; &quot;&lt;/code&gt;&quot;
					End If
				ElseIf oTextPortionF.CharStrikeout &gt; 0 Then
					If bCorrectPara = True Then
						sParagF = sParagF &amp; &quot;&lt;strikethrough&gt;&quot; &amp; CorrectPara(oTextPortionF.String) &amp; &quot;&lt;/strikethrough&gt;&quot;
					Else
						sParagF = sParagF &amp; &quot;&lt;strikethrough&gt;&quot; &amp; oTextPortionF.String &amp; &quot;&lt;/strikethrough&gt;&quot;
					End If
				Else
					If bCorrectPara = True Then
						sParagF = sParagF &amp; CorrectPara(oTextPortionF.String)
					Else
						sParagF = sParagF &amp; oTextPortionF.String
					End If
				End If
			Wend
			&apos; парсер стилей сносок
			If bNotesElements = True Then
				sType = FootnoteStyleParser(sTextArray, oFootnoteCursor.ParaStyleName, sParagF)
				sTextArray(UBound(sTextArray())) = sTextArray(UBound(sTextArray())) &amp; chr(10) &amp; sType
				sParagF = &quot;&quot;
			End If	
		Wend
		If bNotesElements = False Then
			sParagF = sParagF &amp; chr(10)
		End If
	Loop While oFootnoteCursor.gotoNextParagraph(False)
	If bNotesElements = True Then
		sFootnoteText(iFootnoteCount) = Join(sTextArray(), chr(10))
	Else
		sFootnoteText(iFootnoteCount) = sParagF
	End If
End Function

Function TextGraphicObjectParagraphParser(oContent As Object)
	&apos; парсер графики TextGraphicObject, привязанной к параграфу
	If bSaveImageTitle=True Then
		AddBodyArray(&quot;&lt;image l:href=&quot;&quot;#img_&quot; &amp; iImgCurrent &amp; &quot;&quot;&quot; title=&quot;&quot;&quot; &amp; oContent.getName() &amp; &quot;&quot;&quot;/&gt;&quot;, &quot;Image&quot;, False)
	Else
		AddBodyArray(&quot;&lt;image l:href=&quot;&quot;#img_&quot; &amp; iImgCurrent &amp; &quot;&quot;&quot;/&gt;&quot;, &quot;Image&quot;, False)
	End If
	iImgCurrent = iImgCurrent+1
End Function

Function GraphicObjectShapeParagraphParser(oContent As Object)
	&apos; парсер графики формы GraphicObjectShape, привязанной к параграфу
	If bSaveImageTitle=True Then
		AddBodyArray(&quot;&lt;image l:href=&quot;&quot;#img_&quot; &amp; iImgCurrent &amp; &quot;&quot;&quot; title=&quot;&quot;&quot; &amp; oContent.getName() &amp; &quot;&quot;&quot;/&gt;&quot;, &quot;Image&quot;, False)
	Else
		AddBodyArray(&quot;&lt;image l:href=&quot;&quot;#img_&quot; &amp; iImgCurrent &amp; &quot;&quot;&quot;/&gt;&quot;, &quot;Image&quot;, False)
	End If
	iImgCurrent = iImgCurrent+1
End Function

&apos; парсер векторной графики
Function GraphicCustomShapeParagraphParser(oContent As Object)
	&apos; парсер графики CustomShape, привязанной к параграфу
	If bSaveImageTitle=True Then
		AddBodyArray(&quot;&lt;image l:href=&quot;&quot;#img_&quot; &amp; iImgCurrent &amp; &quot;&quot;&quot; title=&quot;&quot;&quot; &amp; oContent.getName() &amp; &quot;&quot;&quot;/&gt;&quot;, &quot;Image&quot;, False)
	Else
		AddBodyArray(&quot;&lt;image l:href=&quot;&quot;#img_&quot; &amp; iImgCurrent &amp; &quot;&quot;&quot;/&gt;&quot;, &quot;Image&quot;, False)
	End If
	iImgCurrent = iImgCurrent+1
End Function

Function TextGraphicObjectSymbolParser(oContent As Object)
	&apos; парсер графики TextGraphicObject, привязанной к символу и как символ
	If oContent.AnchorType = 1 Then
		sPara = sPara &amp; &quot;&lt;image l:href=&quot;&quot;#img_&quot; &amp; iImgCurrent &amp; &quot;&quot;&quot;/&gt;&quot;
	Else
		If bSaveImageTitle=True Then
			AddBodyArray(&quot;&lt;image l:href=&quot;&quot;#img_&quot; &amp; iImgCurrent &amp; &quot;&quot;&quot; title=&quot;&quot;&quot; &amp; oContent.getName() &amp; &quot;&quot;&quot;/&gt;&quot;, &quot;Image&quot;, False)
		Else
			AddBodyArray(&quot;&lt;image l:href=&quot;&quot;#img_&quot; &amp; iImgCurrent &amp; &quot;&quot;&quot;/&gt;&quot;, &quot;Image&quot;, False)
		End If
	End If
	iImgCurrent = iImgCurrent+1
End Function

Function GraphicObjectShapeSymbolParser(oContent As Object)
	&apos; парсер графики GraphicObjectShape, привязанной к символу
	If bSaveImageTitle=True Then
		AddBodyArray(&quot;&lt;image l:href=&quot;&quot;#img_&quot; &amp; iImgCurrent &amp; &quot;&quot;&quot; title=&quot;&quot;&quot; &amp; oContent.getName() &amp; &quot;&quot;&quot;/&gt;&quot;, &quot;Image&quot;, False)
	Else
		AddBodyArray(&quot;&lt;image l:href=&quot;&quot;#img_&quot; &amp; iImgCurrent &amp; &quot;&quot;&quot;/&gt;&quot;, &quot;Image&quot;, False)
	End If
	iImgCurrent = iImgCurrent+1
End Function

&apos; парсер векторной графики
Function GraphicCustomShapeSymbolParser(oContent As Object)
	&apos; парсер графики CustomShape, привязанной к символу
	If bSaveImageTitle=True Then
		AddBodyArray(&quot;&lt;image l:href=&quot;&quot;#img_&quot; &amp; iImgCurrent &amp; &quot;&quot;&quot; title=&quot;&quot;&quot; &amp; oContent.getName() &amp; &quot;&quot;&quot;/&gt;&quot;, &quot;Image&quot;, False)
	Else
		AddBodyArray(&quot;&lt;image l:href=&quot;&quot;#img_&quot; &amp; iImgCurrent &amp; &quot;&quot;&quot;/&gt;&quot;, &quot;Image&quot;, False)
	End If
	iImgCurrent = iImgCurrent+1
End Function

Function FormatCellText(CellCursor As Object, Cell As Object) As String
	&apos; перебор по in-line стилям
	If CellCursor.HyperLinkURL &lt;&gt; &quot;&quot; Then &apos; гиперссылка
		If bCorrectPara = True Then
			FormatCellText = &quot;&lt;a l:href=&quot;&quot;&quot; &amp; CellCursor.HyperLinkURL &amp; &quot;&quot;&quot;&gt;&quot; &amp; CorrectPara(Cell.getString()) &amp; &quot;&lt;/a&gt;&quot;
		Else
			FormatCellText = &quot;&lt;a l:href=&quot;&quot;&quot; &amp; CellCursor.HyperLinkURL &amp; &quot;&quot;&quot;&gt;&quot; &amp; Cell.getString() &amp; &quot;&lt;/a&gt;&quot;
		End If
	ElseIf CellCursor.CharWeight = com.sun.star.awt.FontWeight.BOLD Then
		If bCorrectPara = True Then
			FormatCellText = &quot;&lt;strong&gt;&quot; &amp; CorrectPara(Cell.getString()) &amp; &quot;&lt;/strong&gt;&quot;
		Else
			FormatCellText = &quot;&lt;strong&gt;&quot; &amp; Cell.getString() &amp; &quot;&lt;/strong&gt;&quot;
		End If
	ElseIf CellCursor.CharPosture = com.sun.star.awt.FontSlant.ITALIC Then
		If bCorrectPara = True Then
			FormatCellText = &quot;&lt;emphasis&gt;&quot; &amp; CorrectPara(Cell.getString()) &amp; &quot;&lt;/emphasis&gt;&quot;
		Else
			FormatCellText = &quot;&lt;emphasis&gt;&quot; &amp; Cell.getString() &amp; &quot;&lt;/emphasis&gt;&quot;
		End If
	ElseIf CellCursor.CharEscapement &gt; 0 Then
		If bCorrectPara = True Then
			FormatCellText = &quot;&lt;sup&gt;&quot; &amp; CorrectPara(Cell.getString()) &amp; &quot;&lt;/sup&gt;&quot;
		Else
			FormatCellText = &quot;&lt;sup&gt;&quot; &amp; Cell.getString() &amp; &quot;&lt;/sup&gt;&quot;
		End If
	ElseIf CellCursor.CharEscapement &lt; 0 Then
		If bCorrectPara = True Then
			FormatCellText = &quot;&lt;sub&gt;&quot; &amp; CorrectPara(Cell.getString()) &amp; &quot;&lt;/sub&gt;&quot;
		Else
			FormatCellText = &quot;&lt;sub&gt;&quot; &amp; Cell.getString() &amp; &quot;&lt;/sub&gt;&quot;
		End If
	ElseIf CellCursor.CharShadowed = True OR CellCursor.CharContoured = True Then &apos; тень или контур
		If bCorrectPara = True Then
			FormatCellText = &quot;&lt;code&gt;&quot; &amp; CorrectPara(Cell.getString()) &amp; &quot;&lt;/code&gt;&quot;
		Else
			FormatCellText = &quot;&lt;code&gt;&quot; &amp; Cell.getString() &amp; &quot;&lt;/code&gt;&quot;
		End If
	ElseIf CellCursor.CharStrikeout &gt; 0 Then
		If bCorrectPara = True Then
			FormatCellText = &quot;&lt;strikethrough&gt;&quot; &amp; CorrectPara(Cell.getString()) &amp; &quot;&lt;/strikethrough&gt;&quot;
		Else
			FormatCellText = &quot;&lt;strikethrough&gt;&quot; &amp; Cell.getString() &amp; &quot;&lt;/strikethrough&gt;&quot;
		End If
	Else
		If bCorrectPara = True Then
			FormatCellText = CorrectPara(Cell.getString())
		Else
			FormatCellText = Cell.getString()
		End If
	End If
End Function

Function OOo23TextTableParser(iCurrentTable As Integer)
	Dim iHeaderRowCount As Integer
	Dim oTables As Object, oTable As Object
	Dim sTable As String &apos; текст таблицы в fb2.1 формате
	Dim CellNames, Cell, CellCursor
	Dim iCel As Integer, iRow As Integer, iCol As Integer
	&apos; все таблицы документа
	oTables = ThisComponent.getTextTables() 
	&apos; получаем текущую таблицу
	oTable = oTables.getByIndex(iCurrentTable)
	iCel = 0 &apos; текушая ячейка
	CellNames = oTable.getCellNames()
	
	If OOoWriterVersion &lt; &quot;2.3&quot; Then
		&apos; не поддерживается свойство таблиц HeaderRowCount - не сможем отловить число заголовков
		If oTable.RepeatHeadline = True Then
			iHeaderRowCount = 1
		Else 
			iHeaderRowCount = 0
		End If
	Else
		iHeaderRowCount = oTable.HeaderRowCount &apos; число строк заголовка таблицы
	End If
	
	sTable = &quot;&lt;table&gt;&quot; &amp; chr(10)
	&apos; формируем заголовки, если они есть
	Dim i As Integer
	If iHeaderRowCount &gt; 0 Then
		For i = 0 To iHeaderRowCount-1
			sTable = sTable &amp; &quot;&lt;tr align=&quot;&quot;&quot; &amp; sHeaderTRA &amp; &quot;&quot;&quot;&gt;&quot; &amp; chr(10)
			For iCol = 0 To oTable.Columns.Count-1
				Cell = oTable.getCellByName(CellNames(iCel))
				CellCursor = Cell.createTextCursor()
				&apos; влева - 0, вправо - 1, по центру - 3, по ширине - 2
				sTable = sTable &amp; &quot;&lt;th align=&quot;&quot;&quot; &amp; GetParagraphAdjust(CellCursor) &amp; &quot;&quot;&quot; valign=&quot;&quot;&quot; &amp; sHeaderTVA &amp; &quot;&quot;&quot;&gt;&quot; &amp; FormatCellText(CellCursor, Cell) &amp; &quot;&lt;/th&gt;&quot; &amp; chr(10)
				iCel = iCel+1
			Next iCol
			sTable = sTable &amp; &quot;&lt;/tr&gt;&quot; &amp; chr(10)
		Next i
	End If
	&apos; строки таблицы
	For iRow = iHeaderRowCount To oTable.Rows.Count-1
		sTable = sTable &amp; &quot;&lt;tr align=&quot;&quot;&quot; &amp; sLineTRA &amp; &quot;&quot;&quot;&gt;&quot; &amp; chr(10)
		For iCol = 0 To oTable.Columns.Count-1
			Cell = oTable.getCellByName(CellNames(iCel))
			CellCursor = Cell.createTextCursor()
			&apos; влева - 0, вправо - 1, по центру - 3, по ширине - 2
			sTable = sTable &amp; &quot;&lt;td align=&quot;&quot;&quot; &amp; GetParagraphAdjust(CellCursor) &amp; &quot;&quot;&quot; valign=&quot;&quot;&quot; &amp; sLineTVA &amp; &quot;&quot;&quot;&gt;&quot; &amp; FormatCellText(CellCursor, Cell) &amp; &quot;&lt;/td&gt;&quot; &amp; chr(10)
			iCel = iCel+1
		Next iCol
		sTable = sTable &amp; &quot;&lt;/tr&gt;&quot; &amp; chr(10)
	Next iRow
	sTable = sTable &amp; &quot;&lt;/table&gt;&quot;
	iCurrentTable = iCurrentTable + 1 &apos; на следующую таблицу, если она есть
	AddBodyArray(sTable, &quot;Table&quot;, False)
End Function

Function TextFrameParser(oContent As Object)
	&apos; Парсер Текстовой Врезки
	Dim sText() As String, iC As Integer, sTable As String, sCite As String
	sText = Split(oContent.getString(),chr(10))
	Select Case sTextFrameToFB2
		Case &quot;Таблица&quot;
			sTable = &quot;&lt;table&gt;&quot; &amp; chr(10)
			For iC=0 To UBound(sText)
				If Len(sText(iC)) &gt; 1 Then &apos; пропускаем пустые параграфы
					sTable = sTable &amp; &quot;&lt;tr align=&quot;&quot;center&quot;&quot;&gt;&quot; &amp; chr(10)
					sTable = sTable &amp; &quot;&lt;td align=&quot;&quot;&quot; &amp; sAdjTextFrame &amp; &quot;&quot;&quot;  valign=&quot;&quot;middle&quot;&quot;&gt;&quot; &amp; sText(iC) &amp; &quot;&lt;/td&gt;&quot; &amp; chr(10)
					sTable = sTable &amp; &quot;&lt;/tr&gt;&quot; &amp; chr(10)
				End If
			Next iC
			sTable = sTable &amp; &quot;&lt;/table&gt;&quot;
			AddBodyArray(sTable, &quot;Table&quot;, False)
		Case &quot;Цитата&quot;
			For iC=0 To UBound(sText)
				If Len(sText(iC)) &gt; 1 Then &apos; пустые параграфы
					sCite = sCite &amp; &quot;&lt;p&gt;&quot; &amp; sText(iC) &amp; &quot;&lt;/p&gt;&quot; &amp; chr(10)
				Else
					sCite = sCite &amp; &quot;&lt;empty-line/&gt;&quot; &amp; chr(10)
				End If
			Next iC
			sCite = Mid(sCite, 4, Len(sCite))
			sCite = Mid(sCite, 1, Len(sCite)-5)
			AddBodyArray(sCite, &quot;Cite&quot;, False)
		Case Else
			For iC=0 To UBound(sText)
				AddBodyArray(sText(iC), &quot;Para&quot;, False)
			Next iC
	End Select
End Function

Function GetParagraphAdjust(CellCursor) As String
	Select Case CellCursor.paraAdjust
		Case com.sun.star.style.ParagraphAdjust.LEFT
			GetParagraphAdjust = &quot;left&quot;
		Case com.sun.star.style.ParagraphAdjust.CENTER
			GetParagraphAdjust = &quot;center&quot;
		Case com.sun.star.style.ParagraphAdjust.RIGHT
			GetParagraphAdjust = &quot;right&quot;
		Case Else
			GetParagraphAdjust =  &quot;left&quot;
	End Select
End Function

Function CorrectPara(sPara As String) As String
	&apos; корректировка абзаца - отлов символов &lt;,&gt;,&amp;
	Dim SA() As String
	Dim i As Integer, iLen As Integer
	Dim newPara As String, sChar As String
	iLen = Len(sPara)&apos; длина анализируемой строки
	For i = 1 To iLen
		sChar = Mid(sPara, i, 1)
		If sChar = &quot;&amp;&quot; Then
			newPara = newPara + &quot;&amp;amp;&quot;
		ElseIf sChar = &quot;&lt;&quot; Then
			newPara = newPara + &quot;&amp;lt;&quot;
		ElseIf sChar = &quot;&gt;&quot; Then
			newPara = newPara + &quot;&amp;gt;&quot;
		Else
			newPara = newPara + sChar
		End If
	Next i
	CorrectPara = newPara
End Function

Function AddBodyArray(sPara As String, TextType As String, bLevel As Boolean)
	Dim l As Long
	l = Ubound(sBodyParagraphs(), 1) + 1
	&apos; для уровней - проверка на несколько строк
	If bLevel = False Then 
		If l &gt; 0 Then
			ReDim Preserve sBodyParagraphs(l, 1)
		Else Redim sBodyParagraphs(l, 1)
		End If
	
		sBodyParagraphs(l,0) = sPara
		sBodyParagraphs(l,1) = TextType
	Else
		If TextType &lt;&gt; sPrevStyle Then &apos; Разные уровни
			If l &gt; 0 Then
				ReDim Preserve sBodyParagraphs(l, 1)
			Else Redim sBodyParagraphs(l, 1)
			End If
			sBodyParagraphs(l,0) = &quot;&lt;p&gt;&quot; &amp; sPara &amp; &quot;&lt;/p&gt;&quot;
			sBodyParagraphs(l,1) = TextType
		Else &apos; Одинаковые уровни - несколько строк - собираем их в один элемент
			Dim sText As String
			sText = sBodyParagraphs(UBound(sBodyParagraphs),0)
			sBodyParagraphs(UBound(sBodyParagraphs),0) = sText &amp; chr(10) &amp; &quot;&lt;p&gt;&quot; &amp; sPara &amp; &quot;&lt;/p&gt;&quot;
		End If
	End If
	oProgressBar.setValue(l) &apos; Статусбар
End Function

Function AddLinksToArray(lTo As Long, sID As String)
	&apos; формирование строк массива  КУДА (№ строки массива sBodyParagraphs)
	Dim l As Long
	l = Ubound(sLinksTo(), 1) + 1
	If l &gt; 0 Then
		ReDim Preserve sLinksTo(l, 1)
	Else Redim sLinksTo(l, 1)
	End If
	sLinksTo(l,0) = lTo
	sLinksTo(l,1) = sID
End Function

Function OOoWriterVersion() As String
	Dim oSet, oConfigProvider
	Dim oParm(0) As New com.sun.star.beans.PropertyValue
	oConfigProvider = createUnoService(&quot;com.sun.star.configuration.ConfigurationProvider&quot;)
	oParm(0).Name = &quot;nodepath&quot;
	oParm(0).Value = &quot;/org.openoffice.Setup/Product&quot;
	oSet = oConfigProvider.createInstanceWithArguments(&quot;com.sun.star.configuration.ConfigurationAccess&quot;,oParm())
	OOoWriterVersion = oSet.getByName(&quot;ooSetupVersion&quot;)
End Function

Function AddBookAnnotation(sPara As String)
	&apos; Собираем всю &quot;отформатированную&quot; Аннотацию на Книгу
	Dim l As Long
	l = Ubound(sBookAnnotation()) + 1
	ReDim Preserve sBookAnnotation(l)
	sBookAnnotation(l) = sPara
	oProgressBar.setValue(UBound(sBodyParagraphs),0 + UBound(sBookAnnotation) &apos; Статусбар
End Function

Function AddNotesArray(sTextArray As String, TextType As String, sPara As String, bLevel As Boolean)
	Dim l As Long
	l = Ubound(sTextArray()) + 1
	&apos; для уровней - проверка на несколько строк
	If bLevel = False Then 
		If l &gt; 0 Then
			ReDim Preserve sTextArray(l)
		Else Redim sTextArray(l)
		End If
		sTextArray(l) = sPara
	Else
		If TextType &lt;&gt; sPrevStyle Then &apos; Разные уровни
			If l &gt; 0 Then
				ReDim Preserve sTextArray(l)
			Else Redim sTextArray(l)
			End If
			sTextArray(l) = &quot;&lt;p&gt;&quot; &amp; sPara &amp; &quot;&lt;/p&gt;&quot;
		Else &apos; Одинаковые уровни - несколько строк - собираем их в один элемент
			&apos; удаляем в конце строки последнего элемента массива символ  тип абзаца
			DelEndType(sTextArray)
			sTextArray(UBound(sTextArray)) = sTextArray(UBound(sTextArray)) &amp; &quot;&lt;p&gt;&quot; &amp; sPara &amp; &quot;&lt;/p&gt;&quot;
		End If
	End If
End Function

Function DelEndType(sTextArray As String)
	&apos; удаляем в конце строки последнего элемента массива символ  тип абзаца
	Dim sTempArray() As String, i As Integer, sResult As String
	sTempArray = Split(sTextArray(UBound(sTextArray)), chr(10))
	sResult = &quot;&quot;
	For i=LBound(sTempArray) To UBound(sTempArray)-1
		sResult = sResult &amp; sTempArray(i)
	Next i
	sTextArray(UBound(sTextArray)) = sResult
End Function

Function FootnoteStyleParser(sTextArray As String, sParaStyleName As String, sPara As String) As String
	&apos; перебор по стилям
	Dim sParaType As String
	sParaType = sParaStyleName
	If sPara = &quot;&quot; Then
		If sParaStyleName = sStylePoem Then
			&apos; для разных видов стихов (каждое четверостишие - в своем &lt;stanza&gt;)
			AddNotesArray(sTextArray, sParaStyleName, &quot;&quot;, False)
		ElseIf sParaStyleName = sStyleCite Then
			&apos; для пустых строк в цитатах
			AddNotesArray(sTextArray, sParaStyleName, &quot;&quot;, False)
		ElseIf sParaStyleName = sStyleAnnotation Then
			&apos; для пустых строк в аннотациях
			AddNotesArray(sTextArray, sParaStyleName, &quot;&quot;, False)
		ElseIf sParaStyleName = sStyleEpigraph Then
			&apos; для пустых строк в эпиграфах
			AddNotesArray(sTextArray, sParaStyleName, &quot;&quot;, False)
		Else
			AddNotesArray(sTextArray, sParaStyleName, &quot;&quot;, False)
			sParaType = &quot;&quot;
		End If
	Else
		Select Case sParaStyleName
			Case sStylePoemTitle
				AddNotesArray(sTextArray, sParaStyleName, sPara, False)
			Case sStylePoemSubTitle
				AddNotesArray(sTextArray, sParaStyleName, sPara, False)
			Case sStylePoem
				AddNotesArray(sTextArray, sParaStyleName, sPara, False)
			Case sStylePoemAuthor
				AddNotesArray(sTextArray, sParaStyleName, sPara, False)
			Case sStylePoemDate
				AddNotesArray(sTextArray, sParaStyleName, sPara, False)
				
			Case sStyleEpigraph
				AddNotesArray(sTextArray, sParaStyleName, sPara, False)
			Case sStyleEpigraphAuthor
				AddNotesArray(sTextArray, sParaStyleName, sPara, False)
				
			Case sStyleCite
				AddNotesArray(sTextArray, sParaStyleName, sPara, False)
			Case sStyleCiteSubTitle
				AddNotesArray(sTextArray, sParaStyleName, sPara, False)
			Case sStyleCiteAuthor
				AddNotesArray(sTextArray, sParaStyleName, sPara, False)
				
			Case sStyleAnnotation
				AddNotesArray(sTextArray, sParaStyleName, sPara, False)
			Case sStyleAnnotationSubTitle
				AddNotesArray(sTextArray, sParaStyleName, sPara, False)
					
			Case sStyleSubTitle
				AddNotesArray(sTextArray, sParaStyleName, sPara, False)
				
			Case sStyleLevel1
				AddNotesArray(sTextArray, sParaStyleName, sPara, True)
			Case sStyleLevel2
				AddNotesArray(sTextArray, sParaStyleName, sPara, True)
			Case sStyleLevel3
				AddNotesArray(sTextArray, sParaStyleName, sPara, True)
			Case sStyleLevel4
				AddNotesArray(sTextArray, sParaStyleName, sPara, True)
			Case sStyleLevel5
				AddNotesArray(sTextArray, sParaStyleName, sPara, True)
			Case sStyleLevel6
				AddNotesArray(sTextArray, sParaStyleName, sPara, True)
			Case sStyleLevel7
				AddNotesArray(sTextArray, sParaStyleName, sPara, True)
			Case sStyleLevel8
				AddNotesArray(sTextArray, sParaStyleName, sPara, True)
			Case sStyleLevel9
				AddNotesArray(sTextArray, sParaStyleName, sPara, True)
			Case sStyleLevel10
				AddNotesArray(sTextArray, sParaStyleName, sPara, True)
				
			Case Else &apos; что-то другое или просто параграф
				AddNotesArray(sTextArray, sParaStyleName, sPara, False)
				sParaType = &quot;Para&quot;
		End Select
	End If
	sPrevStyle = sParaStyleName
	FootnoteStyleParser = sParaType
End Function

</script:module>