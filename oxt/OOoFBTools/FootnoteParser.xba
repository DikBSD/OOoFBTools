<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="FootnoteParser" script:language="StarBasic">&apos;====================================================================================================
&apos; 										модуль парсера сносок
&apos;====================================================================================================
Option Explicit

Private	vFootnoteText() As Variant	&apos; массив текста всех сносок по абзацам с их &quot;аттрибутами&quot;
Private	vEndnoteText()  As Variant	&apos; массив текста всех концевых сносок по абзацам с их &quot;аттрибутами&quot;
Private sPreviousStyle	As String	&apos; название предыдущего стиля - для формирования Уровней из нескольких строк в тексте одной и той же сносок
Private bFENoteSeparately	As Boolean &apos; True - вывод сносок и концевых в разные блоки
Public	sFNLinksTo()	As String	&apos; массив ссылок КУДА и их ID теста сносок

&apos; основной парсер текста сносок
Function FootEndNoteParser( oSect As Object ) As String
	Dim bIsFootNote As Boolean	: bIsFootNote = False &apos; флаг - сноска (True) или концевая сноска (False)
	Dim sNote 		As String	: sNote = &quot;&quot;
	Dim lCurrentPara As Long : lCurrentPara = -1 &apos; текущий абзац текста сноски
	
	&apos; форматирование текста сноски по стилям
	Dim oFootnoteCursor As Object : oFootnoteCursor = oSect.Footnote.createTextCursor()
	oFootnoteCursor.gotoStart(False)
	oFootnoteCursor.gotoEndOfParagraph(True)
	
	Static fn As Integer : fn = iFootnoteCount + 1
	
	If bFENoteSeparately = True Then
		&apos; раздельный вывод сносок и концевых сносок в разные блоки
		If FNType( oFootnoteCursor ) = &quot;FootNote&quot; Then
			If bFootnoteSpace = True Then sNote = sNote &amp; &quot; &quot;
			sNote = sNote &amp; &quot;&lt;a l:href=&quot;&quot;#n&quot; &amp; fn &amp; &quot;&quot;&quot; type=&quot;&quot;note&quot;&quot;&gt;&quot; &amp; sFootnoteLeft &amp; fn &amp; sFootnoteRight &amp; &quot;&lt;/a&gt;&quot;
			bIsFootNote = True
		Else
			Static en As Integer : en = iEndnoteCount + 1
			If bENSpace = True Then sNote = sNote &amp; &quot; &quot;
			sNote = sNote &amp; &quot;&lt;a l:href=&quot;&quot;#c&quot; &amp; en &amp; &quot;&quot;&quot; type=&quot;&quot;comment&quot;&quot;&gt;&quot; &amp; sENLeft &amp; en &amp; sENRight &amp; &quot;&lt;/a&gt;&quot;
			bIsFootNote = False
		End If
	Else
		&apos; совместный вывод сносок и концевых сносок в один блок
		If bFootnoteSpace = True Then sNote = sNote &amp; &quot; &quot;
		sNote = sNote &amp; &quot;&lt;a l:href=&quot;&quot;#n&quot; &amp; fn &amp; &quot;&quot;&quot; type=&quot;&quot;note&quot;&quot;&gt;&quot; &amp; sFootnoteLeft &amp; fn &amp; sFootnoteRight &amp; &quot;&lt;/a&gt;&quot;
		bIsFootNote = True
	End If
	
	
	Dim oEnumF As Object, oSecEnumF As Object, oTextF As Object, oTextPortionF As Object
	Dim sFNTH		As String
	Dim sParagFN	As String : sParagFN	= &quot;&quot;
	Dim sBookMark	As String : sBookMark	= &quot;&quot;

	Dim asFNPart()		As String	&apos; временный массив для хранения всех данных одного абзаца текста сноски
	Dim vTextArray()	As Variant	&apos; временный массив для хранения всех строк одного абзаца текста сноски
	
	Dim oCEnum			As Object	&apos;Перебирает содержимое, такое как графические объекты
	Dim oContent		As Object	&apos;Перебираемое содержимое

	Do
		oFootnoteCursor.gotoEndOfParagraph(True)
		oEnumF = oFootnoteCursor.createEnumeration()
		While oEnumF.hasMoreElements()
			lCurrentPara = lCurrentPara + 1
			sParagFN	= &quot;&quot;
			oTextF		= oEnumF.nextElement()
			oSecEnumF	= oTextF.createEnumeration()
			&apos;////////////////////////////////////////////////////////////
			oCEnum = oTextF.createContentEnumeration(&quot;com.sun.star.text.TextContent&quot;)
			Do While oCEnum.hasMoreElements()
				oContent = oCEnum.nextElement()
				If isRasterGraphic( oContent ) Then
					&apos; парсер растровой графики, привязанной к параграфу
					MakeGraphic( oSect, oContent, True, sParagFN, True )
				ElseIf isVectorGraphic( oContent ) Then
					&apos; парсер векторной графики, привязанной к параграфаму
					MakeGraphic( oSect, oContent, True, sParagFN, True )
				ElseIf isTextEmbeddedObject( oContent ) Then
					&apos; парсер OLE, формул и диаграм, привязка &quot;параграф&quot;
					MakeGraphic( oSect, oContent, True, sParagFN, True )
				End If
			Loop
						
			&apos;////////////////////////////////////////////////////////////
			While oSecEnumF.hasMoreElements()
				oTextPortionF = oSecEnumF.nextElement()
				&apos;////////////////////////////////////////////////////////////
				If oTextPortionF.TextPortionType = &quot;Frame&quot; Then
					oCEnum = oTextPortionF.createContentEnumeration(&quot;com.sun.star.text.TextGraphicObject&quot;)
					Do While oCEnum.hasMoreElements()
						oContent = oCEnum.nextElement()
						If isRasterGraphic( oContent ) Then
							&apos; парсер растровой графики, привязанной к символу
							MakeGraphic( oSect, oContent, True, sParagFN, True )
						ElseIf isVectorGraphic( oContent ) Then
							&apos; парсер векторной графики, привязанной к символу
							MakeGraphic( oSect, oContent, True, sParagFN, True )
						ElseIf isTextEmbeddedObject( oContent ) Then
							&apos; парсер OLE, формул и диаграм, привязка &quot;символ&quot;
							MakeGraphic( oSect, oContent, True, sParagFN, True )
						End If
					Loop
				ElseIf oTextPortionF.TextPortionType = &quot;Bookmark&quot; Then
					&apos; закладки
					If bDocLinks = True Then
						Dim TextPortionBookmark As String : TextPortionBookmark = oTextPortionF.Bookmark.getName()
						If sBookmark &lt;&gt; &quot;&quot; Then
							If InStr( sBookmark, TextPortionBookmark ) = 0 Then
								&apos; не заносим дважды одну и ту же закладку...
								sBookmark = sBookmark &amp; &quot;?&quot; &amp; TextPortionBookmark
							End If
						Else
							sBookmark = TextPortionBookmark
						End If
						
						&apos; сохраняем позицию ОТКУДА ссылка и ее ID
						If UBound(sFNLinksTo()) = -1 Then
							AddNewItemToArray2IS( sFNLinksTo(), lCurrentPara + 1, TextPortionBookmark )
						Else
							&apos; не заносим дважды одну и ту же закладку...
							If sFNLinksTo( UBound(sFNLinksTo()), 1 ) &lt;&gt; TextPortionBookmark Then
								AddNewItemToArray2IS( sFNLinksTo(), lCurrentPara + 1, TextPortionBookmark )
							End If
						End If
						
					End If
				End If
				&apos;///////////////////////////////////////////////////////////
				&apos;TODO: если рядом с текстом в одной строке стоит картинка с Привязкой К Символу, то к тесту добавляется предыдущая часть.
				&apos;Надо ввести проверку!!!
				sParagFN = sParagFN &amp; InLineAllParser( oTextPortionF )
			Wend
			&apos; Обработка текста сноски - на наличие обрыва строки (&lt;BR&gt; в html текстах) - иначе fb2-файл получается в некоторых случаях при форматной строке невалидным
			sParagFN = DelBreakLineInString( sParagFN )
			lAnalyzeProgress = lAnalyzeProgress + 1
			oProgressBar.setValue( lAnalyzeProgress )

			&apos; маркеры и нумерация в сносках
			If oTextF.NumberingIsNumber = True Then &apos; нумерованные списки
				sParagFN = MakeNumberingNumberPara( oTextF, sParagFN )
				bMarker = True
			End If
			
			If InStr(sParagFN,  &quot;__fn__OOo_graphics__&quot; ) = 0 Then
				MakeTextArray( asFNPart(), sParagFN, oFootnoteCursor, sBookMark )
			Else
				Dim i As Integer, sStr As String : sStr = &quot;&quot;
				Dim aStr() As String : aStr() = Split( sParagFN, &quot;__fn__OOo_graphics__&quot; )
				For i = 0 To UBound( aStr() )
					If aStr(i) &lt;&gt; &quot;&quot; Then
						MakeTextArray( asFNPart(), aStr(i), oFootnoteCursor, sBookMark )
					End If
				Next i
			End If
		Wend
		sBookmark = &quot;&quot;
	Loop While oFootnoteCursor.gotoNextParagraph( False )
	
	Dim n As Integer : n = Ubound(vTextArray()) + 1
	If n &gt; 0 Then
		ReDim Preserve vTextArray(n)
	Else ReDim vTextArray(n)
	End If
	vTextArray(n) = asFNPart()

	If bIsFootNote = True Then
		ReDim Preserve vFootnoteText(iFootnoteCount) As Variant
		vFootnoteText( iFootnoteCount ) = vTextArray()
		iFootnoteCount = iFootnoteCount + 1
	Else
		ReDim Preserve vEndnoteText(iEndnoteCount) As Variant
		vEndnoteText( iEndnoteCount ) = vTextArray()
		iEndnoteCount = iEndnoteCount + 1
	End If
	FootEndNoteParser = sNote
End Function

Sub MakeTextArray( asFNPart() As String, sStr As String, oFootnoteCursor As Object, sBookMark As String )
	&apos; парсер стилей сносок
	Dim sFNType As String : sFNType = FNType( oFootnoteCursor )
	&apos;В LO поломано восприятие локализованных стилей Цитата
	If isLibreOffice() Then
		Dim ParaStyle As String : ParaStyle = oFootnoteCursor.ParaStyleName
		If ParaStyle = GetLocaCiteStyleName() Then
			ParaStyle = &quot;Quotations&quot;
		End If
		FootnoteStyleParser( asFNPart(), oFootnoteCursor, ParaStyle, sStr, sBookMark, sFNType ) &apos; тип абзаца - стих, абзац, цитата...
	Else &apos; для OpenOffice
		FootnoteStyleParser( asFNPart(), oFootnoteCursor, oFootnoteCursor.ParaStyleName, sStr, sBookMark, sFNType ) &apos; тип абзаца - стих, абзац, цитата...
	End If
End Sub

Sub FootnoteStyleParser( asFNPart() As String, oFootnoteCursor As Object, sParaStyleName As String, sPara As String, sBookMark As String, FNType As String )
	&apos; перебор по стилям
	Dim sParaStyle As String : sParaStyle = sParaStyleName
	If sPara = &quot;&quot; Then
		If sParaStyleName = sStylePoem Then
			&apos; для разных видов стихов (каждое четверостишие - в своем &lt;stanza&gt;)
			AddNewItemToArray4( asFNPart(), &quot;&quot;, sParaStyle, sBookMark, FNType )
		ElseIf sParaStyleName = sStyleCite Then
			&apos; для пустых строк в цитатах
			AddNewItemToArray4( asFNPart(), &quot;&quot;, sParaStyle, sBookMark, FNType )
		ElseIf sParaStyleName = sStyleAnnotation Then
			&apos; для пустых строк в аннотациях
			AddNewItemToArray4( asFNPart(), &quot;&quot;, sParaStyle, sBookMark, FNType )
		ElseIf sParaStyleName = sStyleEpigraph Then
			AddNewItemToArray4( asFNPart(), &quot;&quot;, sParaStyle, sBookMark, FNType )
		Else
			AddNewItemToArray4( asFNPart(), &quot;&quot;, sParaStyle, sBookMark, FNType )
			sParaStyle = &quot;&quot;
		End If
	Else
		If sParaStyleName = sStylePoemTitle Or sParaStyleName = sStylePoemSubTitle Or sParaStyleName = sStylePoem Or _
			sParaStyleName = sStylePoemAuthor Or sParaStyleName = sStylePoemDate Or _
			sParaStyleName = sStyleEpigraph Or sParaStyleName = sStyleEpigraphAuthor Or _
			sParaStyleName = sStyleCite Or sParaStyleName = sStyleCiteSubTitle Or sParaStyleName = sStyleCiteAuthor Or _
			sParaStyleName = sStyleAnnotation Or sParaStyleName = sStyleAnnotationSubTitle Or _
			sParaStyleName = sStyleSubTitle Then
			AddNewItemToArray4( asFNPart(), sPara, sParaStyle, sBookMark, FNType )
		ElseIf IsLevel( sParaStyleName ) Then
			AddNotesArray( asFNPart(), sPara, sParaStyle, sBookMark, FNType )
		Else &apos; что-то другое или просто параграф
			sParaStyle = &quot;Para&quot;
			If oFootnoteCursor.ParaAdjust = 3 Then
				sParaStyle = &quot;ParaCenter&quot;
			End If
			AddNewItemToArray4( asFNPart(), sPara, sParaStyle, sBookMark, FNType )
		End If
	End If
	sPreviousStyle = sParaStyleName
End Sub

Function AddNotesArray( ByRef asFNPart() As String, sPara As String, sParaStyle As String, sBookMark As String, FNType As String )
	&apos; для уровней - проверка на несколько строк
	If sParaStyle &lt;&gt; sPreviousStyle Then &apos; Разные уровни
		AddNewItemToArray4( asFNPart(), &quot;&lt;p&gt;&quot; &amp; sPara &amp; &quot;&lt;/p&gt;&quot;, sParaStyle, sBookMark, FNType )
	Else &apos; Одинаковые уровни - несколько строк - собираем их в один элемент
		if UBound( asFNPart() ) &gt; -1 Then
			Dim LastItem As Long : LastItem = UBound( asFNPart() )
			asFNPart( LastItem, 0 ) = asFNPart( LastItem, 0 ) &amp; chr(10) &amp; &quot;&lt;p&gt;&quot; &amp; sPara &amp; &quot;&lt;/p&gt;&quot;
			asFNPart( LastItem, 2 ) = asFNPart( LastItem, 2 ) &amp; &quot;|&quot; &amp; sBookMark
		Else
			AddNewItemToArray4( asFNPart(), &quot;&lt;p&gt;&quot; &amp; sPara &amp; &quot;&lt;/p&gt;&quot;, sParaStyle, sBookMark, FNType )
		End If
	End If
End Function

&apos;определение типа сноски - FootNote или EndNote
Function FNType( oFootnoteCursor As Object ) As String
	FNType = &quot;FootNote&quot;
	If LCase( oFootnoteCursor.ParaStyleName ) = &quot;endnote&quot; _
		Or LCase( oFootnoteCursor.PageStyleName ) = &quot;endnote&quot; _
		Or LCase( oFootnoteCursor.CharStyleName ) = &quot;endnote symbol&quot; Then
		FNType = &quot;EndNote&quot;
	End If
End Function

</script:module>