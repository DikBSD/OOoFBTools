<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="Numbering" script:language="StarBasic">REM  *****  BASIC  *****
&apos; =======================================================================================================
&apos; 								модуль инструментов:
&apos; 				Переименовывание веделенных абзацев, начиная с заданного значения
&apos; =======================================================================================================

Option Explicit

Public oRN As Object
Public Const sNSettingsFilename As String = &quot;numbering.txt&quot; &apos; файл настроек
Private nIndex	As Integer &apos; начальный номер абзаца
Private sLeft	As String
Private sRight	As String

&apos; ///////////////////////////////////////////////////////////////////////////////////////////////////////
&apos; инициализация и запуск диалога перенумерации
Sub NumberingStart()
&apos;	DialogLibraries.LoadLibrary( &quot;OOoFBTools&quot; )
	If Not GlobalScope.DialogLibraries.isLibraryLoaded( &quot;OOoFBTools&quot; ) Then
    	GlobalScope.DialogLibraries.LoadLibrary( &quot;OOoFBTools&quot; )
	End If
	oRN = CreateUnoDialog( GlobalScope.DialogLibraries.OOoFBTools.NumberingDlg )
	
	&apos; инициализация диалога перенумерации абзацев
	InitNumberingDlg()
	
	Dim aList() As String
	aList() = Array(	&quot;x &quot; &amp; sND.sSText &amp; &quot; ...&quot;, _
						&quot;x. &quot; &amp; sND.sSText &amp; &quot; ...&quot;, _
						&quot;(x) &quot; &amp; sND.sSText &amp; &quot; ...&quot;, _
						&quot;(x). &quot; &amp; sND.sSText &amp; &quot; ...&quot;, _
						&quot;[x] &quot; &amp; sND.sSText &amp; &quot; ...&quot;, _
						&quot;[x]. &quot; &amp; sND.sSText &amp; &quot; ...&quot;, _
						&quot;{x} &quot; &amp; sND.sSText &amp; &quot; ...&quot;, _
						&quot;{x}. &quot; &amp; sND.sSText &amp; &quot; ...&quot;, _
						&quot;&lt;x&gt; &quot; &amp; sND.sSText &amp; &quot; ...&quot;, _
						&quot;&lt;x&gt;. &quot; &amp; sND.sSText &amp; &quot; ...&quot;, _
						&quot;/x/ &quot; &amp; sND.sSText &amp; &quot; ...&quot;, _
						&quot;/x/. &quot; &amp; sND.sSText &amp; &quot; ...&quot;, _
						&quot;\x\ &quot; &amp; sND.sSText &amp; &quot; ...&quot;, _
						&quot;\x\. &quot; &amp; sND.sSText &amp; &quot; ...&quot;	)
	With oRN.Model
		.Height	= 34
		.Width	= 207
		.lboxtemplate.StringItemList = aList()
	End With
	
	oRN.getControl( &quot;lboxtemplate&quot; ).SelectItemPos( 0, True )
	
	&apos; считаем положение диалога из файла настроек
	Dim nX As Integer, nY As Integer
	ReadDlgSettings( getOOoFBToolsSettingsDir() &amp; sNSettingsFilename, oRN, nX, nY )
	oRN.setPosSize( nX, nY, 30, 338, com.sun.star.awt.PosSize.POS )

	oRN.execute()
End Sub

&apos; //////////////////////////////////////////////////////////////////////////////////////////////////////
&apos; Принятие параметров
Sub Numbering()
	&apos; записываем настройки диалога
	SaveSettings( getOOoFBToolsSettingsDir() &amp; sNSettingsFilename, oRN )
	
	nIndex = oRN.GetControl( &quot;nfNumber&quot; ).Value
	&apos; левая и правая часть регулярного выражения для 1-го поиска номера примечания в списке примечаний
	Dim oLB	As Object : oLB = oRN.getControl( &quot;lboxtemplate&quot; )
	sLeft	= GetLeftString( oLB )
	sRight	= GetRightString( oLB )
	
	oRN.endExecute()
	&apos; запуск алгоритма нумерации выделенных абзацев
	SelectedTextParser()
End Sub

Sub SelectedTextParser()
	Dim l As Long : l = GetSelectionCount()
	If l =-1 Then &apos; только для выделений Текста!
		MsgBox sND.sNotSelectedText, 64, sND.sTitle
		Exit Sub
	End If
	Dim oDoc As Object : oDoc = ThisComponent
	Dim oCurs() As Object
	If Not CreateSelectedTextIterator( oDoc, sND.sNoSelectText &amp; chr(10) &amp; sND.sProcessAllDoc, _
										sND.sTitle, oCurs() ) Then Exit Sub
	Dim i As Integer
	For i = LBound( oCurs() ) To UBound( oCurs() )
		NumberingSelectedPara( oDoc, oCurs(i, 0), oCurs(i, 1) )
	Next i
	
	MsgBox sND.sEndMessage, 64, sND.sTitle
End Sub

Sub NumberingSelectedPara( ByRef oDoc As Object, ByRef oLCurs As Object, ByRef oRCurs As Object )

	If IsNull(oLCurs) Or IsNull( oRCurs ) Or IsNull( oDoc ) Then Exit Sub

	Dim oCursorL As Object : oCursorL = oLCurs.getText().createTextCursorByRange( oLCurs )
	Dim oCursorR As Object : oCursorR = oRCurs.getText().createTextCursorByRange( oRCurs )
	If oCursorL.Text.compareRegionEnds( oCursorL, oCursorR ) &lt;= 0 Then Exit Sub

	If oRN.GetControl( &quot;chBoxThroughNumbering&quot; ).State = 0 Then
		&apos; сквозная нумерация всех выделенных абзацев
		nIndex = oRN.GetControl( &quot;nfNumber&quot; ).Value
	End If
	
	Dim oPar		As Object &apos;Перебираемый параграф
	Dim oViewCursor	As Object
	
	Do While oCursorL.Text.compareRegionEnds( oCursorL, oCursorR ) &gt; 0
		oPar = oCursorL.createEnumeration().nextElement()
		If oCursorL.NumberingIsNumber = True Then
			&apos; убираем нумерацию списка для этого абзаца
			oCursorL.NumberingIsNumber = False
		End If	
		&apos; задаем &quot;сквозную&quot; нумерацию
		oPar.NumberingStyleName = &quot;&quot;
		oViewCursor = oDoc.getCurrentController().getViewCursor()
		oViewCursor.gotoRange(oPar, False)
		oViewCursor.collapseToStart()
		_UnoInsertText( sLeft &amp; LTrim( Str( nIndex ) ) &amp; sRight )
		oCursorL.gotoEndOfParagraph(False)
		oCursorL.gotoNextParagraph(False)
		nIndex = nIndex+1
	Loop
End Sub

Function GetLeftString( oLB As Object ) As String
	Select Case oLB.SelectedItemPos
		Case 0 &apos; x Текст ...
			GetLeftString = &quot;&quot;
		Case 1 &apos; x. Текст ...
			GetLeftString = &quot;&quot;
		Case 2 &apos; (x) Текст ...
			GetLeftString = &quot;(&quot;
		Case 3 &apos; (x). Текст ...
			GetLeftString = &quot;(&quot;
		Case 4 &apos; [x] Текст ...
			GetLeftString = &quot;[&quot;
		Case 5 &apos; [x]. Текст ...
			GetLeftString = &quot;[&quot;
		Case 6 &apos; {x} Текст ...
			GetLeftString = &quot;{&quot;
		Case 7 &apos; {x}. Текст ...
			GetLeftString = &quot;{&quot;
		Case 8 &apos; &lt;x&gt; Текст ...
			GetLeftString = &quot;&lt;&quot;
		Case 9 &apos; &lt;x&gt;. Текст ...
			GetLeftString = &quot;&lt;&quot;
		Case 10 &apos; /x/ Текст ...
			GetLeftString = &quot;/&quot;
		Case 11 &apos; /x/. Текст ...
			GetLeftString = &quot;/&quot;
		Case 12 &apos; \x\ Текст ...
			GetLeftString = &quot;\&quot;
		Case 13 &apos; \x\. Текст ...
			GetLeftString = &quot;\&quot;
		Case Else
			GetLeftString = &quot;^&quot;
	End Select
End Function

Function GetRightString( oLB As Object ) As String
	Select Case oLB.SelectedItemPos
		Case 0 &apos; x Текст ...
			GetRightString = &quot;&quot;
		Case 1 &apos; x. Текст ...
			GetRightString = &quot;.&quot;
		Case 2 &apos; (x) Текст ...
			GetRightString = &quot;)&quot;
		Case 3 &apos; (x). Текст ...
			GetRightString = &quot;).&quot;
		Case 4 &apos; [x] Текст ...
			GetRightString = &quot;]&quot;
		Case 5 &apos; [x]. Текст ...
			GetRightString = &quot;].&quot;
		Case 6 &apos; {x} Текст ...
			GetRightString = &quot;}&quot;
		Case 7 &apos; {x}. Текст ...
			GetRightString = &quot;}.&quot;
		Case 8 &apos; &lt;x&gt; Текст ...
			GetRightString = &quot;&gt;&quot;
		Case 9 &apos; &lt;x&gt;. Текст ...
			GetRightString = &quot;&gt;.&quot;
		Case 10 &apos; /x/ Текст ...
			GetRightString = &quot;/&quot;
		Case 11 &apos; /x/. Текст ...
			GetRightString = &quot;/.&quot;
		Case 12 &apos; \x\ Текст ...
			GetRightString = &quot;\&quot;
		Case 13 &apos; \x\. Текст ...
			GetRightString = &quot;\.&quot;
		Case Else
			GetRightString = &quot;.&quot;
	End Select
	GetRightString = GetRightString &amp; chr(160)
End Function


&apos; ===================================================
&apos; 		локализация нумерации абзацев
&apos; ===================================================
&apos; для хранения сообщений нумерации абзацев
Type tNumberingData
	sProcessAllDoc		As String &apos; Обрабатывать весь документ?
	sNotSelectedText	As String &apos; &quot;Можно выделять только текст!&quot;
	sNoSelectText		As String &apos; Нет ни одного выделенного фрагмента текста для поиска!
	sTitle				As String &apos; Нумерация выделенных абзацев
	sEndMessage			As String &apos; Нумерация выделенных абзацев завершена!
	sSText				As String &apos; Текст
End Type

Public sND As tNumberingData

&apos; **************************************************************************************************
&apos; инициализация сообщений нумерации абзацев в зависимости от локали
Sub InitNumberingDataMessage()
	If getOOoLocal() = &quot;ru&quot; OR getOOoLocal() = &quot;uk&quot; Then
		With sND
			.sProcessAllDoc		= &quot;Обрабатывать весь документ?&quot;
			.sNotSelectedText	= &quot;Можно выделять только текст!&quot;
			.sNoSelectText		= &quot;Нет ни одного выделенного фрагмента текста для поиска!&quot;
			.sTitle				= &quot;Нумерация выделенных абзацев&quot;
			.sEndMessage		= &quot;Нумерация выделенных абзацев завершена!&quot;
			.sSText				= &quot;Текст&quot;
		End With
	Else
		With sND
			.sProcessAllDoc		= &quot;Process all Document?&quot;
			.sNotSelectedText	= &quot;It Is Allowed select only text!&quot;
			.sNoSelectText		= &quot;There is no allocated Fragment of the Text for search!&quot;
			.sTitle				= &quot;Numbering chosen Paragraph&quot;
			.sEndMessage		= &quot;Numbering chosen paragraph completed!&quot;
			.sSText				= &quot;the Text&quot;
		End With
	End If
End Sub

&apos; **************************************************************************************************
&apos; инициализация диалога нумерации абзацев в зависимости от локали
Sub InitNumberingDlg()
	&apos; инициализация сообщений нумерации абзацев в зависимости от локали
	InitNumberingDataMessage()
	
	oRN.getModel.Title	= sND.sTitle
	
	If getOOoLocal() = &quot;ru&quot; OR getOOoLocal() = &quot;uk&quot; Then
		With oRN.getModel
			.lblNumbers.Label				= &quot;Начать нумерацию с:&quot;
			.chBoxThroughNumbering.Label	= &quot;Сквозная нумерация для нескольких выделенных областей текста&quot;
			.cmdBtnNumber.Label				= &quot;Пронумеровать&quot;
		End With
	Else
		With oRN.getModel
			.lblNumbers.Label				= &quot;Begin numbering with:&quot;
			.chBoxThroughNumbering.Label	= &quot;End-to-end numbering for several chosen areas a text&quot;
			.cmdBtnNumber.Label				= &quot;to number&quot;
		End With
	End If
End Sub

</script:module>