<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="FB2Corrector" script:language="StarBasic">REM  *****  BASIC  *****
&apos; FB2Cleaner - модуль &quot;чистки&quot; fb2 файлов от &quot;мусора&quot;: &lt;/emphasis&gt;&lt;emphasis&gt;, &lt;/strong&gt;&lt;strong&gt; и другое

Private lBody As Long
Private lBodyImage As Long

Function ReplaceFromString(sSource As String, sDel As String, sReplace As String) As Integer
	&apos; Строка sSource изменяется - в ней все части sDel заменяются на sReplace
	&apos; Если sReplace - &quot;&quot;, то все sDel удаляются, иначе - замена на sReplace
	Dim i As Integer, c As Integer
	c = 0 &apos; счетчик число изменений в строке
	i = InStr(sSource, sDel)
	If i=0 Then
		ReplaceFromString = 0
		Exit Function
	End If
	Do While i &gt; 0
		Mid(sSource, i, Len(sDel), sReplace)
		i = InStr(i, sSource, sDel)
		c = c+1
	Loop
	ReplaceFromString = c
End Function

Function RemoveSuperfluous(sSource As String, iResult As Integer)
	&apos; Убираем пустышки типа &lt;/x&gt;&lt;x&gt;
	iResult(0) = ReplaceFromString(sSource, &quot;&lt;/strong&gt;&lt;strong&gt;&quot;, &quot;&quot;)
	iResult(1) = ReplaceFromString(sSource, &quot;&lt;/emphasis&gt;&lt;emphasis&gt;&quot;, &quot;&quot;)
	iResult(2) = ReplaceFromString(sSource, &quot;&lt;/sub&gt;&lt;sub&gt;&quot;, &quot;&quot;)
	iResult(3) = ReplaceFromString(sSource, &quot;&lt;/sup&gt;&lt;sup&gt;&quot;, &quot;&quot;)
	iResult(4) = ReplaceFromString(sSource, &quot;&lt;/code&gt;&lt;code&gt;&quot;, &quot;&quot;)
	iResult(5) = ReplaceFromString(sSource, &quot;&lt;/strikethrough&gt;&lt;strikethrough&gt;&quot;, &quot;&quot;)
End Function

Function ClearStyleSpace(sSource As String, iResult1 As Integer, iResult2 As Integer)
	&apos; Обработка пробелов, обрамленными стилями &lt;/x&gt; &lt;x&gt; и &lt;x&gt; &lt;/x&gt;
	iResult1(0) = ReplaceFromString(sSource, &quot;&lt;strong&gt; &lt;/strong&gt;&quot;, &quot; &quot;)
	iResult1(1) = ReplaceFromString(sSource, &quot;&lt;emphasis&gt; &lt;/emphasis&gt;&quot;, &quot; &quot;)
	iResult1(2) = ReplaceFromString(sSource, &quot;&lt;sub&gt; &lt;/sub&gt;&quot;, &quot; &quot;)
	iResult1(3) = ReplaceFromString(sSource, &quot;&lt;sup&gt; &lt;/sup&gt;&quot;, &quot; &quot;)
	iResult1(4) = ReplaceFromString(sSource, &quot;&lt;code&gt; &lt;/code&gt;&quot;, &quot; &quot;)
	iResult1(5) = ReplaceFromString(sSource, &quot;&lt;strikethrough&gt; &lt;/strikethrough&gt;&quot;, &quot; &quot;)
	
	iResult2(0) = ReplaceFromString(sSource, &quot;&lt;/strong&gt; &lt;strong&gt;&quot;, &quot; &quot;)
	iResult2(1) = ReplaceFromString(sSource, &quot;&lt;/emphasis&gt; &lt;emphasis&gt;&quot;, &quot; &quot;)
	iResult2(2) = ReplaceFromString(sSource, &quot;&lt;/sub&gt; &lt;sub&gt;&quot;, &quot; &quot;)
	iResult2(3) = ReplaceFromString(sSource, &quot;&lt;/sup&gt; &lt;sup&gt;&quot;, &quot; &quot;)
	iResult2(4) = ReplaceFromString(sSource, &quot;&lt;/code&gt; &lt;code&gt;&quot;, &quot; &quot;)
	iResult2(5) = ReplaceFromString(sSource, &quot;&lt;/strikethrough&gt; &lt;strikethrough&gt;&quot;, &quot; &quot;)
End Function

Function WorkingRoundBracket(sSource As String, iResult As Integer)
	&apos; Обработка круглых скобок
	iResult(0) = ReplaceFromString(sSource, &quot;&lt;strong&gt;(&quot;, &quot;(&lt;strong&gt;&quot;)
	iResult(0) = iResult(0) &amp; ReplaceFromString(sSource, &quot;)&lt;/strong&gt;&quot;, &quot;&lt;/strong&gt;)&quot;)
	iResult(1) = ReplaceFromString(sSource, &quot;&lt;emphasis&gt;(&quot;, &quot;(&lt;emphasis&gt;&quot;)
	iResult(1) = iResult(1) &amp; ReplaceFromString(sSource, &quot;)&lt;/emphasis&gt;&quot;, &quot;&lt;/emphasis&gt;)&quot;)
	iResult(2) = ReplaceFromString(sSource, &quot;&lt;sub&gt;(&quot;, &quot;(&lt;sub&gt;&quot;)
	iResult(2) = iResult(2) &amp; ReplaceFromString(sSource, &quot;)&lt;/sub&gt;&quot;, &quot;&lt;/sub&gt;)&quot;)
	iResult(3) = ReplaceFromString(sSource, &quot;&lt;sup&gt;(&quot;, &quot;(&lt;sup&gt;&quot;)
	iResult(3) = iResult(3) &amp; ReplaceFromString(sSource, &quot;)&lt;/sup&gt;&quot;, &quot;&lt;/sup&gt;)&quot;)
	iResult(4) = ReplaceFromString(sSource, &quot;&lt;code&gt;(&quot;, &quot;(&lt;code&gt;&quot;)
	iResult(4) = iResult(4) &amp; ReplaceFromString(sSource, &quot;)&lt;/code&gt;&quot;, &quot;&lt;/code&gt;)&quot;)
	iResult(5) = ReplaceFromString(sSource, &quot;&lt;sup&gt;(&quot;, &quot;(&lt;sup&gt;&quot;)
	iResult(5) = iResult(5) &amp; ReplaceFromString(sSource, &quot;)&lt;/strikethrough&gt;&quot;, &quot;&lt;/strikethrough&gt;)&quot;)
End Function

Function WorkingSquarteBracket(sSource As String, iResult As Integer)
	&apos; Обработка круглых скобок
	iResult(0) = ReplaceFromString(sSource, &quot;&lt;strong&gt;[&quot;, &quot;[&lt;strong&gt;&quot;)
	iResult(0) = iResult(0) &amp; ReplaceFromString(sSource, &quot;]&lt;/strong&gt;&quot;, &quot;&lt;/strong&gt;]&quot;)
	iResult(1) = ReplaceFromString(sSource, &quot;&lt;emphasis&gt;[&quot;, &quot;[&lt;emphasis&gt;&quot;)
	iResult(1) = iResult(1) &amp; ReplaceFromString(sSource, &quot;]&lt;/emphasis&gt;&quot;, &quot;&lt;/emphasis&gt;]&quot;)
	iResult(2) = ReplaceFromString(sSource, &quot;&lt;sub&gt;[&quot;, &quot;[&lt;sub&gt;&quot;)
	iResult(2) = iResult(2) &amp; ReplaceFromString(sSource, &quot;]&lt;/sub&gt;&quot;, &quot;&lt;/sub&gt;]&quot;)
	iResult(3) = ReplaceFromString(sSource, &quot;&lt;sup&gt;[&quot;, &quot;[&lt;sup&gt;&quot;)
	iResult(3) = iResult(3) &amp; ReplaceFromString(sSource, &quot;]&lt;/sup&gt;&quot;, &quot;&lt;/sup&gt;]&quot;)
	iResult(4) = ReplaceFromString(sSource, &quot;&lt;code&gt;[&quot;, &quot;[&lt;code&gt;&quot;)
	iResult(4) = iResult(4) &amp; ReplaceFromString(sSource, &quot;]&lt;/code&gt;&quot;, &quot;&lt;/code&gt;]&quot;)
	iResult(5) = ReplaceFromString(sSource, &quot;&lt;sup&gt;[&quot;, &quot;[&lt;sup&gt;&quot;)
	iResult(5) = iResult(5) &amp; ReplaceFromString(sSource, &quot;]&lt;/strikethrough&gt;&quot;, &quot;&lt;/strikethrough&gt;]&quot;)
End Function

Function WorkingFiguredBracket(sSource As String, iResult As Integer)
	&apos; Обработка круглых скобок
	iResult(0) = ReplaceFromString(sSource, &quot;&lt;strong&gt;{&quot;, &quot;{&lt;strong&gt;&quot;)
	iResult(0) = iResult(0) &amp; ReplaceFromString(sSource, &quot;}&lt;/strong&gt;&quot;, &quot;&lt;/strong&gt;}&quot;)
	iResult(1) = ReplaceFromString(sSource, &quot;&lt;emphasis&gt;{&quot;, &quot;{&lt;emphasis&gt;&quot;)
	iResult(1) = iResult(1) &amp; ReplaceFromString(sSource, &quot;}&lt;/emphasis&gt;&quot;, &quot;&lt;/emphasis&gt;}&quot;)
	iResult(2) = ReplaceFromString(sSource, &quot;&lt;sub&gt;{&quot;, &quot;{&lt;sub&gt;&quot;)
	iResult(2) = iResult(2) &amp; ReplaceFromString(sSource, &quot;}&lt;/sub&gt;&quot;, &quot;&lt;/sub&gt;}&quot;)
	iResult(3) = ReplaceFromString(sSource, &quot;&lt;sup&gt;{&quot;, &quot;{&lt;sup&gt;&quot;)
	iResult(3) = iResult(3) &amp; ReplaceFromString(sSource, &quot;}&lt;/sup&gt;&quot;, &quot;&lt;/sup&gt;}&quot;)
	iResult(4) = ReplaceFromString(sSource, &quot;&lt;code&gt;{&quot;, &quot;{&lt;code&gt;&quot;)
	iResult(4) = iResult(4) &amp; ReplaceFromString(sSource, &quot;}&lt;/code&gt;&quot;, &quot;&lt;/code&gt;}&quot;)
	iResult(5) = ReplaceFromString(sSource, &quot;&lt;sup&gt;{&quot;, &quot;{&lt;sup&gt;&quot;)
	iResult(5) = iResult(5) &amp; ReplaceFromString(sSource, &quot;}&lt;/strikethrough&gt;&quot;, &quot;&lt;/strikethrough&gt;}&quot;)
End Function

&apos; функции для FB2Corrector - диалога

Function FB2CorrectWord(sWord As String, iResult As Integer)
	&apos; корректировка слова - отлов символов &lt;,&gt;,&amp;
	Dim SA() As String
	Dim i As Integer, iLen As Integer
	Dim newWord As String, sChar As String
	iLen = Len(sWord)&apos; длина анализируемого слова
	For i = 1 To iLen
		sChar = Mid(sWord, i, 1)
		If sChar = &quot;&amp;&quot; Then
			newWord = newWord + &quot;&amp;amp;&quot;
			iResult(2) = iResult(2) + 1
		ElseIf sChar = &quot;&lt;&quot; Then
			newWord = newWord + &quot;&amp;lt;&quot;
			iResult(0) = iResult(0) + 1
		ElseIf sChar = &quot;&gt;&quot; Then
			newWord = newWord + &quot;&amp;gt;&quot;
			iResult(1) = iResult(1) + 1
		Else
			newWord = newWord + sChar
		End If
	Next i
	sWord = newWord
End Function

Function FB2CorrectBracketsWord(sWord As String, iResult As Integer)
	&apos; корректировка слова - отлов символов &lt;,&gt;,&amp;
	Dim SA() As String
	Dim i As Integer, iLen As Integer
	Dim newWord As String, sChar As String
	iLen = Len(sWord)&apos; длина анализируемого слова
	For i = 1 To iLen
		sChar = Mid(sWord, i, 1)
		If sChar = &quot;&lt;&quot; Then
			newWord = newWord + &quot;&amp;lt;&quot;
			iResult(0) = iResult(0) + 1
		ElseIf sChar = &quot;&gt;&quot; Then
			newWord = newWord + &quot;&amp;gt;&quot;
			iResult(1) = iResult(1) + 1
		Else
			newWord = newWord + sChar
		End If
	Next i
	sWord = newWord
End Function

Function FB2CorrectAmpWord(sWord As String, iResult As Integer)
	&apos; корректировка слова - отлов символов &lt;,&gt;,&amp;
	Dim SA() As String
	Dim i As Integer, iLen As Integer
	Dim newWord As String, sChar As String
	iLen = Len(sWord)&apos; длина анализируемого слова
	For i = 1 To iLen
		sChar = Mid(sWord, i, 1)
		If sChar = &quot;&amp;&quot; Then
			newWord = newWord + &quot;&amp;amp;&quot;
			iResult(2) = iResult(2) + 1
		Else
			newWord = newWord + sChar
		End If
	Next i
	sWord = newWord
End Function

Function AddLineInArray(sTextArray() As String, sText As String, oProgressBar)
	Dim l As Long
	l = Ubound(sTextArray()) + 1
	If l &gt; 0 Then
		ReDim Preserve sTextArray(l)
	Else Redim sTextArray(l)
	End If
	sTextArray(l) = sText
	oProgressBar.setValue(l)
End Function

Function FBCorrectText(sStr As String, iResult1 As Integer, iResult2 As Integer, iResult3 As Integer, iResult4 As Integer)
	Dim iR1(5) As Integer, iR2(5) As Integer, iR3(5) As Integer
	Dim i As Integer
	If bFB2Superfluous = True Then
		RemoveSuperfluous(sStr, iR1)
		For i=0 To UBound(iR1)
			iResult1(i) = iResult1(i) + iR1(i)
		Next i
	End If
	If bFB2StyleSpace = True Then
		ClearStyleSpace(sStr, iR2, iR3)
		For i=0 To UBound(iR2)
			iResult2(i) = iResult2(i) + iR2(i)
			iResult3(i) = iResult3(i) + iR3(i)
		Next i
	End If
	If bFB2BadSymbols = True Then
		&apos; обработка &quot;проблемных&quot; символов &gt;, &lt; и &amp;
		CorrectBadSymbols(sStr, iResult4)
	End If
End Function

Function IsFullTag(sWord As String) As Integer
	&apos; возврат: -1 лексема не является полным тэгом
	&apos; 0... x индекс полного тега, находящегося в лексеме
	IsFullTag = -1
	Dim i As Integer
	For i=LBound(sTags) To UBound(sTags)
		If InStr(sWord, sTags(i)) &gt; 0 Then &apos; да
			IsFullTag = i
			Exit Function
		End If
	Next i
End Function

Function IsTagWithAttr(sWord As String) As Integer
	&apos; возврат: -1 лексема не является открытым тэгом с аттрибутами
	&apos; 0... x индекс открытым тэгом с аттрибутами, находящегося в лексеме
	IsTagWithAttr = -1
	Dim i As Integer
	For i=LBound(sTagsAttr) To UBound(sTagsAttr)
		If InStr(sWord, sTagsAttr(i)) &gt; 0 Then &apos; да
			IsTagWithAttr = i
			Exit Function
		End If
	Next i
End Function

Function SaveCorrectedFB2File(sFile As String, sTextArray() As String, oProgressBar, iResult1() As Integer, iResult2() As Integer, iResult3() As Integer, iResult4() As Integer)
	&apos; записываем настройки очистки текста
	Dim iFileNo As Integer, sLine As String, l As Long
	
	iFileNo = Freefile &apos; Установление свободного файлового манипулятора
	Open sFile For Output As #iFileNo &apos; Открытие файла (в режиме на запись)
	&apos; Для экономия времени пе просмотриваем раздел &lt;description&gt; и &lt;binary&gt; - там НЕ НАДО корректировать!
	For l=LBound(sTextArray) To (lBody-1)
		Print #iFileNo, sTextArray(l)
		oProgressBar.setValue(l)
	Next l
	
	For l=lBody To (lBodyImage-1)
		sLine = sTextArray(l)
		FBCorrectText(sLine, iResult1, iResult2, iResult3, iResult4)
		Print #iFileNo, sLine
		oProgressBar.setValue(l)
	Next l
	
	For l=lBodyImage To UBound(sTextArray)
		Print #iFileNo, sTextArray(l)
		oProgressBar.setValue(l)
	Next l
	
	Close #iFileNo &apos; Закрытие файла

End Function

Function ReadFB2File(sFile As String, sTextArray() As String, oProgressBar) As Boolean
	&apos; Читаем fb2 файл в память
	If FileExists(sFile) Then
		Dim iFileNo As Integer, sCurrentLine As String, lL As Long
		&apos; Установление свободного файлового манипулятора
		iFileNo = Freefile
		lL = 0
		&apos; Открытие файла (в режиме на чтение)
		Open sFile For Input As #iFileNo
		&apos; Проверка, был ли достигнут конец файла
		Do While NOT eof(iFileNo)
			&apos; Чтение строки
			Line Input #iFileNo, sCurrentLine
			If sCurrentLine &lt;&gt; &quot;&quot; Then
				&apos; Загружаем fb2 файл в память
				AddLineInArray(sTextArray, sCurrentLine, oProgressBar)
				If InStr(sCurrentLine, &quot;&lt;/description&gt;&quot;) &gt; 0 Then
					lBody = lL
				ElseIf InStr(sCurrentLine, &quot;&lt;/body&gt;&quot;) &gt; 0 Then
					lBodyImage = lL
				End If
				lL = lL+1
			End If
		Loop
		&apos; Закрытие файла
		Close #iFileNo
		If sTextArray(UBound(sTextArray)) = &quot;&lt;/FictionBook&gt;&quot; Then
			lBodyImage = lBodyImage-1
		End If
		ReadFB2File = True
	Else
		ReadFB2File = False
	End If
End Function

Function CorrectBadSymbols(sStr As String, iResult4() As Integer)
	&apos; обработка &quot;проблемных&quot; символов &gt;, &lt; и &amp;
	&apos; Разбивка строки на лексемы
	Dim sWords() As String, sWord As String, iR4(2) As Integer
	sWords = Split(sStr, &quot;&lt;&quot;)
	For i=LBound(sWords) To UBound(sWords)
		sWords(i) = &quot;&lt;&quot; &amp; sWords(i)
	Next i
	&apos; парсинг лексемы
	Dim index As Integer, ind As Integer, sStart As String, sEnd As String
	For i=LBound(sWords)+1 To UBound(sWords)
		sWord = sWords(i)
		IF sWord &lt;&gt; &quot;&lt;&quot; Then
			ind = IsFullTag(sWord)
			If ind &gt; -1  Then
				&apos; 1. проверка, нет ли в середине лексемы слов-гэгов
				index = InStr( Len(sTags(ind))+1, sWord, &quot;&amp;&quot; )
				If index &gt; 0 Then
					sEnd = Mid( sWord, index )
					sStart = Left( sWord, Len(sWord)-Len(sEnd) )
					FB2CorrectAmpWord(sEnd, iR4)
					sWord = sStart &amp; sEnd	
					sWords(i) = sWord
				End If
				index = InStr( Len(sTags(ind))+1, sWord, &quot;&gt;&quot; )
				If index &gt; 0 Then
					sEnd = Mid( sWord, index )
					sStart = Left( sWord, Len(sWord)-Len(sEnd) )
					FB2CorrectBracketsWord(sEnd, iR4)
					sWord = sStart &amp; sEnd	
					sWords(i) = sWord
				End If
			Else
				ind = IsTagWithAttr(sWord)
				If ind &gt; -1 Then
					&apos; 2. проверка по &quot;открытым&quot; тэгам - с аттрибутами
					index = InStr( Len(sTagsAttr(ind))+1, sWord, &quot;&amp;&quot; )
					If index &gt; 0 Then
						sEnd = Mid( sWord, index )
						sStart = Left( sWord, Len(sWord)-Len(sEnd) )
						FB2CorrectAmpWord(sEnd, iR4)
						sWord = sStart &amp; sEnd	
						sWords(i) = sWord
					End If
					index = InStr( Len(sTagsAttr(ind))+1, sWord, &quot;&gt;&quot; )
					If index &gt; 0 Then
						&apos; ищем закрывающую скобку &gt; для тэга с аттрибутами, и от него до конца - sEnd
						sEnd = Mid( sWord, index+1 )
						sStart = Left( sWord, Len(sWord)-Len(sEnd) )
						FB2CorrectBracketsWord(sEnd, iR4)
						sWord = sStart &amp; sEnd	
						sWords(i) = sWord
					End If
				Else
					&apos; 3. вообще нет тегов в лексеме
					FB2CorrectWord(sWord, iR4)
					sWords(i) = sWord
				End If
			End If
		Else
			sWords(i) = &quot;&amp;lt;&quot;
			iR4(0) = iR4(0)+1
		End If
	Next i
	&apos; собираем лексемы в строку
	sWords(0) = &quot;&quot;
	sStr = Join(sWords, &quot;&quot;)

	For i=0 To UBound(iR4)
		iResult4(i) = iResult4(i) + iR4(i)
	Next i
End Function
</script:module>