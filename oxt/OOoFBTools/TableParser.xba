<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="TableParser" script:language="StarBasic">REM  *****  BASIC  *****
Option Explicit
&apos; //////////////// Парсер таблиц /////////////////

Function OOo23TextTableParser(iCurrentTable As Integer)
	Dim nHeaderRowCount As Integer
	Dim oTables As Object, oTable As Object
	Dim sTable As String &apos; текст таблицы в fb2.1 формате
	Dim iCel As Integer &apos; текушая ячейка
	Dim CellNames
	&apos; все таблицы документа
	oTables = ThisComponent.getTextTables() 
	&apos; получаем текущую таблицу
	oTable = oTables.getByIndex(iCurrentTable)
	iCel = 0 &apos; текушая ячейка
	CellNames = oTable.getCellNames()
	
	If OOoWriterVersion &lt; &quot;2.3&quot; Then
		&apos; не поддерживается свойство таблиц HeaderRowCount - не сможем отловить число заголовков
		If oTable.RepeatHeadline = True Then
			nHeaderRowCount = 1
		Else 
			nHeaderRowCount = 0
		End If
	Else
		nHeaderRowCount = oTable.HeaderRowCount &apos; число строк заголовка таблицы
	End If
	
	If IsMatrix(oTable) = True Then
		&apos; обработка только правильных прямоугольных матриц
		&apos;sTable = MakeSimpleTable(nHeaderRowCount, oTable, iCel, CellNames)
		sTable = MakeComplexTable(nHeaderRowCount, oTable, CellNames)
	Else
		&apos; обработка сложных таблиц
		If IsComplexRowsCollTable(oTable) = True Then
			&apos;Сложная таблица: разное число столбцов и строк В ЯЧЕЙКЕ (очень сложная)
		Else
			&apos;Сложная таблица с разным числом столбцов в строке
			sTable = MakeComplexTable(nHeaderRowCount, oTable, CellNames)
		End If	
	End If
	iCurrentTable = iCurrentTable + 1 &apos; на следующую таблицу, если она есть
	sPrevStyle = &quot;Table&quot;
	AddBodyArray(sTable, &quot;Table&quot;, False)
End Function


Function FormatCellText(CellCursor As Object, sCellString As String) As String
	&apos; форматирование стилями
	&apos; перебор по in-line стилям
	Dim s() As String
	Dim sRes As String
	Dim i As Integer

	s = Split(sCellString, chr(10))
	
	If CellCursor.HyperLinkURL &lt;&gt; &quot;&quot; Then &apos; гиперссылка
		Dim sFN As String
		For i = 0 To UBound(s)
			sFN = Mid(CellCursor.HyperLinkURL, 1, 1)
			IF sFN &lt;&gt; &quot;#&quot; Then &apos; гиперссылка
				sFN = oSect.HyperLinkURL
			Else			&apos; закладка
				sFN = Mid(oSect.HyperLinkURL, 2)
				sFN = &quot;#_&quot; &amp; sFN
			End If
			sRes = sRes &amp; &quot;&lt;a l:href=&quot;&quot;&quot; &amp; sFN &amp; &quot;&quot;&quot;&gt;&quot; &amp; s(i) &amp; &quot;&lt;/a&gt;&quot; &amp; chr(10)
		Next i
		&apos;FormatCellText = &quot;&lt;a l:href=&quot;&quot;&quot; &amp; CellCursor.HyperLinkURL &amp; &quot;&quot;&quot;&gt;&quot; &amp; sCellString &amp; &quot;&lt;/a&gt;&quot;
	ElseIf CellCursor.CharWeight = com.sun.star.awt.FontWeight.BOLD Then
		For i = 0 To UBound(s)
			sRes = sRes &amp; &quot;&lt;strong&gt;&quot; &amp; s(i) &amp; &quot;&lt;/strong&gt;&quot; &amp; chr(10)
		Next i
		&apos;FormatCellText = &quot;&lt;strong&gt;&quot; &amp; sCellString &amp; &quot;&lt;/strong&gt;&quot;
	ElseIf CellCursor.CharPosture = com.sun.star.awt.FontSlant.ITALIC Then
		For i = 0 To UBound(s)
			sRes = sRes &amp; &quot;&lt;emphasis&gt;&quot; &amp; s(i) &amp; &quot;&lt;/emphasis&gt;&quot; &amp; chr(10)
		Next i
		&apos;FormatCellText = &quot;&lt;emphasis&gt;&quot; &amp; sCellString &amp; &quot;&lt;/emphasis&gt;&quot;
	ElseIf CellCursor.CharEscapement &gt; 0 Then
		For i = 0 To UBound(s)
			sRes = sRes &amp; &quot;&lt;sup&gt;&quot; &amp; s(i) &amp; &quot;&lt;/sup&gt;&quot; &amp; chr(10)
		Next i
		&apos;FormatCellText = &quot;&lt;sup&gt;&quot; &amp; sCellString &amp; &quot;&lt;/sup&gt;&quot;
	ElseIf CellCursor.CharEscapement &lt; 0 Then
		For i = 0 To UBound(s)
			sRes = sRes &amp; &quot;&lt;sub&gt;&quot; &amp; s(i) &amp; &quot;&lt;/sub&gt;&quot; &amp; chr(10)
		Next i
		&apos;FormatCellText = &quot;&lt;sub&gt;&quot; &amp; sCellString &amp; &quot;&lt;/sub&gt;&quot;
	ElseIf CellCursor.CharShadowed = True OR CellCursor.CharContoured = True OR CellCursor.CharStyleName = &quot;code&quot; Then &apos; тень или контур или символьный стиль code
		For i = 0 To UBound(s)
			sRes = sRes &amp; &quot;&lt;code&gt;&quot; &amp; s(i) &amp; &quot;&lt;/code&gt;&quot; &amp; chr(10)
		Next i
		&apos;FormatCellText = &quot;&lt;code&gt;&quot; &amp; sCellString &amp; &quot;&lt;/code&gt;&quot;
	ElseIf CellCursor.CharStrikeout &gt; 0 Then
		For i = 0 To UBound(s)
			sRes = sRes &amp; &quot;&lt;strikethrough&gt;&quot; &amp; s(i) &amp; &quot;&lt;/strikethrough&gt;&quot; &amp; chr(10)
		Next i
		&apos;FormatCellText = &quot;&lt;strikethrough&gt;&quot; &amp; sCellString &amp; &quot;&lt;/strikethrough&gt;&quot;
	Else
		FormatCellText = sCellString
		Exit Function
	End If

	&apos; убираем последний chr(10)
	sRes = Mid(sRes, 1, Len(sRes)-1)
	FormatCellText = sRes
End Function


&apos; ///////////////////////////////////////////////////////////////////////////////////////////////////
&apos; /////////////////////////////  Простые таблицы ////////////////////////////////////////////////////
&apos; ///////////////////////////////////////////////////////////////////////////////////////////////////
Function MakeSimpleTable(iHeaderRowCount As Integer, oTable As Object, iCel As Integer, CellNames) As String
	&apos; обработка только правильных прямоугольных матриц
	Dim sTable As String &apos; текст таблицы в fb2.1 формате
	Dim iRow As Integer
	sTable = &quot;&lt;table&gt;&quot; &amp; chr(10)
	&apos; формируем заголовки, если они есть
	Dim i As Integer
	If iHeaderRowCount &gt; 0 Then
		For i = 0 To iHeaderRowCount-1
			sTable = sTable &amp; MakeVirtualFormatRowSimpleTable(oTable, iCel, True, sHeaderTVA, CellNames)
		Next i
	End If
	&apos; строки таблицы
	For iRow = iHeaderRowCount To oTable.Rows.Count-1
		sTable = sTable &amp; MakeVirtualFormatRowSimpleTable(oTable, iCel, False, sLineTVA, CellNames)
	Next iRow
	sTable = sTable &amp; &quot;&lt;/table&gt;&quot;
	MakeSimpleTable = sTable
End Function

Function MakeVirtualFormatRowSimpleTable(oTable As Object, iCel As Integer, bth As Boolean, sTVA As String, CellNames) As String
	&apos; форматирование текста каждой ячейки для заданной строки простой таблицы
	Dim iCol As Integer, i As Integer, j As Integer
	Dim sRow As String, sTHDAttr As String, sCellString As String
	Dim sFormatCellText As String	&apos; отформатированный текст всех абзацев в ячейке в виде одной строки
	Dim sRowWithLines() As String	&apos; Сформированный fb2 код всей Строки со всеми абзацами
	Dim Cell, CellCursor
	Dim sTagTR As String, sTagTDH As String
	
	sRow = &quot;&quot;
	
	&apos; Ищем ячейку в строке с максимальным числом абзацев
	Dim nMaxLines As Integer &apos; максимальное число абзацев (по смежным ячейкам в пределах одной строки таблицы)
	Dim nCel As Integer
	nCel = iCel
	&apos; находим max число абзацев в строке, учитывая то, что защищенная ячейка игнорируется и считается, что содержит 1 абзац. Т.е. все абзацы в ней сливаем вместе
	nMaxLines = GetMaxLineInRowWithProtect(oTable, CellNames, nCel, oTable.Columns.Count)

	For iCol = 0 To oTable.Columns.Count-1
		Cell = oTable.getCellByName(CellNames(iCel))
		CellCursor = Cell.createTextCursor()
		sCellString = Cell.getString()

		&apos; обработка проблемных символов
		If bCorrectPara = True Then
			sCellString = CorrectPara(sCellString)
		End If
		
		&apos; форматирование строк inline стилями
		&apos;sFormatCellText = FormatCellText(CellCursor, sCellString)
		sFormatCellText = sCellString
		
		&apos; определение тэга для заголовков и (или) строк таблицы
		sTHDAttr = GetTHD(bth) &apos; th или td
		
		&apos; обработка атрибутов valign - если они &quot;пустые&quot; - то их не заносим в fb2 код для &quot;виртуальных строк&quot;
		sTagTDH = MakeValignAttr(CellCursor, sTVA, sTHDAttr)
		
		&apos; // формируем &quot;виртуальные&quot; строки для многоабзацевых строк таблицы //
		Dim aCellAllFormatText() As String	&apos; массив ячеек со всеми их отформатированными inline стилями абзацами
		Dim aCellWithLines() As String		&apos; Сформированный fb2 код Ячейки со всеми абзацами
		
		&apos; разбивка в массив строки на абзацы, с учетом заблокированной ячейки
		If Cell.IsProtected = True Then &apos; заблокированные ячейки
			sFormatCellText = ReplaceInString( sFormatCellText, chr(10), &quot; &quot;, False )
			aCellAllFormatText = Split(sFormatCellText, &quot;&quot;) &apos; объединенные абзацы одной строкой
		Else
			aCellAllFormatText = Split(sFormatCellText, chr(10))
		End If
		
		&apos; убираем перевод строки в абзацах, если он есть (чтобы он не стоял между текстом строки и закрывающим тэгом) /Просто для &quot;красоты&quot; fb2 кода. Экспорт корректен и без этого/
		DelCR( aCellAllFormatText() )
			
		ReDim aCellWithLines(nMaxLines)
		For i = LBound(aCellAllFormatText) To nMaxLines
			&apos; Выравнивание строк: влево - 0, вправо - 1, по центру - 3, по ширине - 2	
			If UBound(aCellAllFormatText) = nMaxLines Then		
				aCellWithLines(i) = sTagTDH &amp; &quot;&quot;&quot;&gt;&quot; &amp; aCellAllFormatText(i) &amp; &quot;&lt;/&quot; &amp; sTHDAttr &amp; &quot;&gt;&quot; &amp; chr(10)
			Else &apos; дополняем &quot;отсутствующие&quot; строки до числа nMaxLines
				For j = 0 To UBound(aCellAllFormatText)
					aCellWithLines(j) = sTagTDH &amp; &quot;&quot;&quot;&gt;&quot; &amp; aCellAllFormatText(j) &amp; &quot;&lt;/&quot; &amp; sTHDAttr &amp; &quot;&gt;&quot; &amp; chr(10)
				Next j
				For j = UBound(aCellAllFormatText)+1 To nMaxLines
					aCellWithLines(j) = &quot;&lt;&quot; &amp; sTHDAttr &amp; &quot;/&gt;&quot; &amp; chr(10)
				Next j
				Exit For
			End If
		Next i
		
		&apos; формируем промежуточный массив массивов строк таблицы с &quot;виртуальными&quot; абзацами из &quot;виртуальных&quot; ячеек
		i = Ubound(sRowWithLines(), 1) + 1
		If i &gt; 0 Then
			ReDim Preserve sRowWithLines(i, nMaxLines)
		Else Redim sRowWithLines(i, nMaxLines)
		End If

		For i = 0 To nMaxLines
			sRowWithLines(iCol, i) = aCellWithLines(i)
		Next i

		iCel = iCel+1
	Next iCol

	&apos; объединяем строки одной линии из смежных ячеек
	Dim sMergeLines(nMaxLines)
	For i = 0 To UBound(sRowWithLines)
		If nMaxLines &gt; 0 Then
			For j = 0 To nMaxLines
				sMergeLines(j) = sMergeLines(j) &amp; sRowWithLines(i, j)
			Next j
		Else
			sMergeLines(0) = sMergeLines(0) &amp; sRowWithLines(i, 0)
		End If
	Next i

	&apos; теперь собираем ячейки в &quot;свои&quot; &lt;tr&gt;
	For i = 0 To UBound(sMergeLines())
		sRow = sRow &amp; &quot;&lt;tr&gt;&quot; &amp; chr(10) &amp; sMergeLines(i) &amp; &quot;&lt;/tr&gt;&quot; &amp; chr(10)
	Next i
	
	MakeVirtualFormatRowSimpleTable = sRow
End Function

Function GetTHD(bth As Boolean) As String
	&apos; определение тэга для заголовков и (или) строк таблицы
	If bth = True Then
		GetTHD = &quot;th&quot; &apos; для заголовков таблицы
	Else
		GetTHD = &quot;td&quot; &apos; для строк таблицы
	End If
End Function

Function MakeValignAttr(CellCursor, sTVA As String, sTHDTag As String) As String
	&apos; обработка атрибутов valign - если они &quot;пустые&quot; - то их не заносим в fb2 код
	&apos; sTHDTag - тэг th или td
	Dim sTagTDHAttr As String
	sTagTDHAttr = &quot;&lt;&quot; &amp; sTHDTag &amp; &quot; align=&quot;&quot;&quot; &amp; GetFB2ParagraphAdjust(CellCursor)
	If sTVA &lt;&gt; &quot;&quot; Then
		sTagTDHAttr = sTagTDHAttr &amp; &quot;&quot;&quot; valign=&quot;&quot;&quot; &amp; sTVA
	End If
	MakeValignAttr = sTagTDHAttr
End Function



&apos; ///////////////////////////////////////////////////////////////////////////////////////////////////
&apos; /////////////////////////////  Сложные таблицы ////////////////////////////////////////////////////
&apos; ///////////////////////////////////////////////////////////////////////////////////////////////////
Function MakeComplexTable(nHeaderRowCount As Integer, oTable As Object, CellNames) As String
	&apos; обработка только сложных таблиц с разным числом столбцов в строке
	Dim aRows() As String &apos; массив строк в fb2.1 формате
	Dim oCell As Object
	Dim sTable As String &apos; текст таблицы в fb2.1 формате
	Dim nCell As Integer &apos; счетчик ячеек (сквозной) - указатель на текущую ячейку
	Dim nRow As Integer &apos; счетчик строк - указатель на новую строку
	Dim nCollMaxInTable As Integer &apos; max число столбцов в строке по всей таблице
	nCollMaxInTable = GetMaxColInTable(oTable)
	nCell = 0
	nRow = 0	

	Do While nCell &lt;= UBound(CellNames())
		&apos; считываем все ячейки до ячейки “A”. При этом делаем проверку на выход за верхнюю границу таблицы – Ubound(CellNames()).
		Dim c As String, sNumber As String
		Dim nColumnCountInRow As Integer &apos; число столбцов в строке сложной таблицы
		
		&apos; 1. Параметры строк таблицы
		&apos; число столбцов в строке сложной таблицы
		nColumnCountInRow = GetColumnCountInRow(oTable, nCell, CellNames)
		&apos; находим max число абзацев в строке, учитывая то, что защищенная ячейка игнорируется и считается, что содержит 1 абзац. Т.е. все абзацы в ней сливаем вместе
		Dim n As Integer, nMaxLines As Integer &apos; максимальное число абзацев (по смежным ячейкам в пределах одной строки таблицы)
		n = nCell
		nMaxLines = GetMaxLineInRowWithProtect(oTable, CellNames, n, nColumnCountInRow)
	
		&apos; форматируем inline стилями абзацы ячейки
		Dim aCellAllFormatText() As String	&apos; массив ячейки со всеми ее отформатированными inline стилями абзацами
		aCellAllFormatText = MakeWorkCellPara( oTable, CellNames(nCell) )
			
		&apos; формируем промежуточный массив массивов строк таблицы с &quot;виртуальными&quot; абзацами из &quot;виртуальных&quot; ячеек
		Dim aFB2ParasRow() As String	&apos; Сформированный fb2 код всей Строки со всеми абзацами
		oCell = oTable.getCellByName(CellNames(nCell)) &apos; первая ячейка строки
		aFB2ParasRow = MakeFB2ParasRow( aFB2ParasRow, aCellAllFormatText(), nMaxLines, _
										GetFB2ParagraphAdjust(oCell.createTextCursor()), _
										nHeaderRowCount, nRow )
		nCell = nCell + 1 &apos; к следующей ячейке
		
		Do While nCell &lt;= UBound(CellNames()) &apos; следующая ячейка строки
			&apos; форматируем inline стилями абзацы ячейки
			aCellAllFormatText = MakeWorkCellPara( oTable, CellNames(nCell) )
			&apos; форматированная строка ячейки (с учетом коррекции проблемных символов)
			oCell = oTable.getCellByName(CellNames(nCell))
			c = GetCellLetterAndNumber(oCell.Cellname, sNumber)
			If c &lt;&gt; &quot;A&quot; Then
				&apos; формируем промежуточный массив массивов строк таблицы с &quot;виртуальными&quot; абзацами из &quot;виртуальных&quot; ячеек
				aFB2ParasRow = MakeFB2ParasRow( aFB2ParasRow, aCellAllFormatText(), nMaxLines, _
												GetFB2ParagraphAdjust(oCell.createTextCursor()), _
												nHeaderRowCount, nRow )
				nCell = nCell + 1
			Else &apos; нашли новую строку таблицы
				nRow = nRow + 1
				Exit Do
			End If
		Loop
				
		&apos; формируем виртуальные строки &lt;tr&gt; для каждой строки таблицы
		AddNewItemToArray1( aRows, MakeTRRow( aFB2ParasRow(), nCollMaxInTable, nMaxLines ) )
	Loop
	
	&apos; формируем полный текст в fb2.1 для таблицы
	sTable = &quot;&lt;table&gt;&quot; &amp; chr(10)
	Dim i As Integer
	For i=0 To UBound(aRows())
		sTable = sTable &amp; aRows(i)
	Next i
	sTable = sTable &amp; &quot;&lt;/table&gt;&quot;
	MakeComplexTable = sTable
End Function

Function MakeFB2ParasRow( aFB2ParasRow() As String, aCellAllFormatText() As Variant, _
							nMaxLines As Integer, sAlling As String, _
							nHeaderRowCount As Integer, nRow As String ) As Variant
	&apos; формируем промежуточный массив массивов строк таблицы с &quot;виртуальными&quot; абзацами из &quot;виртуальных&quot; ячеек
	Dim i As Integer &apos; размерность массива
	&apos; 1. формируем fb2 код Ячейки со всеми абзацами
	Dim aCellWithLines(nMaxLines) As String
	aCellWithLines = MakeFB2ParasCell( aCellAllFormatText(), nMaxLines )
	&apos; 2. задаем аттрибуты
	Dim sTagTDH As String, sTagStart As String, sTagEnd As String
	sTagTDH = MakeValignAttrComplex(sAlling, sLineTVA, &quot;td&quot;)
	&apos; обработка заголовков таблицы
	If nHeaderRowCount &gt; 0 Then
		If	nRow &lt; nHeaderRowCount Then &apos; для заголовков сложной таблицы
			sTagTDH = MakeValignAttrComplex(sAlling, sHeaderTVA, &quot;th&quot;)
			sTagStart = sTagStart &amp; sTagTDH &amp; &quot;&gt;&quot;
			sTagEnd = &quot;&lt;/th&gt;&quot; &amp; chr(10)
		Else
			sTagStart = sTagStart &amp; sTagTDH &amp; &quot;&gt;&quot;
			sTagEnd = &quot;&lt;/td&gt;&quot; &amp; chr(10)
		End If
	Else
		sTagStart = sTagStart &amp; sTagTDH &amp; &quot;&gt;&quot;
		sTagEnd = &quot;&lt;/td&gt;&quot; &amp; chr(10)
	End If
	
	&apos; 3. формируем промежуточный массив массивов строк таблицы с &quot;виртуальными&quot; абзацами из &quot;виртуальных&quot; ячеек
	i = Ubound(aFB2ParasRow(), 1) + 1
	If i &gt; 0 Then
		ReDim Preserve aFB2ParasRow(i, nMaxLines)
	Else Redim aFB2ParasRow(i, nMaxLines)
	End If
	Dim j As Integer
	For j = 0 To nMaxLines
		aFB2ParasRow(UBound(aFB2ParasRow), j) = sTagStart &amp; aCellWithLines(j) &amp; sTagEnd
	Next j

	MakeFB2ParasRow = aFB2ParasRow &apos; Сформированный fb2 код всей Строки со всеми абзацами
End Function

Function MakeFB2ParasCell( aCellAllFormatText() As Variant, nMaxLines As Integer) As Variant
	&apos; формируем fb2 код Ячейки со всеми абзацами
	Dim i As Integer, j As Integer
	Dim aCellWithLines(nMaxLines) As String &apos; Сформированный fb2 код Ячейки со всеми абзацами
	For i = LBound(aCellAllFormatText) To nMaxLines
		&apos; Выравнивание строк: влево - 0, вправо - 1, по центру - 3, по ширине - 2	
		If UBound(aCellAllFormatText) = nMaxLines Then		
			aCellWithLines(i) = aCellAllFormatText(i)
		Else &apos; дополняем &quot;отсутствующие&quot; строки до числа nMaxLines
			For j = 0 To UBound(aCellAllFormatText)
				aCellWithLines(j) = aCellAllFormatText(j)
			Next j
			For j = UBound(aCellAllFormatText)+1 To nMaxLines
				aCellWithLines(j) = &quot;&quot;
			Next j
			Exit For
		End If
	Next i
	
	&apos; 2. убираем перевод строки в абзацах, если он есть (чтобы он не стоял между текстом строки и закрывающим тэгом) /Просто для &quot;красоты&quot; fb2 кода. Экспорт корректен и без этого/
	DelCR( aCellWithLines() )
	
	MakeFB2ParasCell = aCellWithLines
End Function

Function MakeValignAttrComplex(sTA As String, sTVA As String, sTHDTag As String) As String
	&apos; для сложных таблиц: обработка атрибутов valign - если они &quot;пустые&quot; - то их не заносим в fb2 код
	&apos; sTHDTag - тэг th или td
	Dim sTagTDHAttr As String
	sTagTDHAttr = &quot;&lt;&quot; &amp; sTHDTag &amp; &quot; align=&quot;&quot;&quot; &amp; sTA &amp; &quot;&quot;&quot;&quot;
	If sTVA &lt;&gt; &quot;&quot; Then
		sTagTDHAttr = sTagTDHAttr &amp; &quot; valign=&quot;&quot;&quot; &amp; sTVA &amp; &quot;&quot;&quot;&quot;
	End If
	MakeValignAttrComplex = sTagTDHAttr
End Function

Function InsertColspanFor1Row( aFB2ParasRow() As String, nCollMaxInTable As Integer, nMaxLines As Integer )
	&apos; вставляем colspan для строки из 1-й ячейки (colspan=nCollMaxInTable)
	Dim sStr As String, i As Integer
	For i=0 To nMaxLines
		sStr = aFB2ParasRow(0,i)
		InsertInString( sStr, &quot;&gt;&quot;, &quot; colspan=&quot;&quot;&quot; &amp; nCollMaxInTable &amp; &quot;&quot;&quot;&gt;&quot; )
		aFB2ParasRow(0,i) = sStr
	Next i
End Function

Function InsertColspanForCutRow( aFB2ParasRow() As String )
	&apos; вставляем colspan для “урезанной” строки
	&apos; Доделать!!! Надо знать width ячейки для расчета cilspan
End Function

Function MakeTRRow( aFB2ParasRow() As String, nCollMaxInTable As Integer, nMaxLines As Integer ) As String
	&apos; создание &lt;tr&gt; строки для сложной таблицы
	Dim sRow As String
	&apos; 1. вставляем colspan в тэги
	&apos; определяем тип строки:
	If UBound(aFB2ParasRow()) = nCollMaxInTable-1 Then
		&apos; “полная” строка - ничего вставлять не надо
	Else &apos; число ячеек строки &lt; число столбцов самой “длинной” строки таблицы
		If UBound(aFB2ParasRow()) &gt; 0 Then &apos; “урезанная” строка.
			&apos; вставляем colspan для “урезанной” строки
			InsertColspanForCutRow( aFB2ParasRow() )
		Else &apos; строка из одной строки
			&apos; вставляем colspan для строки, состоящей из 1-й ячейки (colspan=nCollMaxInTable)
			InsertColspanFor1Row( aFB2ParasRow(), nCollMaxInTable, nMaxLines )
		End If
	End If
	
	&apos; 2. объединяем строки одной линии из смежных ячеек
	Dim aMergeVirtPara(nMaxLines) As String, i As Integer, j As Integer
	For i = 0 To UBound(aFB2ParasRow)
		If nMaxLines &gt; 0 Then
			For j = 0 To nMaxLines
				aMergeVirtPara(j) = aMergeVirtPara(j) &amp; aFB2ParasRow(i, j)
			Next j
		Else
			aMergeVirtPara(0) = aMergeVirtPara(0) &amp; aFB2ParasRow(i, 0)
		End If
	Next i
	
	&apos; 3. формирует строку таблицы
	sRow = &quot;&quot;
	For i = 0 To UBound(aMergeVirtPara())
		sRow = sRow &amp; &quot;&lt;tr&gt;&quot; &amp; chr(10) &amp; aMergeVirtPara(i) &amp; &quot;&lt;/tr&gt;&quot; &amp; chr(10)
	Next i
	
	MakeTRRow = sRow
End Function

Function GetFormatedCellText(oCell As Object) As String
	Dim sCellString As String
	sCellString = oCell.getString()
		
	&apos; обработка проблемных символов
	If bCorrectPara = True Then
		sCellString = CorrectPara(sCellString)
	End If
		
	&apos; форматирование строк inline стилями
	&apos; СДЕЛАТЬ!!!
	&apos;sFormatCellText = FormatCellText(CellCursor, sCellString)
	GetFormatedCellText = sCellString
End Function

Function MakeWorkCellPara( oTable As Object, sCellName As String ) As Variant
	&apos; обработка проблемных символов, форматирование ячеек и разбивка их на абзацы
	Dim oCell As Object, sFormatCellText As String, i As Integer
	Dim aCellAllFormatText() As String	&apos; массив ячейки со всеми ее отформатированными inline стилями абзацами
	&apos; форматированная строка ячейки (с учетом коррекции проблемных символов)
	oCell = oTable.getCellByName(sCellName) &apos; первая ячейка строки
	sFormatCellText = GetFormatedCellText(oCell)
		
	&apos; массив ячейки со всеми ее отформатированными inline стилями абзацами
	If oCell.IsProtected = True Then &apos; заблокированные ячейки
		sFormatCellText = ReplaceInString( sFormatCellText, chr(10), &quot; &quot;, False )
		aCellAllFormatText = Split(sFormatCellText, &quot;&quot;) &apos; объединенные абзацы одной строкой
	Else
		aCellAllFormatText = Split(sFormatCellText, chr(10))
	End If

	MakeWorkCellPara = aCellAllFormatText
End Function


</script:module>