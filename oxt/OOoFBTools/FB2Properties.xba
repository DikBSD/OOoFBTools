<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="FB2Properties" script:language="StarBasic">REM  *****  BASIC  *****
&apos;====================================================================
&apos; 				модуль работы с диалогом fb2 свойств документа
&apos;====================================================================

Option Explicit

Public Const sConstFB2PropEditorSettings	As String = &quot;FB2PropertiesEditorSettings.txt&quot;	&apos; файл настроек диалога Редактора fb2 свойств
Public Const sConstMyGenre					As String = &quot;genre_favorites.txt&quot;				&apos; файл Избранных Жанров
Public Const sConstMyGenreSettings			As String = &quot;mygenre_settings.txt&quot;				&apos; файл настроек Избранных Жанров
Public Const sConstSettings					As String = &quot;settings.txt&quot;						&apos; файл настроек
Public Const sConstFB2AuthorProfile			As String = &quot;profile.txt&quot;						&apos; файл профиля Автора fb2 документа

Public oFB2PropertiesDlg	As Object
Public oGEDlg				As Object

Private bWorkStart			As Boolean &apos; флаг начала работы Редактора (True). Защита от повторного запуска диалога
Private bWorkEnd			As Boolean &apos; флаг конца работы Редактора - закрытия диалога (True)

Private sLangList() 			As String &apos; список языков
Private saTranslitLetters(66)	As String &apos; для транслитерации

&apos; ===========================================================================================================================
&apos; 										запуск формы Редактора fb2 свойств
&apos; ===========================================================================================================================
Sub FB2PropertiesDlg_windowActivated(oEv)
End Sub

Sub FB2PropertiesDlg_windowDeactivated(oEv)
End Sub

Sub FB2PropertiesDlg_windowOpened(oEv)
	bWorkStart = True &apos; Защита от повторного запуска диалога
End Sub

Sub FB2PropertiesDlg_windowClosing(oEv)
	bWorkEnd	= True	&apos; флаг закрытия дмалога
	bWorkStart	= False	&apos; готовность к новому запуску диалога
End Sub

Sub FB2PropertiesDlg_windowClosed(oEv)
End Sub

Sub FB2PropertiesDlg_windowMinimized(oEv)
End Sub

Sub FB2PropertiesDlg_windowNormalized(oEv)
End Sub

Sub FB2PropertiesDlg_disposing(oEv)
End Sub

&apos;***************************************************************************
&apos; запуск формы Редактора fb2 свойств
Sub FB2PropertiesEditorDlgExec()
	If bWorkStart Then Exit Sub &apos; Защита от повторного запуска диалога
	
	&apos; инициализация сообщений формы Редактора fb2 свойств в зависимости от локали
	InitFB2PropertiesDlgMessage()
	Dim oProgressBar As Object : oProgressBar = ThisComponent.CurrentController.StatusIndicator
	oProgressBar.start( sFB2PED.sFB2PropEditorDlgCreateDialog+&quot;, &quot; &amp; sFB2PED.sFB2PropEditorDlgInit, 5 )
	oProgressBar.setValue(0)
	
	&apos; Создание формы
	GlobalScope.BasicLibraries.LoadLibrary( &quot;Tools&quot; )
	oFB2PropertiesDlg = LoadDialog( &quot;OOoFBTools&quot;, &quot;FB2PropertiesDlg&quot; )
	oProgressBar.setValue(1)

	&apos; инициализация формы Редактора fb2 свойств в зависимости от локали
	InitFB2PropertiesDlg()
	&apos; инициализация массива транслитерации
	MakeTranslitLettersList( saTranslitLetters() )
	oProgressBar.setValue(2)

	&apos; создание списков языков книги
	MakeLangList( sLangList() )
	oProgressBar.setValue(3)

	&apos; читаем избранные жанры из файла, если он есть
	Dim aArray() As String
	ReadFileInArray( aArray(), getOOoFBToolsSettingsDir() &amp; sConstMyGenre )
	oFB2PropertiesDlg.Model.lbGenreElite.StringItemList = aArray()
	oProgressBar.setValue(4)
	
	&apos; задаем положение диалога из файла настроек
	LoadFB2PropEditorFormSettings()
	&apos; Есть ли хоть одно fb2 свойство в документе?
	Dim bFB2NotFlagPropertyIsExsist As Boolean : bFB2NotFlagPropertyIsExsist = IsFB2NotFlagPropertyIsExsist()
	
	&apos; заполняем списки Жанрами, взависимости от выбранной Схемы
	With oFB2PropertiesDlg.Model
		If .obtnFB21.State = True Or .obtnFB21.State = 1 Then
			InitFB21() &apos; Инициализация жанрами схемы FictionBook 2.1
		ElseIf .obtnFB22.State = True Or .obtnFB22.State = 1 Then
			InitFB22() &apos; Инициализация жанрами схемы FictionBook 2.2
		Else
			InitFBLibRusEc() &apos; Инициализация жанрами схемы FictionBook 2 LibRusEc
		End If
	End With
	oProgressBar.setValue(5)
	oProgressBar.end
	
	&apos; заполнение контролов формы
	Dim ProgressCount As Integer : ProgressCount = 3
	If bFB2NotFlagPropertyIsExsist Then ProgressCount = 43
	oProgressBar.start( sFB2PED.sFB2PropEditorDlgCreateDialog+&quot;, &quot; &amp; sFB2PED.sFB2PropEditorDlgLoadFB2Properties, ProgressCount )
	oProgressBar.setValue(0)
	With oFB2PropertiesDlg
		.getControl( &quot;SrcLangComboBox&quot; ).AddItem( &quot;&quot;, 0 )
		.getControl( &quot;Codepage&quot; ).addItems(Array( &quot;utf-8&quot;, &quot;windows-1251&quot;), 0 )
		.getControl( &quot;Codepage&quot; ).SelectItemPos( 0, True )
	End With
	Dim Iter As Integer : Iter = 1
	oProgressBar.setValue(Iter) : Iter = Iter + 1
	Dim sNow As String : sNow = Now
	With oFB2PropertiesDlg.Model
		.LangComboBox.StringItemList	= sLangList()
		.SrcLangComboBox.StringItemList	= sLangList()
		.ProgrammUsedField.Text		= &quot;OOoFBTools-&quot; &amp; getMyVersion( &quot;DikBSD.OOoFBTools&quot; ) &amp; &quot; &quot; &amp; &quot;(ExportToFB21)&quot;
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		.NumericFieldMatch.Value	= &quot;0&quot;
		If bFB2NotFlagPropertyIsExsist Then
			&apos; загрузка из свойств документа fb2 свойств в контролы формы
			GetFB2PropertiesFromDoc( oProgressBar, Iter )
		End If
	End With
	oProgressBar.setValue(Iter)
	
	If Not bFB2NotFlagPropertyIsExsist Then
		&apos; Читаем стили и задаем значения переменным (для Book Title)
		SetFB2LocalStylesToVars()
		With oFB2PropertiesDlg.Model
			.BookTitleField.Text	= GetTextOfStyle( sStyleBookTitle, True )
			.VersionField.Text		= &quot;1.0&quot;
			&apos; язык книги по-умолчанию - локаль Ooo
			SetBookLangOOoDefaultLocal( oFB2PropertiesDlg, &quot;LangComboBox&quot; )
			&apos; генерируем ID Книги
			bComplexID = IsComplexID() &apos; Задана ли сложная генерация ID?
			.IDField.Text = GetNewBookID( bComplexID )
		End With
		&apos; Читаем установки и задаем значения контролам профиля автора документа fb2
		_ReadProfile( getOOoFBToolsSettingsDir() &amp; sConstFB2AuthorProfile, 1 )
		If IsFB2AuthorInput() Then
			&apos; добавляем Автора fb2-файла в ListBox
			_FB2AuthorAdd()
		End If
		oProgressBar.setValue(Iter) : Iter = Iter + 1
	End If

	oProgressBar.end
	
	bWorkEnd = False
	
	Dim oList : oList = createUnoListener( &quot;FB2PropertiesDlg_&quot;,&quot;com.sun.star.awt.XTopWindowListener&quot; )
	With oFB2PropertiesDlg
		.addTopWindowListener( oList )
		.setVisible( True )
	End With
	While Not bWorkEnd
		Wait 200     
	Wend
	
	oFB2PropertiesDlg.setVisible( False )
End Sub

Sub CloseDlg()
	bWorkEnd	= True	&apos; флаг закрытия дмалога
	bWorkStart	= False	&apos; готовность к новому запуску диалога
	&apos; сохраняем некоторые настройки формы
	SaveFB2PropEditorDlgSettings()
	oFB2PropertiesDlg.endExecute()
End Sub

&apos;***************************************************************************
&apos; Нужно ли генерировать сложный ID fb2 файла: Возвращает True - да; False - нет
Function IsComplexID() As Boolean
	If FileExists( getOOoFBToolsSettingsDir() &amp; sConstSettings ) Then
		Dim sLine As String
		Dim oSFA As Object, oFS As Object, oTIS As Object

		oSFA = createUnoService ( &quot;com.sun.star.ucb.SimpleFileAccess&quot; )
		oFS = oSFA.openFileRead ( ConvertToURL ( getOOoFBToolsSettingsDir() &amp; sConstSettings ) )
		oTIS = createUnoService ( &quot;com.sun.star.io.TextInputStream&quot; )
		oTIS.setInputStream ( oFS )
		Do While ( NOT oTIS.isEOF() )
			sLine = oTIS.readLine()
			If sLine &lt;&gt; &quot;&quot; Then
				Dim sSetting() As String : sSetting = Split( sLine, &quot;=&quot; )
				Select Case sSetting(0)
				Case &quot;cboxComplexID&quot; &apos; генерировать сложный ID Книги
					IsComplexID = sSetting(1)
					oTIS.closeInput()
					Exit Function
				End Select
			End If
		Loop
		oTIS.closeInput()
	End If
End Function

&apos;***************************************************************************
&apos; Инициализация жанрами схемы FictionBook 2.1
Sub InitFB21()
	GenreFB21()

	With oFB2PropertiesDlg.Model
		.Title = sFB2PED.sFB2PropEditorDlgTitle &amp; &quot; - &quot; &amp; sGD.sSchemeFB21
		.GenreComboBox.StringItemList = sGLN()
	End With
End Sub

&apos;***************************************************************************
&apos; Инициализация жанрами схемы FictionBook 2.2
Sub InitFB22()
	GenreFB22()

	With oFB2PropertiesDlg.Model
		.Title = sFB2PED.sFB2PropEditorDlgTitle &amp; &quot; - &quot; &amp; sGD.sSchemeFB22
		.GenreComboBox.StringItemList = sGLN()
	End With
End Sub

&apos;***************************************************************************
&apos; Инициализация жанрами схемы FictionBook 2 LibRusEc
Sub InitFBLibRusEc()
	GenreFB2LibRusEc()

	With oFB2PropertiesDlg.Model
		.Title = sFB2PED.sFB2PropEditorDlgTitle &amp; &quot; - &quot; &amp; sGD.sSchemeFB2LibRusEc
		.GenreComboBox.StringItemList = sGLN()
	End With
End Sub

&apos;***************************************************************************
&apos; Читаем настройки и задаем значения контролам основной формы
Function LoadFB2PropEditorFormSettings() As Boolean
	On Error Resume Next
	Dim sFileName As String : sFileName = getOOoFBToolsSettingsDir() &amp; sConstFB2PropEditorSettings
	Dim nX As Integer, nY As Integer
	If FileExists( sFileName ) Then
		Dim sLine As String
		Dim oSFA As Object, oFS As Object, oTIS As Object
		
		oSFA = createUnoService ( &quot;com.sun.star.ucb.SimpleFileAccess&quot; )
		oFS = oSFA.openFileRead ( ConvertToURL ( sFileName ) )
		oTIS = createUnoService ( &quot;com.sun.star.io.TextInputStream&quot; )
		oTIS.setInputStream (oFS)
		Do While ( NOT oTIS.isEOF() )
			sLine = oTIS.readLine()
			If sLine &lt;&gt; &quot;&quot; Then
				&apos; Устанавливаем данные
				Dim sSetting() As String : sSetting = Split(sLine, &quot;=&quot;)
				If sSetting(0) = &quot;obtnFB21&quot; Or sSetting(0) = &quot;obtnFB22&quot; Or sSetting(0) = &quot;obtnFB2LibRusEc&quot; Then
					oFB2PropertiesDlg.getControl( sSetting(0) ).setState( sSetting(1) )
				ElseIf sSetting(0) = &quot;X&quot; Then
					nX = sSetting(1)
				ElseIf sSetting(0) = &quot;Y&quot; Then
					nY = sSetting(1)
				ElseIf sSetting(0) = &quot;Codepage&quot; Then
					Dim oLB As Object : oLB = oFB2PropertiesDlg.getControl( sSetting(0) )
					oLB.SelectItemPos( sSetting(1), True )
				End If
			End If
		Loop
		oTIS.closeInput()
		oFB2PropertiesDlg.setPosSize( nX, nY, 359, 408, com.sun.star.awt.PosSize.POS )
		LoadFB2PropEditorFormSettings = True
	Else
		LoadFB2PropEditorFormSettings = False
	End If
End Function

&apos;***************************************************************************
&apos; записываем настройки Редактора fb2 свойств
Sub SaveFB2PropEditorDlgSettings()
	Dim oOS As Object, oFA As Object, oTOS As Object
	oFA = CreateUnoService(&quot;com.sun.star.ucb.SimpleFileAccess&quot;)
	oTOS = CreateUnoService(&quot;com.sun.star.io.TextOutputStream&quot;)
	
	oOS = oFA.openFileWrite( getOOoFBToolsSettingsDir() &amp; sConstFB2PropEditorSettings )
	oOS.truncate()
	oTOS.setOutputStream( oOS )
	oTOS.setEncoding( &quot;utf-8&quot; )

	Dim ctrl As Object, i As Integer
	ctrl = oFB2PropertiesDlg.getControls()
	For i=LBound(ctrl) To UBound(ctrl)
		If ctrl(i).getImplementationName() = &quot;stardiv.Toolkit.UnoRadioButtonControl&quot; Then
			If ctrl(i).Model.Name = &quot;obtnFB21&quot; Or ctrl(i).Model.Name = &quot;obtnFB22&quot; Or ctrl(i).Model.Name = &quot;obtnFB2LibRusEc&quot; Then
				oTOS.writeString(ctrl(i).Model.Name &amp; &quot;=&quot; &amp; ctrl(i).Model.State &amp; chr(10))
			End If
		ElseIf ctrl(i).getImplementationName() = &quot;stardiv.Toolkit.UnoListBoxControl&quot; Then
			If ctrl(i).Model.Name = &quot;Codepage&quot; Then
				oTOS.writeString(ctrl(i).Model.Name &amp; &quot;=&quot; &amp; ctrl(i).SelectedItemPos &amp; chr(10))
			End If
		End If
	Next i
	oTOS.writeString(&quot;X=&quot; &amp; oFB2PropertiesDlg.PosSize.X &amp; chr(10))
	oTOS.writeString(&quot;Y=&quot; &amp; oFB2PropertiesDlg.PosSize.Y &amp; chr(10))
	oTOS.writeString(&quot;end of file&quot; &amp; chr(10))
	oTOS.closeOutput()
End Sub

&apos; ===========================================================================================================================
&apos; 										работа вспомогательных контролов
&apos; ===========================================================================================================================

&apos; сохранение fb2 данных в свойства документа
Sub SavePropertiesToDoc()
	&apos;проверка, все ли данные введены на форме
	If Not IsAllNeedDataExsist() Then
		Exit Sub
	End If
	
	oFB2PropertiesDlg.setEnable(False)
	Dim oProgressBar As Object : oProgressBar = ThisComponent.CurrentController.StatusIndicator
	oProgressBar.start( sFB2PED.sFB2PropEditorDlgSaveFB2Properties, 27 )
	oProgressBar.setValue(0)
	Dim Iter As Integer : Iter = 1
	&apos; все данные в списках и/или полях - корректные.
	&apos; Теперь, если есть данные в полях, отличные от тех, что в Списках - добавляем их в Списки
	If NOT IsGenreExsistInArray()	Then _BookGenreAdd()
	If IsBookAuthorInput()			Then _BookAuthorAdd()
	If IsBookTranslatorInput()		Then _BookTranslatorAdd()
	If IsBookSequenceInput()		Then _BookSequenceAdd()
	If IsFB2AuthorInput()			Then _FB2AuthorAdd()
	If IsPublisherSequenseInput()	Then _PublisherSequenceAdd()
	If IsCustomInfoInput()			Then _CustomInfoAdd()
	oProgressBar.setValue(0) : Iter = Iter + 1
	&apos; сохраняем fb2 данные в свойства документа
	SaveFB2PropertiesToDoc( oProgressBar, Iter )
	&apos; закрываем диалог
	oFB2PropertiesDlg.setEnable(True)
	CloseDlg()
	oProgressBar.end
End Sub

&apos;***************************************************************************
&apos;проверка, все ли данные заполнены
Function IsAllNeedDataExsist() As Boolean
	IsAllNeedDataExsist = False

	With oFB2PropertiesDlg
		&apos; проверка, задан ли хоть один Жанр Книги
		If .getControl(&quot;lbGenre&quot;).getItemCount() = 0 Then
			If ( Not IsBookGenreInput() ) OR IsBookGroupeGenreSelect() Then
				MsgBox sFB2PED.sFB2PropEditorDlgSelectGenre, 64, sConvertorName
				.Model.Step = 1
				.getControl(&quot;optbtnTitleInfo&quot;).setState(True)
				.getControl(&quot;GenreComboBox&quot;).setFocus()
				Exit Function
			End If
		End If

		&apos; проверка, задано ли Название Книги
		If Trim(.Model.BookTitleField.Text) = &quot;&quot; Then
			MsgBox sFB2PED.sFB2PropEditorDlgFillBookTitle, 64, sConvertorName
			.Model.Step = 1
			.getControl(&quot;optbtnTitleInfo&quot;).setState(True)
			.getControl(&quot;BookTitleField&quot;).setFocus()
			Exit Function
		End If
		&apos; проверка, задана ли Версия fb2-файла
		If Trim(.Model.VersionField.Text) = &quot;&quot; Then
			MsgBox sFB2PED.sFB2PropEditorDlgFillVersion, 64, sConvertorName
			.Model.Step = 2
			.getControl(&quot;optbtnDocumentInfo&quot;).setState(True)
			.getControl(&quot;VersionField&quot;).setFocus()
			Exit Function
		End If
		&apos; проверка, задан ли ID fb2-файла
		If Trim(.Model.IDField.Text) = &quot;&quot; Then
			MsgBox sFB2PED.sFB2PropEditorDlgFillID, 64, sConvertorName
			.Model.Step = 2
			.getControl(&quot;optbtnDocumentInfo&quot;).setState(True)
			.getControl(&quot;IDField&quot;).setFocus()
			Exit Function
		End If
	End With
	
	IsAllNeedDataExsist = True
End Function

&apos;***************************************************************************
&apos; перключение &quot;вкладок&quot; групп fb2 свойств
Sub ChangeDesc(o)
	If o.Source.Model.Name = &quot;optbtnTitleInfo&quot; Then
		oFB2PropertiesDlg.Model.Step = 1
	ElseIf o.Source.Model.Name = &quot;optbtnDocumentInfo&quot; Then
		oFB2PropertiesDlg.Model.Step = 2
	ElseIf o.Source.Model.Name = &quot;optbtnPublishInfo&quot; Then
		oFB2PropertiesDlg.Model.Step = 3
	ElseIf o.Source.Model.Name = &quot;optbtnCustomInfo&quot; Then
		oFB2PropertiesDlg.Model.Step = 4
	End If
End Sub

&apos;***************************************************************************
&apos; перемещение выбранного ListBoxItem вверх
Sub ListBoxItemUp( ByRef ListBox As stardiv.Toolkit.UnoListBoxControl )
	If ListBox.SelectedItemPos = -1 Then
		Exit Sub
	End If
	If ListBox.SelectedItemPos &gt; 0 Then
		Dim ItemPos As Integer : ItemPos = ListBox.SelectedItemPos
		Dim sArray() As String : sArray() = ListBox.Items
		swap( sArray(), ListBox.SelectedItemPos-1, ListBox.SelectedItemPos )
		ListBox.removeItems(0, ListBox.getItemCount())
		ListBox.addItems(sArray(), 0)
		ListBox.selectItemPos(ItemPos-1, True)
	End If
	ListBox.setFocus()
End Sub

&apos;***************************************************************************
&apos; перемещение выбранного ListBoxItem вниз
Sub ListBoxItemDown( ByRef ListBox As stardiv.Toolkit.UnoListBoxControl )
	If ListBox.SelectedItemPos = -1 Then
		Exit Sub
	End If
	Dim sArray() As String : sArray() = ListBox.Items
	If ListBox.SelectedItemPos &lt; UBound(sArray()) Then
		Dim ItemPos As Integer : ItemPos = ListBox.SelectedItemPos
		swap( sArray(), ListBox.SelectedItemPos, ListBox.SelectedItemPos+1 )
		ListBox.removeItems(0, ListBox.getItemCount())
		ListBox.addItems(sArray(), 0)
		ListBox.selectItemPos(ItemPos+1, True)
	End If
	ListBox.setFocus()
End Sub

&apos;***************************************************************************
&apos; удаление выбранного ListBoxItem
Sub ListBoxItemRemove( ByRef ListBox As stardiv.Toolkit.UnoListBoxControl )
	If ListBox.SelectedItemPos = -1 Then Exit Sub
    If MsgBox( sFB2PED.sFB2ExportFB2DeleteItem &amp; chr(10) &amp; ListBox.getSelectedItem() &amp; &quot; ?&quot;, _
    				32+1+128, sConvertorName ) &lt;&gt; 1 Then
    	Exit Sub
	End If
	Dim sArray() As String : sArray() = ListBox.Items
	Dim ItemPos As Integer : ItemPos = ListBox.SelectedItemPos
	ListBox.removeItems(ItemPos, 1)
	If ItemPos = ListBox.getItemCount() Then
		ListBox.selectItemPos(ListBox.getItemCount()-1, True)
	Else
		ListBox.selectItemPos(ItemPos, True)
	End If
	ListBox.setFocus()
End Sub

&apos;***************************************************************************
&apos; проверка, задан ли Жанр в выпадающем списке
Function IsBookGenreInput() As Boolean
	IsBookGenreInput = False
	With oFB2PropertiesDlg
		Dim oGenreComboBox As Object : oGenreComboBox = .getControl(&quot;GenreComboBox&quot;)
		If oGenreComboBox.SelectedItem = &quot;&quot; OR oGenreComboBox.SelectedItemPos = 0 Then
			Exit Function
		End If
	End With
	IsBookGenreInput = True
End Function

&apos;***************************************************************************
&apos; проверка, выбрана ли Группа Жанров в выпадающем списке
Function IsBookGroupeGenreSelect() As Boolean
	IsBookGroupeGenreSelect = True
	With oFB2PropertiesDlg
		Dim oGenreComboBox As Object : oGenreComboBox = .getControl(&quot;GenreComboBox&quot;)
		&apos;ищем в массиве нужный жанр
		Dim sGenreCode As String : sGenreCode = GetGenreInList( oGenreComboBox.SelectedItem )
		If sGenreCode = &quot;?&quot; Then
			Exit Function
		End If
	End With
	IsBookGroupeGenreSelect = False
End Function

&apos;********************************************************************************
&apos; проверяем, есть ли в списке добавляемый Жанр
Function IsGenreExsistInArray() As Boolean
	IsGenreExsistInArray = False
	With oFB2PropertiesDlg
		Dim i As Integer
		Dim oGenreList : oGenreList = .getControl(&quot;lbGenre&quot;).Items
		For i=0 To UBound( oGenreList )
			If InStr( oGenreList(i), .getControl(&quot;GenreComboBox&quot;).SelectedItem ) = 1 Then
				IsGenreExsistInArray = True
				Exit For
			End If
		Next i
	End With
End Function

&apos;***************************************************************************
&apos; проверка выбранного Жанра на наличие в Списке добавленных Жанров
&apos; если вводимых данных нет в Списке, возвращает Строку &quot;Жанр | Match%&quot;. Иначе - &quot;&quot;
Function IsNewGenre() As String
	IsNewGenre = &quot;&quot;
	With oFB2PropertiesDlg
		If Not IsGenreExsistInArray() Then
			IsNewGenre = MakeGenreWithMatchString( .getControl(&quot;GenreComboBox&quot;).SelectedItem, .Model.NumericFieldMatch.Value )
		End If
	End With
End Function

&apos;***************************************************************************
&apos; добавление Жанра в ListBox
Sub _BookGenreAdd()
	With oFB2PropertiesDlg
		Dim oGenreComboBox	As Object : oGenreComboBox	= .getControl(&quot;GenreComboBox&quot;)
		Dim oListOfGenres	As Object : oListOfGenres	= .getControl(&quot;lbGenre&quot;)
		Dim sGenreWithMatch	As String : sGenreWithMatch	= IsNewGenre()
		&apos; проверяем, нет ли в списке добавляемого Жанра
		If sGenreWithMatch &lt;&gt; &quot;&quot; Then
			oListOfGenres.addItem( sGenreWithMatch, oListOfGenres.getItemCount() )
			oGenreComboBox.selectItemPos( 0, True )
			.Model.NumericFieldMatch.Value = &quot;0&quot;
		End If
	End With
End Sub

&apos;***************************************************************************
&apos; добавление Жанра в ListBox
Sub BookGenreAdd()
	With oFB2PropertiesDlg
		Dim oGenreComboBox As Object : oGenreComboBox = .getControl(&quot;GenreComboBox&quot;)
		&apos; проверка, задан ли Жанр в выпадающем списке
		If Not IsBookGenreInput() Then
			MsgBox sFB2PED.sFB2PropEditorDlgSelectGenre, 64, sConvertorName
			.Model.Step = 1
			.getControl(&quot;optbtnTitleInfo&quot;).setState(True)
			oGenreComboBox.setFocus()
			Exit Sub
		End If
		&apos; проверка, выбрана ли Группа Жанров в выпадающем списке
		If IsBookGroupeGenreSelect() Then
			MsgBox sGD.sGenreGroup, 64, sConvertorName
			.Model.Step = 1
			.getControl(&quot;optbtnTitleInfo&quot;).setState(True)
			oGenreComboBox.setFocus()
			Exit Sub
		End If
		&apos; добавляем Жанр в ListBox 
		_BookGenreAdd()
		oGenreComboBox.setFocus()
	End With
End Sub

&apos;***************************************************************************
&apos; Проверка, соответствует ли введеный жанр стандартным
Function GetGenreInList( sGenreName As String ) As String
	GetGenreInList = &quot;&quot;
	&apos;ищем в массиве нужный жанр
	Dim i As Integer
	For i=0 To UBound( sGLN() )
		If sGLN(i) = Trim( sGenreName ) Then
			GetGenreInList = GetGenreCode( sGenreName )
			Exit For
		End If
	Next i
End Function

&apos;***************************************************************************
&apos; перемещение выбранного Жанра вверх
Sub GenreUp()
	ListBoxItemUp( oFB2PropertiesDlg.getControl(&quot;lbGenre&quot;) )
End Sub

&apos;***************************************************************************
&apos; перемещение выбранного Жанра вниз
Sub GenreDown()
	ListBoxItemDown( oFB2PropertiesDlg.getControl(&quot;lbGenre&quot;) )
End Sub

&apos;***************************************************************************
&apos; удаление выбранного Жанра
Sub GenreRemove()
	ListBoxItemRemove( oFB2PropertiesDlg.getControl(&quot;lbGenre&quot;) )
End Sub

&apos;***************************************************************************
&apos; генерация строки Жанра с Match
Function MakeGenreWithMatchString(Genre As String, Match As String) As String
	MakeGenreWithMatchString = Genre &amp; &quot; | &quot; &amp; Match &amp; &quot;%&quot;
End Function

&apos;***************************************************************************
&apos; проверка, задан ли хоть один из данных на Автора Книги
Function IsBookAuthorInput() As Boolean
	IsBookAuthorInput = False
	With oFB2PropertiesDlg.Model
		If Trim(.tiFirst.Text) = &quot;&quot; AND Trim(.tiMiddle.Text) = &quot;&quot; AND Trim(.tiLast.Text) = &quot;&quot; AND _
			Trim(.tiNickname.Text) = &quot;&quot; AND Trim(.tiEmail.Text) = &quot;&quot; AND Trim(.tiHomepage.Text) = &quot;&quot; Then
			Exit Function
		End If
	End With
	IsBookAuthorInput = True
End Function

&apos;***************************************************************************
&apos; проверка вводимого Автора Книги на наличие в Списке добавленных Авторов Книги
&apos; если вводимых данных нет в Списке, возвращает Строку &quot;Имя | Отчество |&quot; и т.д. Иначе - &quot;&quot;
Function IsNewBookAuthor() As String
	IsNewBookAuthor = &quot;&quot;
	With oFB2PropertiesDlg
		Dim oListOfBookAuthors As Object : oListOfBookAuthors = .getControl(&quot;lbBookAuthors&quot;)
		Dim AuthorDataString As String
		AuthorDataString = Trim( MakeAuthorDataString( .Model.tiFirst.Text, .Model.tiMiddle.Text, .Model.tiLast.Text, _
													.Model.tiNickname.Text, .Model.tiEmail.Text, .Model.tiHomepage.Text ) )
		If IsExsistStringInArray( oListOfBookAuthors.Items, AuthorDataString ) = -1 Then
			IsNewBookAuthor = AuthorDataString
		End If
	End With
End Function

&apos;***************************************************************************
&apos; добавление Автора Книги в ListBox
Sub _BookAuthorAdd()
	&apos; проверка вводимого Автора Книги на наличие в Списке добавленных Авторов Книги
	With oFB2PropertiesDlg
		Dim oListOfBookAuthors	As Object : oListOfBookAuthors	= .getControl(&quot;lbBookAuthors&quot;)
		Dim AuthorDataString	As String : AuthorDataString	= IsNewBookAuthor()
		If AuthorDataString &lt;&gt; &quot;&quot; Then
			oListOfBookAuthors.addItem( AuthorDataString, oListOfBookAuthors.getItemCount() )
			.Model.tiFirst.Text		= &quot;&quot;
			.Model.tiMiddle.Text	= &quot;&quot;
			.Model.tiLast.Text		= &quot;&quot;
			.Model.tiNickname.Text	= &quot;&quot;
			.Model.tiEmail.Text		= &quot;&quot;
			.Model.tiHomepage.Text	= &quot;&quot;
		End If
		If bComplexID = True Then
			NewBookID( bComplexID )
		End If
	End With
End Sub

&apos;***************************************************************************
&apos; добавление Автора Книги в ListBox
Sub BookAuthorAdd()
	With oFB2PropertiesDlg
		&apos; проверка, задан ли хоть один из данных на Автора Книги
		If Not IsBookAuthorInput() Then
			MsgBox sFB2PED.sFB2PropEditorDlgFillBookAuthor, 64, sConvertorName
			.getControl(&quot;tiFirst&quot;).setFocus()
			Exit Sub
		End If
		&apos; добавляем Автора Книги в ListBox
		_BookAuthorAdd()
		.getControl(&quot;tiFirst&quot;).setFocus()
	End With
End Sub

&apos;***************************************************************************
&apos; перемещение выбранного Автора Книги вверх
Sub BookAuthorUp()
	ListBoxItemUp( oFB2PropertiesDlg.getControl(&quot;lbBookAuthors&quot;) )
End Sub

&apos;***************************************************************************
&apos; перемещение выбранного Автора Книги вниз
Sub BookAuthorDown()
	ListBoxItemDown( oFB2PropertiesDlg.getControl(&quot;lbBookAuthors&quot;) )
End Sub

&apos;***************************************************************************
&apos; удаление выбранного Автора Книги
Sub BookAuthorRemove()
	Dim oListOfBookAuthors As Object : oListOfBookAuthors = oFB2PropertiesDlg.getControl(&quot;lbBookAuthors&quot;)
	ListBoxItemRemove( oListOfBookAuthors )
	If oListOfBookAuthors.getItemCount() = 0 Then
		If oListOfBookAuthors.getItemCount() &gt; 0 Then
			Redim sAuthors( oListOfBookAuthors.getItemCount(), 5 )
		End If
	End If
	If bComplexID = True Then
		NewBookID( bComplexID )
	End If
End Sub

&apos;***************************************************************************
&apos; генерация строки данных для автора, переводчика...
Function MakeAuthorDataString(First As String, Middle As String, Last As String, Nickname As String, Email As String, Homepage As String) As String
	MakeAuthorDataString = Trim(First) &amp; &quot; | &quot; &amp; Trim(Middle) &amp; &quot; | &quot; &amp; Trim(Last) &amp; &quot; | &quot; &amp; Trim(Nickname) &amp; &quot; | &quot; &amp; Trim(Email) &amp; &quot; | &quot; &amp; Trim(Homepage)
End Function

&apos;***************************************************************************
&apos; проверка, задан ли хоть один из данных на Переводчика Книги
Function IsBookTranslatorInput() As Boolean
	IsBookTranslatorInput = False
	With oFB2PropertiesDlg.Model
		If Trim(.tiTransFirst.Text) = &quot;&quot; AND Trim(.tiTransMiddle.Text) = &quot;&quot; AND Trim(.tiTransLast.Text) = &quot;&quot; AND _
			Trim(.tiTransNickname.Text) = &quot;&quot; AND Trim(.tiTransEmail.Text) = &quot;&quot; AND Trim(.tiTransHomepage.Text) = &quot;&quot; Then
			Exit Function
		End If
	End With
	IsBookTranslatorInput = True
End Function

&apos;***************************************************************************
&apos; проверка вводимого Переводчика Книги на наличие в Списке добавленных Переводчиков Книги
&apos; если вводимых данных нет в Списке, возвращает Строку &quot;Имя | Отчество |&quot; и т.д. Иначе - &quot;&quot;
Function IsNewBookTranslator() As String
	IsNewBookTranslator = &quot;&quot;
	With oFB2PropertiesDlg
		Dim oListOfBookTranslators As Object : oListOfBookTranslators = .getControl(&quot;lbTranslators&quot;)
		Dim TranslatorDataString As String
		TranslatorDataString = Trim( MakeAuthorDataString( .Model.tiTransFirst.Text, .Model.tiTransMiddle.Text, .Model.tiTransLast.Text, _
															.Model.tiTransNickname.Text, .Model.tiTransEmail.Text, .Model.tiTransHomepage.Text ) )
		If IsExsistStringInArray(oListOfBookTranslators.Items, TranslatorDataString) = -1 Then
			IsNewBookTranslator = TranslatorDataString
		End If
	End With
End Function

&apos;***************************************************************************
&apos; добавление Переводчика Книги в ListBox
Sub _BookTranslatorAdd()
	With oFB2PropertiesDlg
		&apos; проверка вводимого Переводчика Книги на наличие в Списке добавленных Переводчиков Книги
		Dim oListOfBookTranslators	As Object : oListOfBookTranslators	= .getControl(&quot;lbTranslators&quot;)
		Dim TranslatorDataString	As String : TranslatorDataString	= IsNewBookTranslator()
		If TranslatorDataString &lt;&gt; &quot;&quot; Then
			oListOfBookTranslators.addItem( TranslatorDataString, oListOfBookTranslators.getItemCount() )
			.Model.tiTransFirst.Text	= &quot;&quot;
			.Model.tiTransMiddle.Text	= &quot;&quot;
			.Model.tiTransLast.Text		= &quot;&quot;
			.Model.tiTransNickname.Text	= &quot;&quot;
			.Model.tiTransEmail.Text	= &quot;&quot;
			.Model.tiTransHomepage.Text	= &quot;&quot;
		End If
	End With
End Sub

&apos;***************************************************************************
&apos; добавление Переводчика Книги в ListBox
Sub BookTranslatorAdd()
	With oFB2PropertiesDlg
		&apos; проверка, задан ли хоть один из данных на Переводчика Книги
		If Not IsBookTranslatorInput() Then
			MsgBox sFB2PED.sFB2PropEditorDlgFillBookTrans, 64, sConvertorName
			.getControl(&quot;tiTransFirst&quot;).setFocus()
			Exit Sub
		End If
		&apos; добавляем Переводчика Книги в ListBox
		_BookTranslatorAdd()
		.getControl(&quot;tiTransFirst&quot;).setFocus()
	End With
End Sub

&apos;***************************************************************************
&apos; перемещение выбранного Переводчика Книги вверх
Sub BookTranslatorUp()
	ListBoxItemUp( oFB2PropertiesDlg.getControl(&quot;lbTranslators&quot;) )
End Sub

&apos;***************************************************************************
&apos; перемещение выбранного Переводчика Книги вниз
Sub BookTranslatorDown()
	ListBoxItemDown( oFB2PropertiesDlg.getControl(&quot;lbTranslators&quot;) )
End Sub

&apos;***************************************************************************
&apos; удаление выбранного Переводчика Книги
Sub BookTranslatorRemove()
	ListBoxItemRemove( oFB2PropertiesDlg.getControl(&quot;lbTranslators&quot;) )
End Sub

&apos;***************************************************************************
&apos; проверка, задан ли хоть один из данных на Серию Электронной Книги
Function IsBookSequenceInput() As Boolean
	IsBookSequenceInput = False
	With oFB2PropertiesDlg.Model
		If Trim(.SequenceTextField.Text) = &quot;&quot; AND Trim(.SequenceNumberTextField.Text) = &quot;&quot; Then
			Exit Function
		End If
	End With
	IsBookSequenceInput = True
End Function

&apos;***************************************************************************
&apos; проверка вводимой Серии Электронной Книги на наличие в Списке добавленных Серию Электронной Книги
&apos; если вводимых данных нет в Списке, возвращает Строку &quot;Серия | Номер&quot;. Иначе - &quot;&quot;
Function IsNewBookSequence() As String
	IsNewBookSequence = &quot;&quot;
	With oFB2PropertiesDlg
		Dim oListOfBookSequencies As Object : oListOfBookSequencies = .getControl(&quot;lbSequencies&quot;)
		Dim BookSequenceDataString As String
		BookSequenceDataString = MakeBookSequenceDataString( Trim(.Model.SequenceTextField.Text), Trim(.Model.SequenceNumberTextField.Text) )
		If IsExsistStringInArray(oListOfBookSequencies.Items, BookSequenceDataString) = -1 Then
			IsNewBookSequence = BookSequenceDataString
		End If
	End With
End Function

&apos;***************************************************************************
&apos; добавление Серии Книги в ListBox
Sub _BookSequenceAdd()
	With oFB2PropertiesDlg
		&apos; проверка вводимой Серии Электронной Книги на наличие в Списке добавленных Серию Электронной Книги
		Dim oListOfBookSequencies	As Object : oListOfBookSequencies	= .getControl(&quot;lbSequencies&quot;)
		Dim BookSequenceDataString	As String : BookSequenceDataString	= IsNewBookSequence()
		If IsNewBookSequence() &lt;&gt; &quot;&quot; Then
			oListOfBookSequencies.addItem( BookSequenceDataString, oListOfBookSequencies.getItemCount() )
			.Model.SequenceTextField.Text		= &quot;&quot;
			.Model.SequenceNumberTextField.Text	= &quot;&quot;
		End If
	End With
End Sub

&apos;***************************************************************************
&apos; добавление Серии Книги в ListBox
Sub BookSequenceAdd()
	With oFB2PropertiesDlg
		&apos; проверка, задан ли хоть один из данных на Серию Электронной Книги
		If Not IsBookSequenceInput() Then
			MsgBox sFB2PED.sFB2PropEditorDlgFillBookSequence, 64, sConvertorName
			.getControl(&quot;SequenceTextField&quot;).setFocus()
			Exit Sub
		End If
		&apos; добавляем Серию Книги в ListBox
		_BookSequenceAdd()
		.getControl(&quot;SequenceTextField&quot;).setFocus()
	End With
End Sub

&apos;***************************************************************************
&apos; перемещение выбранной Серии Книги вверх
Sub BookSequenceUp()
	ListBoxItemUp( oFB2PropertiesDlg.getControl(&quot;lbSequencies&quot;) )
End Sub

&apos;***************************************************************************
&apos; перемещение выбранной Серии Книги вниз
Sub BookSequenceDown()
	ListBoxItemDown( oFB2PropertiesDlg.getControl(&quot;lbSequencies&quot;) )
End Sub

&apos;***************************************************************************
&apos; удаление выбранной Серии Книги
Sub BookSequenceRemove()
	ListBoxItemRemove( oFB2PropertiesDlg.getControl(&quot;lbSequencies&quot;) )
End Sub

&apos;***************************************************************************
&apos; генерация строки данных для Серии Книги
Function MakeBookSequenceDataString(Sequence As String, SequenceNumber As String) As String
	MakeBookSequenceDataString = Make2ColDataString(Sequence, SequenceNumber)
End Function

&apos;***************************************************************************
&apos; генерация строки данных для 2-х колонок
Function Make2ColDataString(Col1 As String, Col2 As String) As String
	Make2ColDataString = Trim( Col1 ) &amp; &quot; | &quot; &amp; Trim( Col2 )
End Function

&apos;***************************************************************************
&apos; проверка, задан ли хоть один из данных на Автора fb2-файла
Function IsFB2AuthorInput() As Boolean
	IsFB2AuthorInput = False
	With oFB2PropertiesDlg.Model
		If Trim(.diFirstField.Text) = &quot;&quot; AND Trim(.diMiddleField.Text) = &quot;&quot; AND Trim(.diLastField.Text) = &quot;&quot; AND _
			Trim(.diNicknameField.Text) = &quot;&quot; AND Trim(.diEmailField.Text) = &quot;&quot; AND Trim(.diHomepageField.Text) = &quot;&quot; Then
			Exit Function
		End If
	End With
	IsFB2AuthorInput = True
End Function

&apos;***************************************************************************
&apos; проверка вводимого Автора fb2-файла на наличие в Списке добавленных Авторов fb2-файла
&apos; если вводимых данных нет в Списке, возвращает Строку &quot;Имя | Отчество |&quot; и т.д. Иначе - &quot;&quot;
Function IsNewFB2Author() As String
	IsNewFB2Author = &quot;&quot;
	With oFB2PropertiesDlg
		Dim oListOfFB2Authors	As Object : oListOfFB2Authors = .getControl(&quot;lbFB2Author&quot;)
		Dim FB2AuthorDataString	As String
		FB2AuthorDataString = Trim( MakeAuthorDataString( .Model.diFirstField.Text, .Model.diMiddleField.Text, .Model.diLastField.Text, _
														.Model.diNicknameField.Text, .Model.diEmailField.Text, .Model.diHomepageField.Text ) )
		If IsExsistStringInArray(oListOfFB2Authors.Items, FB2AuthorDataString) = -1 Then
			IsNewFB2Author = FB2AuthorDataString
		End If
	End With
End Function

&apos;***************************************************************************
&apos; добавление Автора fb2-файла в ListBox
Sub _FB2AuthorAdd()
	With oFB2PropertiesDlg
		&apos; проверка вводимого Автора fb2-файла на наличие в Списке добавленных Авторов fb2-файла
		Dim oListOfFB2Authors	As Object : oListOfFB2Authors	= .getControl(&quot;lbFB2Author&quot;)
		Dim FB2AuthorDataString	As String : FB2AuthorDataString	= IsNewFB2Author()
		If FB2AuthorDataString &lt;&gt; &quot;&quot; Then
			oListOfFB2Authors.addItem(FB2AuthorDataString, oListOfFB2Authors.getItemCount())
			.Model.diFirstField.Text	= &quot;&quot;
			.Model.diMiddleField.Text	= &quot;&quot;
			.Model.diLastField.Text		= &quot;&quot;
			.Model.diNicknameField.Text	= &quot;&quot;
			.Model.diEmailField.Text	= &quot;&quot;
			.Model.diHomepageField.Text	= &quot;&quot;
		End If
		If bComplexID = True Then
			NewBookID( bComplexID )
		End If
	End With
End Sub
	
&apos;***************************************************************************
&apos; добавление Автора fb2-файла в ListBox
Sub FB2AuthorAdd()
	With oFB2PropertiesDlg
		&apos; проверка, задан ли хоть один из данных на Автора fb2-файла
		If NOT IsFB2AuthorInput() Then
			MsgBox sFB2PED.sFB2PropEditorDlgFillFB2Author, 64, sConvertorName
			.getControl(&quot;diFirstField&quot;).setFocus()
			Exit Sub
		End If
		&apos; добавляем Автора fb2-файла в ListBox
		_FB2AuthorAdd()
		.getControl(&quot;diFirstField&quot;).setFocus()
	End With
End Sub

&apos;***************************************************************************
&apos; перемещение выбранного Автора fb2-файла вверх
Sub FB2AuthorUp()
	ListBoxItemUp( oFB2PropertiesDlg.getControl(&quot;lbFB2Author&quot;) )
End Sub

&apos;***************************************************************************
&apos; перемещение выбранного Автора fb2-файла вниз
Sub FB2AuthorDown()
	ListBoxItemDown( oFB2PropertiesDlg.getControl(&quot;lbFB2Author&quot;) )
End Sub

&apos;***************************************************************************
&apos; удаление выбранного Автора fb2-файла
Sub FB2AuthorRemove()
	Dim oListOfFB2Authors As Object : oListOfFB2Authors = oFB2PropertiesDlg.getControl(&quot;lbFB2Author&quot;)
	ListBoxItemRemove( oListOfFB2Authors )
	If oListOfFB2Authors.getItemCount() = 0 Then
		If oListOfFB2Authors.getItemCount() &gt; 0 Then
			Redim sDocAuthors(oListOfFB2Authors.getItemCount(), 5)
		End If
	End If
	If bComplexID = True Then
		NewBookID( bComplexID )
	End If
End Sub

&apos;***************************************************************************
&apos; проверка, задан ли хоть один из данных на Серию Бумажной Книги
Function IsPublisherSequenseInput() As Boolean
	IsPublisherSequenseInput = False
	With oFB2PropertiesDlg.Model
		If Trim(.pubSequenseTextField.Text) = &quot;&quot; AND Trim(.pubSequenseNumberTextField.Text) = &quot;&quot; Then
			Exit Function
		End If
	End With
	IsPublisherSequenseInput = True
End Function

&apos;***************************************************************************
&apos; проверка вводимой Серии Бумажной Книги на наличие в Списке добавленных Серию Бумажной Книги
&apos; если вводимых данных нет в Списке, возвращает Строку &quot;Серия | Номер&quot;. Иначе - &quot;&quot;
Function IsNewPublisherSequence() As String
	IsNewPublisherSequence = &quot;&quot;
	With oFB2PropertiesDlg
		Dim oListOfPaperBookSequencies As Object : oListOfPaperBookSequencies = .getControl(&quot;lbPubSequensies&quot;)
		Dim PaperBookSequenceDataString As String
		PaperBookSequenceDataString = MakeBookSequenceDataString( Trim(.Model.pubSequenseTextField.Text), Trim(.Model.pubSequenseNumberTextField.Text) )
		If IsExsistStringInArray( oListOfPaperBookSequencies.Items, PaperBookSequenceDataString ) = -1 Then
			IsNewPublisherSequence = PaperBookSequenceDataString
		End If
	End With
End Function

&apos;***************************************************************************
&apos; добавление Серии Бумажной Книги
Sub _PublisherSequenceAdd()
	With oFB2PropertiesDlg
		&apos; проверка вводимой Серии Бумажной Книги на наличие в Списке добавленных Серию Бумажной Книги
		Dim oListOfPaperBookSequencies	As Object	: oListOfPaperBookSequencies = .getControl(&quot;lbPubSequensies&quot;)
		Dim PaperBookSequenceDataString	As String	: PaperBookSequenceDataString = IsNewPublisherSequence()
		If PaperBookSequenceDataString &lt;&gt; &quot;&quot; Then
			oListOfPaperBookSequencies.addItem(PaperBookSequenceDataString, oListOfPaperBookSequencies.getItemCount())
			.Model.pubSequenseTextField.Text		= &quot;&quot;
			.Model.pubSequenseNumberTextField.Text	= &quot;&quot;
		End If
	End With
End Sub
	
&apos;***************************************************************************
&apos; добавление Серии Бумажной Книги
Sub PublisherSequenceAdd()
	With oFB2PropertiesDlg
		&apos; проверка, задан ли хоть один из данных на Серию Бумажной Книги
		If NOT IsPublisherSequenseInput() Then
			MsgBox sFB2PED.sFB2PropEditorDlgFillPaperBookSequence, 64, sConvertorName
			.getControl(&quot;pubSequenseTextField&quot;).setFocus()
			Exit Sub
		End If
		&apos; добавляем Серию Бумажной Книги
		_PublisherSequenceAdd()
		.getControl(&quot;pubSequenseTextField&quot;).setFocus()
	End With
End Sub

&apos;***************************************************************************
&apos; перемещение выбранной Серии Бумажной Книги вверх
Sub PublisherSequenceUp()
	ListBoxItemUp( oFB2PropertiesDlg.getControl(&quot;lbPubSequensies&quot;) )
End Sub

&apos;***************************************************************************
&apos; перемещение выбранной Серии Бумажной Книги вниз
Sub PublisherSequenceDown()
	ListBoxItemDown( oFB2PropertiesDlg.getControl(&quot;lbPubSequensies&quot;) )
End Sub

&apos;***************************************************************************
&apos; удаление выбранной Серии Бумажной Книги
Sub PublisherSequenceRemove()
	ListBoxItemRemove( oFB2PropertiesDlg.getControl(&quot;lbPubSequensies&quot;) )
End Sub

&apos;***************************************************************************
&apos; проверка, задан ли хоть один из данных на Custom Info
Function IsCustomInfoInput() As Boolean
	IsCustomInfoInput = False
	With oFB2PropertiesDlg.Model
		If Trim(.cusTypeTextField.Text) = &quot;&quot; OR Trim(.cusValueTextField.Text) = &quot;&quot; Then
			Exit Function
		End If
	End With
	IsCustomInfoInput = True
End Function

&apos;***************************************************************************
&apos; проверка вводимой Custom Info на наличие в Списке добавленных Custom Info
&apos; если вводимых данных нет в Списке, возвращает Строку &quot;Type | Value&quot;. Иначе - &quot;&quot;
Function IsNewCustomInfo() As String
	IsNewCustomInfo = &quot;&quot;
	With oFB2PropertiesDlg
		Dim oListOfCustomInfos As Object : oListOfCustomInfos = .getControl(&quot;lbCustomInfos&quot;)
		Dim CustomInfoDataString As String
		CustomInfoDataString = Make2ColDataString( Trim(.Model.cusTypeTextField.Text), Trim(.Model.cusValueTextField.Text) )
		If IsExsistStringInArray(oListOfCustomInfos.Items, CustomInfoDataString) = -1 Then
			IsNewCustomInfo = CustomInfoDataString
		End If
	End With
End Function

&apos;***************************************************************************
&apos; добавление Custom Info
Sub _CustomInfoAdd()
	With oFB2PropertiesDlg
		&apos; проверка вводимой Custom Info на наличие в Списке добавленных Custom Info
		Dim oListOfCustomInfos		As Object : oListOfCustomInfos = .getControl(&quot;lbCustomInfos&quot;)
		Dim CustomInfoDataString	As String : CustomInfoDataString = IsNewCustomInfo()
		If CustomInfoDataString &lt;&gt; &quot;&quot; Then
			oListOfCustomInfos.addItem( CustomInfoDataString, oListOfCustomInfos.getItemCount() )
			.Model.cusTypeTextField.Text	= &quot;&quot;
			.Model.cusValueTextField.Text	= &quot;&quot;
		End If
	End With
End Sub	
	
&apos;***************************************************************************
&apos; добавление Custom Info
Sub CustomInfoAdd()
	With oFB2PropertiesDlg
		&apos; проверка, задан ли хоть один из данных на Custom Info
		If NOT IsCustomInfoInput() Then
			MsgBox sFB2PED.sFB2PropEditorDlgFillCustomInfo, 64, sConvertorName
			If Trim(.Model.cusTypeTextField.Text) = &quot;&quot; Then
				.getControl(&quot;cusTypeTextField&quot;).setFocus()
			Else
				.getControl(&quot;cusValueTextField&quot;).setFocus()
			End If
			Exit Sub
		End If
		&apos; добавляем Custom Info
		_CustomInfoAdd()
		.getControl(&quot;cusTypeTextField&quot;).setFocus()
	End With
End Sub

&apos;***************************************************************************
&apos; перемещение выбранной Custom Info вверх
Sub CustomInfoUp()
	ListBoxItemUp( oFB2PropertiesDlg.getControl(&quot;lbCustomInfos&quot;) )
End Sub

&apos;***************************************************************************
&apos; перемещение выбранной Custom Info вниз
Sub CustomInfoDown()
	ListBoxItemDown( oFB2PropertiesDlg.getControl(&quot;lbCustomInfos&quot;) )
End Sub

&apos;***************************************************************************
&apos; удаление выбранной Custom Info
Sub CustomInfoRemove()
	ListBoxItemRemove( oFB2PropertiesDlg.getControl(&quot;lbCustomInfos&quot;) )
End Sub

&apos; ===========================================================================================================================
&apos; 								сохранение fb2 данных в свойства документа
&apos; ===========================================================================================================================

&apos; сохранение fb2 данных в свойства документа
Sub SaveFB2PropertiesToDoc( ByRef oProgressBar, ByRef Iter As Integer )
	&apos; удаляем все fb2 свойства из документа
	RemoveAllUserPropertyFromTemplate()
	oProgressBar.setValue(Iter) : Iter = Iter + 1
	
	&apos; добавление данных в свойства документа
	With oFB2PropertiesDlg.Model
		&apos; = Title Info =
		If Trim(.BookTitleField.Text) &lt;&gt; &quot;&quot; Then
			SetUserProperty( _fb2_ti_BookTitle, Trim(.BookTitleField.Text) )
		End If
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		If Trim(.KeywordsField.Text) &lt;&gt; &quot;&quot; Then
			SetUserProperty( _fb2_ti_Keywords, Trim(.KeywordsField.Text) )
		End If
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		If Trim(.tiDateValueField.Text) &lt;&gt; &quot;&quot;  Then
			SetUserProperty( _fb2_ti_DateValue, Trim(.tiDateValueField.Text) )
		End If
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		If Trim(.tiDateTextField.Text) &lt;&gt; &quot;&quot; Then
			SetUserProperty( _fb2_ti_DateText, Trim(.tiDateTextField.Text) )
		End If
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		
		Dim oLB As Object
		oLB = oFB2PropertiesDlg.getControl(&quot;LangComboBox&quot;)
		SetUserProperty( _fb2_ti_Lang, oLB.SelectedItem )
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		oLB = oFB2PropertiesDlg.getControl(&quot;SrcLangComboBox&quot;)
		If oLB.SelectedItemPos &gt; 0 Then
			SetUserProperty( _fb2_ti_SrcLang, oLB.SelectedItem )
		End If
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		
		&apos; Массивы свойств
		Dim oListOfData As Object
		Dim i As Integer
		&apos; для Жанров Книги
		oListOfData = oFB2PropertiesDlg.getControl(&quot;lbGenre&quot;)
		If oListOfData.getItemCount() &gt; 0 Then
			For i = 0 To oListOfData.getItemCount()-1
				SetUserProperty( _fb2_ti_GenreCM &amp; i, oListOfData.getItem(i) )
			Next i
		End If
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		
		&apos; для Авторов Книги
		oListOfData = oFB2PropertiesDlg.getControl(&quot;lbBookAuthors&quot;)
		If oListOfData.getItemCount() &gt; 0 Then
			For i = 0 To oListOfData.getItemCount()-1
				SetUserProperty( _fb2_ti_BookAuthor &amp; i, oListOfData.getItem(i) )
			Next i
		End If
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		
		&apos; для Переводчиков Книги
		oListOfData = oFB2PropertiesDlg.getControl(&quot;lbTranslators&quot;)
		If oListOfData.getItemCount() &gt; 0 Then
			For i = 0 To oListOfData.getItemCount()-1
				SetUserProperty( _fb2_ti_Translator &amp; i, oListOfData.getItem(i) )
			Next i
		End If
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		
		&apos; для Серий Книги
		oListOfData = oFB2PropertiesDlg.getControl(&quot;lbSequencies&quot;)
		If oListOfData.getItemCount() &gt; 0 Then
			For i = 0 To oListOfData.getItemCount()-1
				SetUserProperty( _fb2_ti_Sequence &amp; i, oListOfData.getItem(i) )
			Next i
		End If
		oProgressBar.setValue(Iter) : Iter = Iter + 1

		&apos; = Document Info =
		&apos; Единичные свойства
		If Trim(.IDField.Text) &lt;&gt; &quot;&quot; Then
			SetUserProperty( _fb2_di_ID, Trim(.IDField.Text) )
		End If
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		If Trim(.VersionField.Text) &lt;&gt; &quot;&quot; Then
			SetUserProperty( _fb2_di_Version, Trim(.VersionField.Text) )
		End If
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		If Trim(.diURLField.Text) &lt;&gt; &quot;&quot; Then
			SetUserProperty( _fb2_di_SrcUrl, Trim(.diURLField.Text) )
		End If
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		If Trim(.diOCRField.Text) &lt;&gt; &quot;&quot; Then
			SetUserProperty( _fb2_di_OCR, Trim(.diOCRField.Text) )
		End If
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		If Trim(.HistoryTextField.Text) &lt;&gt; &quot;&quot; Then
			SetUserProperty( _fb2_di_History, Trim(.HistoryTextField.Text) )
		End If
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		&apos; Массивы свойств
		oListOfData = oFB2PropertiesDlg.getControl(&quot;lbFB2Author&quot;)
		If oListOfData.getItemCount() &gt; 0 Then
			For i = 0 To oListOfData.getItemCount()-1
				SetUserProperty( _fb2_di_FB2Author &amp; i, oListOfData.getItem(i) )
			Next i
		End If
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		
		&apos; = Publish Info =
		&apos; Единичные свойства
		If Trim(.pubBookNameTextField.Text) &lt;&gt; &quot;&quot; Then
			SetUserProperty( _fb2_pi_BookName, Trim(.pubBookNameTextField.Text) )
		End If
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		If Trim(.pubPublisherTextField.Text) &lt;&gt; &quot;&quot; Then
			SetUserProperty( _fb2_pi_Publisher, Trim(.pubPublisherTextField.Text) )
		End If
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		If Trim(.pubCityTextField.Text) &lt;&gt; &quot;&quot; Then
			SetUserProperty( _fb2_pi_City, Trim(.pubCityTextField.Text) )
		End If
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		If Trim(.pubYearTextField.Text) &lt;&gt; &quot;&quot; Then
			SetUserProperty( _fb2_pi_Year, Trim(.pubYearTextField.Text) )
		End If
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		If Trim(.pubISBNTextField.Text) &lt;&gt; &quot;&quot; Then
			SetUserProperty( _fb2_pi_ISBN, Trim(.pubISBNTextField.Text) )
		End If
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		
		&apos; Массивы свойств
		oListOfData = oFB2PropertiesDlg.getControl(&quot;lbPubSequensies&quot;)
		If oListOfData.getItemCount() &gt; 0 Then
			For i = 0 To oListOfData.getItemCount()-1
				SetUserProperty( _fb2_pi_Sequence &amp; i, oListOfData.getItem(i) )
			Next i
		End If
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		
		&apos; = Custom Info =
		&apos; Массивы свойств
		oListOfData = oFB2PropertiesDlg.getControl(&quot;lbCustomInfos&quot;)
		If oListOfData.getItemCount() &gt; 0 Then
			For i = 0 To oListOfData.getItemCount()-1
				SetUserProperty( _fb2_ci_CustomInfo &amp; i, oListOfData.getItem(i) )
			Next i
		End If
		oProgressBar.setValue(Iter) : Iter = Iter + 1

		&apos; = Разное =
		&apos; Единичные свойства
		oLB = oFB2PropertiesDlg.getControl(&quot;Codepage&quot;)
		SetUserProperty( _fb2_Encoding, oLB.SelectedItem )
		oProgressBar.setValue(Iter) : Iter = Iter + 1

		&apos; задаем признак изменения документа
		ThisComponent.setModified(True)
		oProgressBar.setValue(Iter) : Iter = Iter + 1
    End With

End Sub

&apos; ===========================================================================================================================
&apos; 								загрузка fb2 данных из свойств документа в контролы формы
&apos; ===========================================================================================================================

&apos; загрузка fb2 данных из свойств документа в контролы формы
Sub GetFB2PropertiesFromDoc( ByRef oProgressBar, ByRef Iter As Integer )
	With oFB2PropertiesDlg.Model
		&apos; = Title Info =
		Dim fb2Property As String : fb2Property = GetBookTitleFromProperty()
		If fb2Property &lt;&gt; &quot;&quot; Then
			.BookTitleField.Text = fb2Property
		End If
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		.KeywordsField.Text		= GetKeywordsFromProperty()
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		.tiDateValueField.Text	= GetBookDateFromProperty()
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		.tiDateTextField.Text	= GetBookDateTextFromProperty()
		oProgressBar.setValue(Iter) : Iter = Iter + 1		
		
		Dim oLB As Object
		fb2Property = GetLangFromProperty()
		If fb2Property &lt;&gt; &quot;&quot; Then
			oLB = oFB2PropertiesDlg.getControl(&quot;LangComboBox&quot;)
			oLB.selectItem( fb2Property, True )
		End If
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		oLB = oFB2PropertiesDlg.getControl(&quot;SrcLangComboBox&quot;)
		oLB.selectItem( GetSrcLangFromProperty(), True )
		oProgressBar.setValue(Iter) : Iter = Iter + 1

		GetGenresArray()
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		GetBookAuthorsArray()
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		GetBookTranslatorsArray()
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		GetBookSequenceArray()
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		
		&apos; = Document Info =
		fb2Property = GetIDFromProperty()
		If fb2Property &lt;&gt; &quot;&quot; Then
			.IDField.Text = fb2Property
		End If
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		fb2Property = GetVersionFromProperty()
		If fb2Property &lt;&gt; &quot;&quot; Then
			.VersionField.Text = fb2Property
		End If
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		fb2Property = GetSrcUrlFromProperty()
		If fb2Property &lt;&gt; &quot;&quot; Then
			.diURLField.Text = fb2Property
		End If
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		fb2Property = GetOCRFromProperty()
		If fb2Property &lt;&gt; &quot;&quot; Then
			.diOCRField.Text = fb2Property
		End If
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		fb2Property = GetHistoryFromProperty()
		If fb2Property &lt;&gt; &quot;&quot; Then
			.HistoryTextField.Text = fb2Property
		End If
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		
		GetFB2AuthorsArray()
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		
		&apos; = Publish Info =
		.pubBookNameTextField.Text	= GetPubBookNameFromProperty()
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		.pubPublisherTextField.Text	= GetPublisherFromProperty()
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		.pubCityTextField.Text		= GetCityFromProperty()
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		.pubYearTextField.Text		= GetYearFromProperty()
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		.pubISBNTextField.Text		= GetISBNFromProperty()
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		
		GetPublishSequenceArray()
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		
		&apos; = Custom Info =
		GetCustomInfosArray()
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		&apos; = Разное =
		oLB = oFB2PropertiesDlg.getControl(&quot;Codepage&quot;)
		oLB.selectItem( GetEncodingFromProperty(), True )
		oProgressBar.setValue(Iter) : Iter = Iter + 1
	End With
End Sub

&apos; ===========================================================================================================================
&apos;									взаимодействие с диалогом Избранных Жанров
&apos; ===========================================================================================================================

Sub GenreElite_Focus()
	Dim aArray() As String
	ReadFileInArray( aArray(), getOOoFBToolsSettingsDir() &amp; sConstMyGenre )
	oFB2PropertiesDlg.Model.lbGenreElite.StringItemList = aArray()
End Sub

&apos;***************************************************************************
&apos; вставка Избранного Жанра в основной бокс Жанров
Sub InsertGEToGenreBox( oEvent )
	&apos; убираем chr(10) из названия жанра - строки листбокса
	Dim sCR As String : sCR = oEvent.source.getSelectedItem
	If InStr(sCR, chr(10)) &gt; 0 Then
		sCR = ReplaceInString( sCR, chr(10), &quot;&quot;, False )
	End If
	oFB2PropertiesDlg.getControl(&quot;GenreComboBox&quot;).selectItem( sCR, True )
End Sub

&apos; ===========================================================================================================================
&apos;										генерация ID
&apos; ===========================================================================================================================

&apos; генерация нового ID
Sub NewBookID()
	oFB2PropertiesDlg.Model.IDField.Text = GetNewBookID( bComplexID )
End Sub

&apos;***************************************************************************
&apos; формирование ID-книги в зависимости от Автора Книги и fb2-Автора
Function GetNewBookID( ComplexID As Boolean ) As String
	Dim sNow As String : sNow = Now
	GetNewBookID = &quot;OOoFBTools-&quot; &amp; _
				Year(sNow) &amp; &quot;-&quot; &amp; Month(sNow) &amp; &quot;-&quot; &amp; Day(sNow) &amp; &quot;-&quot; &amp; Hour(sNow) &amp; &quot;-&quot; &amp; Minute(sNow) &amp; &quot;-&quot; &amp; Second(sNow)
	If ComplexID Then
		&apos; формирование ID-книги в зависимости от Автора Книги и fb2-Автора
		Dim oListOfAuthors As Object
		With oFB2PropertiesDlg.Model
			oListOfAuthors = oFB2PropertiesDlg.getControl(&quot;lbBookAuthors&quot;)
			GetNewBookID = GetNewBookID &amp; GetNewBookIDBookAuthors( oListOfAuthors )
			oListOfAuthors = oFB2PropertiesDlg.getControl(&quot;lbFB2Author&quot;)
			GetNewBookID = GetNewBookID &amp; GetNewBookIDBookAuthors( oListOfAuthors )
		End With
	End If
	GetNewBookID = GetNewBookID &amp; &quot;-&quot; &amp; Int((1500 * Rnd) - 2/(12 * Rnd))
End Function

&apos;***************************************************************************
&apos; формирование ID-книги в зависимости от fb2-Автора
Function GetNewBookIDBookAuthors( ByRef ListBox As stardiv.Toolkit.UnoListBoxControl ) As String
	Dim i As Integer, ID As String
	If ListBox.getItemCount() &gt; 0 Then
		&apos; раскадываем строку из ListBox на данные Автора Книги (fb2 файла)
		Dim aAuthorData() As String
		For i=0 To ListBox.getItemCount()-1
			aAuthorData() = SplitStringToArray(ListBox.getItem(i))
			If UBound( aAuthorData() ) &lt;&gt; -1 Then
				If Trim( aAuthorData(3) ) &lt;&gt; &quot;&quot; Then
					ID = ID &amp; &quot;-&quot; &amp; i+1 &amp; &quot;-&quot;
					If getOOoLocal() = &quot;ru&quot; Then
						ID = ID &amp; StrictString( RusTransliterationString( saTranslitLetters(), Trim( aAuthorData(3) ) ) )
					Else
						ID = ID &amp; StrictString( Trim( aAuthorData(3) ) )
					End if
				Else
					If Trim( aAuthorData(2) ) &lt;&gt; &quot;&quot; Or Trim( aAuthorData(0) ) &lt;&gt; &quot;&quot; Then
						ID = ID &amp; &quot;-&quot; &amp; i+1
					End If
					If getOOoLocal() = &quot;ru&quot; Then
						If aAuthorData(2) &lt;&gt; &quot;&quot; Then ID = ID &amp; &quot;-&quot; &amp; StrictString( RusTransliterationString( saTranslitLetters(), Trim( aAuthorData(2) ) ) )
						If aAuthorData(0) &lt;&gt; &quot;&quot; Then ID = ID &amp; &quot;-&quot; &amp; StrictString( RusTransliterationString( saTranslitLetters(), Trim( aAuthorData(0) ) ) )
&apos;						If aAuthorData(1) &lt;&gt; &quot;&quot; Then ID = ID &amp; &quot;-&quot; &amp; StrictString( RusTransliterationString( saTranslitLetters(), Trim( aAuthorData(1) ) ) )
					Else
						If aAuthorData(2) &lt;&gt; &quot;&quot; Then ID = ID &amp; &quot;-&quot; &amp; StrictString( Trim( aAuthorData(2) ) )
						If aAuthorData(0) &lt;&gt; &quot;&quot; Then ID = ID &amp; &quot;-&quot; &amp; StrictString( Trim( aAuthorData(0) ) )
&apos;						If aAuthorData(1) &lt;&gt; &quot;&quot; Then ID = ID &amp; &quot;-&quot; &amp; StrictString( Trim( aAuthorData(1) ) )
					End If
				End If
			End If
		Next i
	End If
	GetNewBookIDBookAuthors = ID
End Function

&apos; ===========================================================================================================================
&apos; 												Разное
&apos; ===========================================================================================================================

Sub MakeTranslitLettersList( saTranslitLetters() )
	saTranslitLetters(0)=&quot;a&quot; &apos;	// а
	saTranslitLetters(1)=&quot;b&quot; &apos;	// б
	saTranslitLetters(2)=&quot;v&quot; &apos;	// в
	saTranslitLetters(3)=&quot;g&quot; &apos;	// г
	saTranslitLetters(4)=&quot;d&quot; &apos;	// д
	saTranslitLetters(5)=&quot;e&quot; &apos;	// е
	saTranslitLetters(6)=&quot;yo&quot; &apos;	// ё
	saTranslitLetters(7)=&quot;zh&quot; &apos;	// ж
	saTranslitLetters(8)=&quot;z&quot; &apos;	// з
	saTranslitLetters(9)=&quot;i&quot; &apos;	// и
	saTranslitLetters(10)=&quot;y&quot; &apos;	// й
	saTranslitLetters(11)=&quot;k&quot; &apos;	// к
	saTranslitLetters(12)=&quot;l&quot; &apos;	// л
	saTranslitLetters(13)=&quot;m&quot; &apos;	// м
	saTranslitLetters(14)=&quot;n&quot; &apos;	// н
	saTranslitLetters(15)=&quot;o&quot; &apos;	// о
	saTranslitLetters(16)=&quot;p&quot; &apos;	// п
	saTranslitLetters(17)=&quot;r&quot; &apos;	// р
	saTranslitLetters(18)=&quot;s&quot; &apos;	// с
	saTranslitLetters(19)=&quot;t&quot; &apos;	// т
	saTranslitLetters(20)=&quot;u&quot; &apos;	// у
	saTranslitLetters(21)=&quot;f&quot; &apos;	// ф
	saTranslitLetters(22)=&quot;h&quot; &apos;	// х
	saTranslitLetters(23)=&quot;ts&quot; &apos;// ц
	saTranslitLetters(24)=&quot;ch&quot; &apos;// ч
	saTranslitLetters(25)=&quot;sh&quot; &apos;// ш
	saTranslitLetters(26)=&quot;sch&quot; &apos;// щ
	saTranslitLetters(27)=&quot;&apos;&quot; &apos;	// ъ
	saTranslitLetters(28)=&quot;y&quot; &apos;	// ы
	saTranslitLetters(29)=&quot;&apos;&quot; &apos;	// ь
	saTranslitLetters(30)=&quot;e&quot; &apos;	// э
	saTranslitLetters(31)=&quot;yu&quot; &apos;// ю
	saTranslitLetters(32)=&quot;ya&quot; &apos;// я
	saTranslitLetters(33)=&quot;A&quot; &apos;	// А
	saTranslitLetters(34)=&quot;B&quot; &apos;	// Б
	saTranslitLetters(35)=&quot;V&quot; &apos;	// В
	saTranslitLetters(36)=&quot;G&quot; &apos;	// Г
	saTranslitLetters(37)=&quot;D&quot; &apos;	// Д
	saTranslitLetters(38)=&quot;E&quot; &apos;	// Е
	saTranslitLetters(39)=&quot;YO&quot; &apos;// Ё
	saTranslitLetters(40)=&quot;ZH&quot; &apos;// Ж
	saTranslitLetters(41)=&quot;Z&quot; &apos;	// З
	saTranslitLetters(42)=&quot;I&quot; &apos;	// И
	saTranslitLetters(43)=&quot;Y&quot; &apos;	// Й
	saTranslitLetters(44)=&quot;K&quot; &apos;	// К
	saTranslitLetters(45)=&quot;L&quot; &apos;	// Л
	saTranslitLetters(46)=&quot;M&quot; &apos;	// М
	saTranslitLetters(47)=&quot;N&quot; &apos;	// Н
	saTranslitLetters(48)=&quot;O&quot; &apos;	// О
	saTranslitLetters(49)=&quot;P&quot; &apos;	// П
	saTranslitLetters(50)=&quot;R&quot; &apos;	// Р
	saTranslitLetters(51)=&quot;S&quot; &apos;	// С
	saTranslitLetters(52)=&quot;T&quot; &apos;	// Т
	saTranslitLetters(53)=&quot;U&quot; &apos;	// У
	saTranslitLetters(54)=&quot;F&quot; &apos;	// Ф
	saTranslitLetters(55)=&quot;H&quot; &apos;	// Х
	saTranslitLetters(56)=&quot;TS&quot; &apos;// Ц
	saTranslitLetters(57)=&quot;CH&quot; &apos;// Ч
	saTranslitLetters(58)=&quot;SH&quot; &apos;// Ш
	saTranslitLetters(59)=&quot;SCH&quot; &apos;// Щ
	saTranslitLetters(60)=&quot;&apos;&quot; &apos;	// Ъ
	saTranslitLetters(61)=&quot;Y&quot; &apos;	// Ы
	saTranslitLetters(62)=&quot;&apos;&quot; &apos;	// Ь
	saTranslitLetters(63)=&quot;E&quot; &apos;	// Э
	saTranslitLetters(64)=&quot;YU&quot; &apos;// Ю
	saTranslitLetters(65)=&quot;YA&quot; &apos;// Я
End Sub

Sub MakeLangList( aLangList() )
	aLangList() = Array(&quot;Abkhazian (ab)&quot;,&quot;Afar (aa)&quot;,&quot;Afrikaans (af)&quot;,&quot;Albanian (sq)&quot;,&quot;Amharic (am)&quot;,&quot;Arabic (ar)&quot;,&quot;Armenian (hy)&quot;,&quot;Assamese (as)&quot;,&quot;Aymara (ay)&quot;,&quot;Azerbaijani (az)&quot;, _
						&quot;Bashkir (ba)&quot;,&quot;Basque (eu)&quot;,&quot;Bengali (bn)&quot;,&quot;Bhutani (dz)&quot;,&quot;Bihari (bh)&quot;,&quot;Bislama (bi)&quot;,&quot;Breton (br)&quot;,&quot;Bulgarian (bg)&quot;,&quot;Burmese (my)&quot;,&quot;Byelorussian (be)&quot;,_
						&quot;Cambodian (km)&quot;,&quot;Catalan (ca)&quot;,&quot;Chinese (zh)&quot;,&quot;Corsican (co)&quot;,&quot;Croatian (hr)&quot;,&quot;Czech (cs)&quot;,_
						&quot;Danish (da)&quot;,&quot;Dutch (nl)&quot;,_
						&quot;English (en)&quot;,&quot;Esperanto (eo)&quot;,&quot;Estonian (et)&quot;,_
						&quot;Faroese (fo)&quot;,&quot;Fiji (fj)&quot;,&quot;Finnish (fi)&quot;,&quot;French (fr)&quot;,&quot;Frisian (fy)&quot;,_
						&quot;Galician (gl)&quot;,&quot;Georgian (ka)&quot;,&quot;German (de)&quot;,&quot;Greek (el)&quot;,&quot;Greenlandic (kl)&quot;,&quot;Guarani (gn)&quot;,&quot;Gujarati (gu)&quot;,_
						&quot;Hausa (ha)&quot;,&quot;Hebrew (he)&quot;,&quot;Hindi (hi)&quot;,&quot;Hungarian (hu)&quot;,_
						&quot;Icelandic (is)&quot;,&quot;Indonesian (in)&quot;,&quot;Interlingua (ia)&quot;,&quot;Inuktitut (iu)&quot;,&quot;Inupiak (ik)&quot;,&quot;Irish (ga)&quot;,&quot;Italian (it)&quot;,_
						&quot;Japanese (ja)&quot;,&quot;Javanese (jw)&quot;,_
						&quot;Kannada (kn)&quot;,&quot;Kashmiri (ks)&quot;,&quot;Kazakh (kk)&quot;,&quot;Kirghiz (ky)&quot;,&quot;Kirundi (rn)&quot;,&quot;Kiyarwanda (rw)&quot;,&quot;Korean (ko)&quot;,&quot;Kurdish (ku)&quot;,_
						&quot;Laotian (lo)&quot;,&quot;Latin (la)&quot;,&quot;Latvian (lv)&quot;,&quot;Lingala (ln)&quot;,&quot;Lithuanian (lt)&quot;,_
						&quot;Macedonian (mk)&quot;,&quot;Malagasy (mg)&quot;,&quot;Malay (ms)&quot;,&quot;Malayalam (ml)&quot;,&quot;Maltese (mt)&quot;,&quot;Maori (mi)&quot;,&quot;Marathi (mr)&quot;,&quot;Moldavian (mo)&quot;,&quot;Mongolian (mn)&quot;,_
						&quot;Nauru (na)&quot;,&quot;Nauru (na)&quot;,&quot;Nepali (ne)&quot;,&quot;Norwegian (no)&quot;,_
						&quot;Occitan (oc)&quot;,&quot;Oriya (or)&quot;,&quot;Oromo (om)&quot;,_
						&quot;Pashto (ps)&quot;,&quot;Persian (fa)&quot;,&quot;Polish (pl)&quot;,&quot;Portuguese (pt)&quot;,&quot;Pundjabi (pa)&quot;,_
						&quot;Quechua (qu)&quot;,_
						&quot;Rhaeto-Romance (rm)&quot;,&quot;Romanian (ro)&quot;,&quot;Russian (ru)&quot;,_
						&quot;Samoan (sm)&quot;,&quot;Sangho (sg)&quot;,&quot;Sanskrit (sa)&quot;,&quot;Scots Gaelic (gd)&quot;,&quot;Serbian (sr)&quot;,&quot;Serbo-Croatian (sh)&quot;,&quot;Sesotho (st)&quot;,&quot;Setswana (tn)&quot;,&quot;Shona (sn)&quot;,&quot;Sindhi (sd)&quot;,&quot;Singhalese (si)&quot;,&quot;Siswati (ss)&quot;,&quot;Slovak (sk)&quot;,&quot;Slovenian (sl)&quot;,&quot;Somali (so)&quot;,&quot;Spanish (es)&quot;,&quot;Sudanese (su)&quot;,&quot;Swahili (sw)&quot;,&quot;Swedish (sv)&quot;,_
						&quot;Tagalog (tl)&quot;,&quot;Tajik (tg)&quot;,&quot;Tamil (ta)&quot;,&quot;Tatar (tt)&quot;,&quot;Telugu (te)&quot;,&quot;Thai (th)&quot;,&quot;Tibetan (bo)&quot;,&quot;Tigrinya (ti)&quot;,&quot;Tonga (to)&quot;,&quot;Tsonga (ts)&quot;,&quot;Turkish (tr)&quot;,&quot;Turkman (tk)&quot;,&quot;Twi (tw)&quot;,_
						&quot;Uigur (ug)&quot;,&quot;Ukrainian (uk)&quot;,&quot;Urdu (ur)&quot;,&quot;Uzbek (uz)&quot;,_
						&quot;Vietnamese (vi)&quot;,&quot;Volapuk (vo)&quot;,_
						&quot;Welsh (cy)&quot;,&quot;Wolof (wo)&quot;,_
						&quot;Xhosa (xh)&quot;,_
						&quot;Yiddish (yi)&quot;,&quot;Yorouba (yo)&quot;,_
						&quot;Zhuang (za)&quot;,&quot;Zulu (zu)&quot;)
End Sub

&apos;Sub MakeLangList( aLangList() )
&apos;	aLangList() = Array(&quot;ab&quot;,&quot;az&quot;,&quot;be&quot;,&quot;bg&quot;,&quot;cs&quot;,&quot;cy&quot;,&quot;da&quot;,&quot;de&quot;,&quot;el&quot;,&quot;en&quot;,&quot;eo&quot;,&quot;es&quot;,&quot;et&quot;,&quot;fa&quot;,&quot;fi&quot;,_
&apos;						&quot;fr&quot;,&quot;he&quot;,&quot;hr&quot;,&quot;hu&quot;,&quot;hy&quot;,&quot;it&quot;,&quot;ja&quot;,&quot;kk&quot;,&quot;ko&quot;,&quot;ky&quot;,&quot;la&quot;,&quot;lt&quot;,&quot;lv&quot;,&quot;mk&quot;,&quot;mn&quot;,_
&apos;						&quot;mo&quot;,&quot;nl&quot;,&quot;no&quot;,&quot;pl&quot;,&quot;pt&quot;,&quot;ru&quot;,&quot;sa&quot;,&quot;sk&quot;,&quot;sl&quot;,&quot;sq&quot;,&quot;sv&quot;,&quot;tg&quot;,&quot;tr&quot;,&quot;tt&quot;,&quot;uk&quot;,_
&apos;						&quot;uz&quot;,&quot;vi&quot;,&quot;zh&quot;)
&apos;End Sub

</script:module>