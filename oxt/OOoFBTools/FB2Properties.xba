<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="FB2Properties" script:language="StarBasic">REM  *****  BASIC  *****
&apos;====================================================================
&apos; 				модуль работы с диалогом fb2 свойств документа
&apos;====================================================================

Option Explicit

Public Const sConstFB2PropEditorSettings	As String = &quot;FB2PropertiesEditorSettings.txt&quot;	&apos; файл настроек диалога Редактора fb2 свойств
Public Const sConstMyGenre					As String = &quot;genre_favorites.txt&quot;				&apos; файл Избранных Жанров
Public Const sConstMyGenreSettings			As String = &quot;mygenre_settings.txt&quot;				&apos; файл настроек Избранных Жанров
Public Const sConstSettings					As String = &quot;settings.txt&quot;						&apos; файл настроек
Public Const sConstFB2AuthorProfile			As String = &quot;profile.txt&quot;						&apos; файл профиля Автора fb2 документа

Public oFB2PropertiesDlg	As Object
Public oGEDlg				As Object

Private bWorkStart			As Boolean &apos; флаг начала работы Редактора (True). Защита от повторного запуска диалога
Private bWorkEnd			As Boolean &apos; флаг конца работы Редактора - закрытия диалога (True)

Private sLangList() 			As String &apos; список языков

&apos; ===========================================================================================================================
&apos; 										запуск формы Редактора fb2 свойств
&apos; ===========================================================================================================================
Sub FB2PropertiesDlg_windowActivated(oEv)
End Sub

Sub FB2PropertiesDlg_windowDeactivated(oEv)
End Sub

Sub FB2PropertiesDlg_windowOpened(oEv)
	bWorkStart = True &apos; Защита от повторного запуска диалога
End Sub

Sub FB2PropertiesDlg_windowClosing(oEv)
	bWorkEnd	= True	&apos; флаг закрытия дмалога
	bWorkStart	= False	&apos; готовность к новому запуску диалога
End Sub

Sub FB2PropertiesDlg_windowClosed(oEv)
	&apos; удаляем файлы из временной папки OOoFBToolsTemp
	Dim guidPath As String, guidTxtPath As String
	If GetOS() = &quot;WIN&quot; Then
		guidTxtPath = getOOoFBToolsTempPath() &amp; &quot;\guid.txt&quot;
	Else
		guidPath = getOOoFBToolsTempPath() &amp; &quot;/guid.sh&quot;
		guidTxtPath = getOOoFBToolsTempPath() &amp; &quot;/guid.txt&quot;
	End If
	If FileExists( guidPath ) Then
		Kill guidPath
	End If
	If FileExists( guidTxtPath ) Then
		Kill guidTxtPath
	End If
End Sub

Sub FB2PropertiesDlg_windowMinimized(oEv)
End Sub

Sub FB2PropertiesDlg_windowNormalized(oEv)
End Sub

Sub FB2PropertiesDlg_disposing(oEv)
End Sub


&apos;***************************************************************************
&apos; запуск формы Редактора fb2 свойств
Sub FB2PropertiesEditorDlgExec()
	If bWorkStart Then Exit Sub &apos; Защита от повторного запуска диалога
	
	&apos; инициализация сообщений формы Редактора fb2 свойств в зависимости от локали
	InitFB2PropertiesDlgMessage()
	Dim oProgressBar As Object : oProgressBar = ThisComponent.CurrentController.StatusIndicator
	oProgressBar.start( sFB2PED.sFB2PropEditorDlgCreateDialog &amp; &quot;, &quot; &amp; sFB2PED.sFB2PropEditorDlgInit, 4 )
	oProgressBar.setValue(0)

	&apos; Создание формы
	GlobalScope.BasicLibraries.LoadLibrary( &quot;Tools&quot; )
	oFB2PropertiesDlg = LoadDialog( &quot;OOoFBTools&quot;, &quot;FB2PropertiesDlg&quot; )
	oProgressBar.setValue(1)

	&apos; инициализация формы Редактора fb2 свойств в зависимости от локали
	InitFB2PropertiesDlg()

	&apos; создание списков языков книги
	MakeLangList( sLangList() )
	oProgressBar.setValue(2)

	Dim aArray() As String
	With oFB2PropertiesDlg
		&apos; читаем избранные жанры из файла, если он есть
		ReadFileInArray( aArray(), getOOoFBToolsSettingsDir() &amp; sConstMyGenre )
		.getModel().lbGenreElite.StringItemList = aArray()
		&apos; список готовых Custom Info типов
		.getModel().cusTypeListBox.StringItemList = Array( _
			&quot;Авторские права&quot;, &quot;Номер издания&quot;, &quot;Обложка&quot;, &quot;Фотографии&quot;, &quot;Дизайн цветных вклеек&quot;, &quot;Вёрстка&quot;, _
			&quot;Редактор&quot;, &quot;Корректор&quot;, &quot;Тираж&quot;, &quot;Ограничения&quot;, &quot;Автор оригинала&quot;, &quot;Название оригинала книги&quot;, &quot;Издатель оригинала&quot;, _
			&quot;copyright&quot;, &quot;edition&quot;, &quot;editor&quot;, &quot;original_author&quot;, &quot;original_booktitle&quot;, &quot;original_publisher&quot; )
		.getControl( &quot;cusTypeListBox&quot; ).SelectItemPos( 0, True )
	End With
	oProgressBar.setValue(3)
	
	&apos; задаем положение диалога из файла настроек
	LoadFB2PropEditorFormSettings()
	&apos; Есть ли хоть одно fb2 свойство в документе?
	Dim bFB2NotFlagPropertyIsExsist As Boolean : bFB2NotFlagPropertyIsExsist = IsFB2NotFlagPropertyIsExsist()
	
	&apos; заполняем списки Жанрами, взависимости от выбранной Схемы
	With oFB2PropertiesDlg.Model
		If .obtnFB21.State = True Or .obtnFB21.State = 1 Then
			InitFB21() &apos; Инициализация жанрами схемы FictionBook 2.1
		ElseIf .obtnFB2LibRusEc.State = True Or .obtnFB2LibRusEc.State = 1 Then
			InitFBLibRusEc() &apos; Инициализация жанрами схемы FictionBook 2 LibRusEc
		ElseIf .obtnFB2Flibusta.State = True Or .obtnFB2Flibusta.State = 1 Then
			InitFBFlibusta() &apos; Инициализация жанрами схемы FictionBook 2 Flibusta
		ElseIf  .obtnFB2Union.State = True Or .obtnFB2Union.State = 1 Then
			InitFBUnion() &apos; Инициализация жанрами объединенной схемы FictionBook 2 (LibRusEc &amp; Flibusta)
		Else
			InitFBCoolLibLitVek() &apos; Инициализация жанрами схемы FictionBook 2 (CoolLib и LitVek)
		End If
	End With
	oProgressBar.setValue(4)
	oProgressBar.End
	
	&apos; заполнение контролов формы
	Dim ProgressCount As Integer : ProgressCount = 3
	If bFB2NotFlagPropertyIsExsist Then ProgressCount = 43
	oProgressBar.start( sFB2PED.sFB2PropEditorDlgCreateDialog &amp; &quot;, &quot; &amp; sFB2PED.sFB2PropEditorDlgLoadFB2Properties, ProgressCount )
	oProgressBar.setValue(0)
	With oFB2PropertiesDlg
		.getControl( &quot;SrcLangComboBox&quot; ).AddItem( &quot;&quot;, 0 )
		.getControl( &quot;Codepage&quot; ).addItems( Array( &quot;utf-8&quot;, &quot;windows-1251&quot;), 0 )
		.getControl( &quot;Codepage&quot; ).SelectItemPos( 0, True )
	End With
	Dim Iter As Integer : Iter = 1
	oProgressBar.setValue(Iter) : Iter = Iter + 1
	Dim sNow As String : sNow = Now
	With oFB2PropertiesDlg.Model
		.LangComboBox.StringItemList	= sLangList()
		.SrcLangComboBox.StringItemList	= sLangList()
		.ProgrammUsedField.Text	= &quot;OOoFBTools-&quot; &amp; getMyVersion( &quot;DikBSD.OOoFBTools&quot; ) &amp; &quot; &quot; &amp; &quot;(ExportToFB21)&quot;
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		.NumericFieldMatch.Value = &quot;100&quot;
		If bFB2NotFlagPropertyIsExsist Then
			&apos; загрузка из свойств документа fb2 свойств в контролы формы
			GetFB2PropertiesFromDoc( oProgressBar, Iter )
		End If
	End With
	oProgressBar.setValue(Iter)
	
	&apos; Задаем настройки в контролы по умолчанию
	SetDefaultSettingsToVars()
	&apos; теперь считываем настройки из файла в переменные
	LoadSettingsToVars()
	
	If Not bFB2NotFlagPropertyIsExsist Then
		&apos; Читаем стили и задаем значения переменным (для BookTitle)
		SetFB2LocalStylesToVars()
		With oFB2PropertiesDlg.Model
			.BookTitleField.Text	= GetTextOfStyle( sStyleBookTitle, True )
			.VersionField.Text		= &quot;1.0&quot;
			&apos; язык книги по-умолчанию - локаль Ooo
			SetBookLangOOoDefaultLocal( oFB2PropertiesDlg, &quot;LangComboBox&quot; )
		End With
		&apos; генерируем ID Книги
		NewBookID()
		&apos; Читаем установки и задаем значения контролам профиля автора документа fb2
		_ReadProfile( getOOoFBToolsSettingsDir() &amp; sConstFB2AuthorProfile, 1 )
		If IsFB2AuthorInput() Then
			&apos; добавляем Автора fb2-файла в ListBox
			_FB2AuthorAdd()
		End If
		oProgressBar.setValue(Iter) : Iter = Iter + 1
	End If
	
	If GetOS() = &quot;UNIX&quot; Then
		&apos; утилиты для Unix-систем
		If _xmlPath = &quot;&quot; Then
			_xmlPath = UnixXmllintPath()
		End If
	End If
	
	oProgressBar.End
	
	bWorkEnd = False
	
	Dim oList : oList = createUnoListener( &quot;FB2PropertiesDlg_&quot;,&quot;com.sun.star.awt.XTopWindowListener&quot; )
	With oFB2PropertiesDlg
		.addTopWindowListener( oList )
		.setVisible( True )
	End With
	While Not bWorkEnd
		Wait 200     
	Wend
	
	oFB2PropertiesDlg.setVisible( False )
End Sub

Sub CloseDlg()
	bWorkEnd	= True	&apos; флаг закрытия дмалога
	bWorkStart	= False	&apos; готовность к новому запуску диалога
	&apos; сохраняем некоторые настройки формы
	SaveFB2PropEditorDlgSettings()
	oFB2PropertiesDlg.endExecute()
End Sub

&apos;***************************************************************************
&apos; Инициализация жанрами схемы FictionBook 2.1
Sub InitFB21()
	GenreFB21()

	With oFB2PropertiesDlg.Model
		.Title = sFB2PED.sFB2PropEditorDlgTitle &amp; &quot; - &quot; &amp; sGD.sSchemeFB21
		.GenreComboBox.StringItemList = sGLN()
	End With
End Sub

&apos;***************************************************************************
&apos; Инициализация жанрами схемы FictionBook 2 LibRusEc
Sub InitFBLibRusEc()
	GenreFB2LibRusEc()

	With oFB2PropertiesDlg.Model
		.Title = sFB2PED.sFB2PropEditorDlgTitle &amp; &quot; - &quot; &amp; sGD.sSchemeFB2LibRusEc
		.GenreComboBox.StringItemList = sGLN()
	End With
End Sub

&apos;***************************************************************************
&apos; Инициализация жанрами схемы FictionBook 2 Flibusta
Sub InitFBFlibusta()
	GenreFB2Flibusta()

	With oFB2PropertiesDlg.Model
		.Title = sFB2PED.sFB2PropEditorDlgTitle &amp; &quot; - &quot; &amp; sGD.sSchemeFB2Flibusta
		.GenreComboBox.StringItemList = sGLN()
	End With
End Sub

&apos;***************************************************************************
&apos; Инициализация жанрами Объединенной схемы FictionBook 2 (LibRusEc &amp; Flibusta)
Sub InitFBUnion()
	GenreFB2Union()

	With oFB2PropertiesDlg.Model
		.Title = sFB2PED.sFB2PropEditorDlgTitle &amp; &quot; - &quot; &amp; sGD.sSchemeFB2Union
		.GenreComboBox.StringItemList = sGLN()
	End With
End Sub


&apos;***************************************************************************
&apos; Инициализация жанрами схемы FictionBook 2 (CoolLib &amp; LitVek)
Sub InitFBCoolLibLitVek()
	GenreFB2CoolLibLitVek()

	With oFB2PropertiesDlg.Model
		.Title = sFB2PED.sFB2PropEditorDlgTitle &amp; &quot; - &quot; &amp; sGD.sSchemeFB2CoolLibLitVek
		.GenreComboBox.StringItemList = sGLN()
	End With
End Sub

&apos;***************************************************************************
&apos; Читаем настройки и задаем значения контролам основной формы
Function LoadFB2PropEditorFormSettings() As Boolean
	On Error Resume Next
	Dim sFileName As String : sFileName = getOOoFBToolsSettingsDir() &amp; sConstFB2PropEditorSettings
	Dim nX As Integer, nY As Integer
	If FileExists( sFileName ) Then
		Dim sLine As String
		Dim oSFA As Object, oFS As Object, oTIS As Object
		
		oSFA = createUnoService ( &quot;com.sun.star.ucb.SimpleFileAccess&quot; )
		oFS = oSFA.openFileRead ( ConvertToURL ( sFileName ) )
		oTIS = createUnoService ( &quot;com.sun.star.io.TextInputStream&quot; )
		oTIS.setInputStream (oFS)
		Do While ( NOT oTIS.isEOF() )
			sLine = oTIS.readLine()
			If sLine &lt;&gt; &quot;&quot; Then
				&apos; Устанавливаем данные
				Dim sSetting() As String : sSetting = Split(sLine, &quot;=&quot;)
				If sSetting(0) = &quot;obtnFB21&quot; Or sSetting(0) = &quot;obtnFB2LibRusEc&quot; Or sSetting(0) = &quot;obtnFB2Flibusta&quot; Or sSetting(0) = &quot;obtnFB2Union&quot; Or sSetting(0) = &quot;obtnFB2CoolLibLitVek&quot; Then
					oFB2PropertiesDlg.getControl( sSetting(0) ).setState( sSetting(1) )
				ElseIf sSetting(0) = &quot;X&quot; Then
					nX = sSetting(1)
				ElseIf sSetting(0) = &quot;Y&quot; Then
					nY = sSetting(1)
				ElseIf sSetting(0) = &quot;Codepage&quot; Then
					Dim oLB As Object : oLB = oFB2PropertiesDlg.getControl( sSetting(0) )
					oLB.SelectItemPos( sSetting(1), True )
				End If
			End If
		Loop
		oTIS.closeInput()
		oFB2PropertiesDlg.setPosSize( nX, nY, 359, 408, com.sun.star.awt.PosSize.POS )
		LoadFB2PropEditorFormSettings = True
	Else
		LoadFB2PropEditorFormSettings = False
	End If
End Function

&apos;***************************************************************************
&apos; записываем настройки Редактора fb2 свойств
Sub SaveFB2PropEditorDlgSettings()
	Dim oOS As Object, oFA As Object, oTOS As Object
	oFA = CreateUnoService(&quot;com.sun.star.ucb.SimpleFileAccess&quot;)
	oTOS = CreateUnoService(&quot;com.sun.star.io.TextOutputStream&quot;)
	
	oOS = oFA.openFileWrite( getOOoFBToolsSettingsDir() &amp; sConstFB2PropEditorSettings )
	oOS.truncate()
	oTOS.setOutputStream( oOS )
	oTOS.setEncoding( &quot;utf-8&quot; )

	Dim ctrl As Object, i As Integer
	ctrl = oFB2PropertiesDlg.getControls()
	For i=LBound(ctrl) To UBound(ctrl)
		If ctrl(i).getImplementationName() = &quot;stardiv.Toolkit.UnoRadioButtonControl&quot; Then
			If ctrl(i).Model.Name = &quot;obtnFB21&quot; Or ctrl(i).Model.Name = &quot;obtnFB2LibRusEc&quot; Or ctrl(i).Model.Name = &quot;obtnFB2Flibusta&quot; Or ctrl(i).Model.Name = &quot;obtnFB2Union&quot; Or ctrl(i).Model.Name = &quot;obtnFB2CoolLibLitVek&quot; Then
				oTOS.writeString(ctrl(i).Model.Name &amp; &quot;=&quot; &amp; ctrl(i).Model.State &amp; chr(10))
			End If
		ElseIf ctrl(i).getImplementationName() = &quot;stardiv.Toolkit.UnoListBoxControl&quot; Then
			If ctrl(i).Model.Name = &quot;Codepage&quot; Then
				oTOS.writeString(ctrl(i).Model.Name &amp; &quot;=&quot; &amp; ctrl(i).SelectedItemPos &amp; chr(10))
			End If
		End If
	Next i
	oTOS.writeString(&quot;X=&quot; &amp; oFB2PropertiesDlg.PosSize.X &amp; chr(10))
	oTOS.writeString(&quot;Y=&quot; &amp; oFB2PropertiesDlg.PosSize.Y &amp; chr(10))
	oTOS.writeString(&quot;end of file&quot; &amp; chr(10))
	oTOS.closeOutput()
End Sub

&apos; ===========================================================================================================================
&apos; 										работа вспомогательных контролов
&apos; ===========================================================================================================================

&apos; сохранение fb2 данных в свойства документа
Sub SavePropertiesToDoc()
	&apos;проверка, все ли данные введены на форме
	If Not IsAllNeedDataExsist() Then
		Exit Sub
	End If
	
	&apos; проверка, верно ли введены данные Даты написания книги (value), если они есть
	With oFB2PropertiesDlg
		.getControl(&quot;tiDateTextField&quot;).Text = Trim( .getControl(&quot;tiDateTextField&quot;).Text )
		.getControl(&quot;tiDateValueField&quot;).Text = Trim( .getControl(&quot;tiDateValueField&quot;).Text )
		If Len( .getControl(&quot;tiDateValueField&quot;).Text ) &gt; 0 Then
			If Not IsBookDateValueCorrect( .getControl(&quot;tiDateValueField&quot;).Text ) Then
				MsgBox sFB2PED.sFB2PropEditorDlgDateValue, 64, sConvertorName
				.getControl(&quot;tiDateValueField&quot;).setFocus()
				Exit Sub
			End If
		End If	
	End With
	
	oFB2PropertiesDlg.setEnable(False)
	Dim oProgressBar As Object : oProgressBar = ThisComponent.CurrentController.StatusIndicator
	oProgressBar.start( sFB2PED.sFB2PropEditorDlgSaveFB2Properties, 27 )
	oProgressBar.setValue(0)
	Dim Iter As Integer : Iter = 1
	&apos; все данные в списках и/или полях - корректные.
	&apos; Теперь, если есть данные в полях, отличные от тех, что в Списках - добавляем их в Списки
	If NOT IsGenreExsistInArray()	Then _BookGenreAdd()
	If IsBookAuthorInput()			Then _BookAuthorAdd()
	If IsBookTranslatorInput()		Then _BookTranslatorAdd()
	If IsBookSequenceInput()		Then _BookSequenceAdd()
	If IsFB2AuthorInput()			Then _FB2AuthorAdd()
	If IsPublisherSequenseInput()	Then _PublisherSequenceAdd()
	If IsCustomInfoInput()			Then _CustomInfoAdd()
	If IsUDCCustomInfoInput()		Then _UDCCustomInfoAdd()
	If IsBBCCustomInfoInput()		Then _BBCCustomInfoAdd()
	If IsAuthorSignCustomInfoInput() Then _AuthorSignCustomInfoAdd()
	oProgressBar.setValue(0) : Iter = Iter + 1
	&apos; сохраняем fb2 данные в свойства документа
	SaveFB2PropertiesToDoc( oProgressBar, Iter )
	&apos; закрываем диалог
	oFB2PropertiesDlg.setEnable(True)
	CloseDlg()
	oProgressBar.end
End Sub

&apos;***************************************************************************
&apos;проверка, все ли данные заполнены
Function IsAllNeedDataExsist() As Boolean
	IsAllNeedDataExsist = False

	With oFB2PropertiesDlg
		&apos; проверка, задан ли хоть один Жанр Книги
		If .getControl(&quot;lbGenre&quot;).getItemCount() = 0 Then
			If ( Not IsBookGenreInput() ) OR IsBookGroupeGenreSelect() Then
				MsgBox sFB2PED.sFB2PropEditorDlgSelectGenre, 64, sConvertorName
				.Model.Step = 1
				.getControl(&quot;optbtnTitleInfo&quot;).setState(True)
				.getControl(&quot;GenreComboBox&quot;).setFocus()
				Exit Function
			End If
		End If

		&apos; проверка, задано ли Название Книги
		If Trim(.Model.BookTitleField.Text) = &quot;&quot; Then
			MsgBox sFB2PED.sFB2PropEditorDlgFillBookTitle, 64, sConvertorName
			.Model.Step = 1
			.getControl(&quot;optbtnTitleInfo&quot;).setState(True)
			.getControl(&quot;BookTitleField&quot;).setFocus()
			Exit Function
		End If
		&apos; проверка, задана ли Версия fb2-файла
		If Trim(.Model.VersionField.Text) = &quot;&quot; Then
			MsgBox sFB2PED.sFB2PropEditorDlgFillVersion, 64, sConvertorName
			.Model.Step = 2
			.getControl(&quot;optbtnDocumentInfo&quot;).setState(True)
			.getControl(&quot;VersionField&quot;).setFocus()
			Exit Function
		End If
		&apos; проверка, задан ли ID fb2-файла
		If Trim(.Model.IDField.Text) = &quot;&quot; Then
			MsgBox sFB2PED.sFB2PropEditorDlgFillID, 64, sConvertorName
			.Model.Step = 2
			.getControl(&quot;optbtnDocumentInfo&quot;).setState(True)
			.getControl(&quot;IDField&quot;).setFocus()
			Exit Function
		End If
	End With
	
	IsAllNeedDataExsist = True
End Function

&apos;***************************************************************************
&apos; проверка, верно ли введены данные Даты написания книги (value), если они есть
Function IsBookDateValueCorrect( BookDateValue As String ) As Boolean
	IsBookDateValueCorrect = False

	Dim aArray : aArray = Split(BookDateValue, &quot;-&quot;)
	If UBound( aArray ) &lt;&gt; 2 Then
		Exit Function
	End If
	&apos; aArray(0) - год; aArray(1) - месяц; aArray(2) - день
	If Len( aArray(0) ) &lt;&gt; 4 Or Len( aArray(1) ) &lt;&gt; 2 Or Len(aArray(2) ) &lt;&gt; 2 Then
		Exit Function
	End If
	
On Local Error GoTo Errorhandler
	&apos; еслим дата введена корректно (YYYY-MM-DD), и граница Дня не превышает соответствующему ему Месяцу, то ошибки не будет, и ф-я вернет True. В противном случае вернется False
	Dim sDateSerial As String : sDateSerial = DateSerial( aArray(0), aArray(1), aArray(2) )
	IsBookDateValueCorrect = True
	Exit Function
	
Errorhandler:
	IsBookDateValueCorrect = False
End Function

&apos;***************************************************************************
&apos; перключение &quot;вкладок&quot; групп fb2 свойств
Sub ChangeDesc(o)
	If o.Source.Model.Name = &quot;optbtnTitleInfo&quot; Then
		oFB2PropertiesDlg.Model.Step = 1
	ElseIf o.Source.Model.Name = &quot;optbtnDocumentInfo&quot; Then
		oFB2PropertiesDlg.Model.Step = 2
	ElseIf o.Source.Model.Name = &quot;optbtnPublishInfo&quot; Then
		oFB2PropertiesDlg.Model.Step = 3
	ElseIf o.Source.Model.Name = &quot;optbtnCustomInfo&quot; Then
		oFB2PropertiesDlg.Model.Step = 4
	End If
End Sub

&apos;***************************************************************************
&apos; перемещение выбранного ListBoxItem вверх
Sub ListBoxItemUp( ByRef ListBox As stardiv.Toolkit.UnoListBoxControl )
	If ListBox.SelectedItemPos = -1 Then
		Exit Sub
	End If
	If ListBox.SelectedItemPos &gt; 0 Then
		Dim ItemPos As Integer : ItemPos = ListBox.SelectedItemPos
		Dim sArray() As String : sArray() = ListBox.Items
		swap( sArray(), ListBox.SelectedItemPos-1, ListBox.SelectedItemPos )
		ListBox.removeItems(0, ListBox.getItemCount())
		ListBox.addItems(sArray(), 0)
		ListBox.selectItemPos(ItemPos-1, True)
	End If
	ListBox.setFocus()
End Sub

&apos;***************************************************************************
&apos; перемещение выбранного ListBoxItem вниз
Sub ListBoxItemDown( ByRef ListBox As stardiv.Toolkit.UnoListBoxControl )
	If ListBox.SelectedItemPos = -1 Then
		Exit Sub
	End If
	Dim sArray() As String : sArray() = ListBox.Items
	If ListBox.SelectedItemPos &lt; UBound(sArray()) Then
		Dim ItemPos As Integer : ItemPos = ListBox.SelectedItemPos
		swap( sArray(), ListBox.SelectedItemPos, ListBox.SelectedItemPos+1 )
		ListBox.removeItems(0, ListBox.getItemCount())
		ListBox.addItems(sArray(), 0)
		ListBox.selectItemPos(ItemPos+1, True)
	End If
	ListBox.setFocus()
End Sub

&apos;***************************************************************************
&apos; удаление выбранного ListBoxItem
Sub ListBoxItemRemove( ByRef ListBox As stardiv.Toolkit.UnoListBoxControl )
	If ListBox.SelectedItemPos = -1 Then Exit Sub
    If MsgBox( sFB2PED.sFB2ExportFB2DeleteItem &amp; chr(10) &amp; ListBox.getSelectedItem() &amp; &quot; ?&quot;, _
    				32+1+128, sConvertorName ) &lt;&gt; 1 Then
    	Exit Sub
	End If
	Dim sArray() As String : sArray() = ListBox.Items
	Dim ItemPos As Integer : ItemPos = ListBox.SelectedItemPos
	ListBox.removeItems(ItemPos, 1)
	If ItemPos = ListBox.getItemCount() Then
		ListBox.selectItemPos(ListBox.getItemCount()-1, True)
	Else
		ListBox.selectItemPos(ItemPos, True)
	End If
	ListBox.setFocus()
End Sub

&apos;***************************************************************************
&apos; проверка, задан ли Жанр в выпадающем списке
Function IsBookGenreInput() As Boolean
	IsBookGenreInput = False
	With oFB2PropertiesDlg
		Dim oGenreComboBox As Object : oGenreComboBox = .getControl(&quot;GenreComboBox&quot;)
		If oGenreComboBox.SelectedItem = &quot;&quot; OR oGenreComboBox.SelectedItemPos = 0 Then
			Exit Function
		End If
	End With
	IsBookGenreInput = True
End Function

&apos;***************************************************************************
&apos; проверка, выбрана ли Группа Жанров в выпадающем списке
Function IsBookGroupeGenreSelect() As Boolean
	IsBookGroupeGenreSelect = True
	With oFB2PropertiesDlg
		Dim oGenreComboBox As Object : oGenreComboBox = .getControl(&quot;GenreComboBox&quot;)
		&apos;ищем в массиве нужный жанр
		Dim sGenreCode As String : sGenreCode = GetGenreInList( oGenreComboBox.SelectedItem )
		If sGenreCode = &quot;?&quot; Then
			Exit Function
		End If
	End With
	IsBookGroupeGenreSelect = False
End Function

&apos;********************************************************************************
&apos; проверяем, есть ли в списке добавляемый Жанр
Function IsGenreExsistInArray() As Boolean
	IsGenreExsistInArray = False
	With oFB2PropertiesDlg
		Dim i As Integer
		Dim oGenreList : oGenreList = .getControl(&quot;lbGenre&quot;).Items
		For i=0 To UBound( oGenreList )
			If InStr( oGenreList(i), Trim (.getControl(&quot;GenreComboBox&quot;).SelectedItem ) ) = 1 Then
				IsGenreExsistInArray = True
				Exit For
			End If
		Next i
	End With
End Function

&apos;***************************************************************************
&apos; проверка выбранного Жанра на наличие в Списке добавленных Жанров
&apos; если вводимых данных нет в Списке, возвращает Строку &quot;Жанр | Match%&quot;. Иначе - &quot;&quot;
Function IsNewGenre() As String
	IsNewGenre = &quot;&quot;
	With oFB2PropertiesDlg
		If Not IsGenreExsistInArray() Then
			IsNewGenre = MakeGenreWithMatchString( .getControl(&quot;GenreComboBox&quot;).SelectedItem, .Model.NumericFieldMatch.Value )
		End If
	End With
End Function

&apos;***************************************************************************
&apos; добавление Жанра в ListBox
Sub _BookGenreAdd()
	With oFB2PropertiesDlg
		Dim oGenreComboBox	As Object : oGenreComboBox	= .getControl(&quot;GenreComboBox&quot;)
		Dim oListOfGenres	As Object : oListOfGenres	= .getControl(&quot;lbGenre&quot;)
		Dim sGenreWithMatch	As String : sGenreWithMatch	= Trim ( IsNewGenre() )
		&apos; проверяем, нет ли в списке добавляемого Жанра
		If sGenreWithMatch &lt;&gt; &quot;&quot; Then
			oListOfGenres.addItem( sGenreWithMatch, oListOfGenres.getItemCount() )
			oGenreComboBox.selectItemPos( 0, True )
			.Model.NumericFieldMatch.Value = &quot;100&quot;
		End If
	End With
End Sub

&apos;***************************************************************************
&apos; добавление Жанра в ListBox
Sub BookGenreAdd()
	With oFB2PropertiesDlg
		Dim oGenreComboBox As Object : oGenreComboBox = .getControl(&quot;GenreComboBox&quot;)
		&apos; проверка, задан ли Жанр в выпадающем списке
		If Not IsBookGenreInput() Then
			MsgBox sFB2PED.sFB2PropEditorDlgSelectGenre, 64, sConvertorName
			.Model.Step = 1
			.getControl(&quot;optbtnTitleInfo&quot;).setState(True)
			oGenreComboBox.setFocus()
			Exit Sub
		End If
		&apos; проверка, выбрана ли Группа Жанров в выпадающем списке
		If IsBookGroupeGenreSelect() Then
			MsgBox sGD.sGenreGroup, 64, sConvertorName
			.Model.Step = 1
			.getControl(&quot;optbtnTitleInfo&quot;).setState(True)
			oGenreComboBox.setFocus()
			Exit Sub
		End If
		&apos; добавляем Жанр в ListBox 
		_BookGenreAdd()
		oGenreComboBox.setFocus()
	End With
End Sub

&apos;***************************************************************************
&apos; Проверка, соответствует ли введеный жанр стандартным
Function GetGenreInList( sGenreName As String ) As String
	GetGenreInList = &quot;&quot;
	&apos;ищем в массиве нужный жанр
	Dim i As Integer
	For i=0 To UBound( sGLN() )
		If sGLN(i) = Trim( sGenreName ) Then
			GetGenreInList = GetGenreCode( sGenreName )
			Exit For
		End If
	Next i
End Function

&apos;***************************************************************************
&apos; перемещение выбранного Жанра вверх
Sub GenreUp()
	ListBoxItemUp( oFB2PropertiesDlg.getControl(&quot;lbGenre&quot;) )
End Sub

&apos;***************************************************************************
&apos; перемещение выбранного Жанра вниз
Sub GenreDown()
	ListBoxItemDown( oFB2PropertiesDlg.getControl(&quot;lbGenre&quot;) )
End Sub

&apos;***************************************************************************
&apos; удаление выбранного Жанра
Sub GenreRemove()
	ListBoxItemRemove( oFB2PropertiesDlg.getControl(&quot;lbGenre&quot;) )
End Sub

&apos;***************************************************************************
&apos; генерация строки Жанра с Match
Function MakeGenreWithMatchString(Genre As String, Match As String) As String
	MakeGenreWithMatchString = Trim(Genre) &amp; &quot; | &quot; &amp; Trim(Match) &amp; &quot;%&quot;
End Function

&apos;***************************************************************************
&apos; проверка, задан ли хоть один из данных на Автора Книги
Function IsBookAuthorInput() As Boolean
	IsBookAuthorInput = False
	With oFB2PropertiesDlg.Model
		If Trim(.tiFirst.Text) = &quot;&quot; AND Trim(.tiMiddle.Text) = &quot;&quot; AND Trim(.tiLast.Text) = &quot;&quot; AND _
			Trim(.tiNickname.Text) = &quot;&quot; AND Trim(.tiEmail.Text) = &quot;&quot; AND Trim(.tiHomepage.Text) = &quot;&quot; Then
			Exit Function
		End If
	End With
	IsBookAuthorInput = True
End Function

&apos;***************************************************************************
&apos; проверка вводимого Автора Книги на наличие в Списке добавленных Авторов Книги
&apos; если вводимых данных нет в Списке, возвращает Строку &quot;Имя | Отчество |&quot; и т.д. Иначе - &quot;&quot;
Function IsNewBookAuthor() As String
	IsNewBookAuthor = &quot;&quot;
	With oFB2PropertiesDlg
		Dim oListOfBookAuthors As Object : oListOfBookAuthors = .getControl(&quot;lbBookAuthors&quot;)
		Dim AuthorDataString As String
		AuthorDataString = Trim( MakeAuthorDataString( .Model.tiFirst.Text, .Model.tiMiddle.Text, .Model.tiLast.Text, _
													.Model.tiNickname.Text, .Model.tiEmail.Text, .Model.tiHomepage.Text ) )
		If IsExsistStringInArray( oListOfBookAuthors.Items, AuthorDataString ) = -1 Then
			IsNewBookAuthor = AuthorDataString
		End If
	End With
End Function

&apos;***************************************************************************
&apos; добавление Автора Книги в ListBox
Sub _BookAuthorAdd()
	&apos; проверка вводимого Автора Книги на наличие в Списке добавленных Авторов Книги
	With oFB2PropertiesDlg
		Dim oListOfBookAuthors	As Object : oListOfBookAuthors	= .getControl(&quot;lbBookAuthors&quot;)
		Dim AuthorDataString	As String : AuthorDataString	= IsNewBookAuthor()
		If AuthorDataString &lt;&gt; &quot;&quot; Then
			oListOfBookAuthors.addItem( AuthorDataString, oListOfBookAuthors.getItemCount() )
			.Model.tiFirst.Text		= &quot;&quot;
			.Model.tiMiddle.Text	= &quot;&quot;
			.Model.tiLast.Text		= &quot;&quot;
			.Model.tiNickname.Text	= &quot;&quot;
			.Model.tiEmail.Text		= &quot;&quot;
			.Model.tiHomepage.Text	= &quot;&quot;
		End If
	End With
End Sub

&apos;***************************************************************************
&apos; добавление Автора Книги в ListBox
Sub BookAuthorAdd()
	With oFB2PropertiesDlg
		&apos; проверка, задан ли хоть один из данных на Автора Книги
		If Not IsBookAuthorInput() Then
			MsgBox sFB2PED.sFB2PropEditorDlgFillBookAuthor, 64, sConvertorName
			.getControl(&quot;tiFirst&quot;).setFocus()
			Exit Sub
		End If
		&apos; добавляем Автора Книги в ListBox
		_BookAuthorAdd()
		.getControl(&quot;tiFirst&quot;).setFocus()
	End With
End Sub

&apos;***************************************************************************
&apos; перемещение выбранного Автора Книги вверх
Sub BookAuthorUp()
	ListBoxItemUp( oFB2PropertiesDlg.getControl(&quot;lbBookAuthors&quot;) )
End Sub

&apos;***************************************************************************
&apos; перемещение выбранного Автора Книги вниз
Sub BookAuthorDown()
	ListBoxItemDown( oFB2PropertiesDlg.getControl(&quot;lbBookAuthors&quot;) )
End Sub

&apos;***************************************************************************
&apos; удаление выбранного Автора Книги
Sub BookAuthorRemove()
	Dim oListOfBookAuthors As Object : oListOfBookAuthors = oFB2PropertiesDlg.getControl(&quot;lbBookAuthors&quot;)
	ListBoxItemRemove( oListOfBookAuthors )
	If oListOfBookAuthors.getItemCount() = 0 Then
		If oListOfBookAuthors.getItemCount() &gt; 0 Then
			Redim sAuthors( oListOfBookAuthors.getItemCount(), 5 )
		End If
	End If
End Sub

&apos;***************************************************************************
&apos; генерация строки данных для автора, переводчика...
Function MakeAuthorDataString(First As String, Middle As String, Last As String, Nickname As String, Email As String, Homepage As String) As String
	MakeAuthorDataString = Trim(First) &amp; &quot; | &quot; &amp; Trim(Middle) &amp; &quot; | &quot; &amp; Trim(Last) &amp; &quot; | &quot; &amp; Trim(Nickname) &amp; &quot; | &quot; &amp; Trim(Email) &amp; &quot; | &quot; &amp; Trim(Homepage)
End Function

&apos;***************************************************************************
&apos; проверка, задан ли хоть один из данных на Переводчика Книги
Function IsBookTranslatorInput() As Boolean
	IsBookTranslatorInput = False
	With oFB2PropertiesDlg.Model
		If Trim(.tiTransFirst.Text) = &quot;&quot; AND Trim(.tiTransMiddle.Text) = &quot;&quot; AND Trim(.tiTransLast.Text) = &quot;&quot; AND _
			Trim(.tiTransNickname.Text) = &quot;&quot; AND Trim(.tiTransEmail.Text) = &quot;&quot; AND Trim(.tiTransHomepage.Text) = &quot;&quot; Then
			Exit Function
		End If
	End With
	IsBookTranslatorInput = True
End Function

&apos;***************************************************************************
&apos; проверка вводимого Переводчика Книги на наличие в Списке добавленных Переводчиков Книги
&apos; если вводимых данных нет в Списке, возвращает Строку &quot;Имя | Отчество |&quot; и т.д. Иначе - &quot;&quot;
Function IsNewBookTranslator() As String
	IsNewBookTranslator = &quot;&quot;
	With oFB2PropertiesDlg
		Dim oListOfBookTranslators As Object : oListOfBookTranslators = .getControl(&quot;lbTranslators&quot;)
		Dim TranslatorDataString As String
		TranslatorDataString = Trim( MakeAuthorDataString( .Model.tiTransFirst.Text, .Model.tiTransMiddle.Text, .Model.tiTransLast.Text, _
															.Model.tiTransNickname.Text, .Model.tiTransEmail.Text, .Model.tiTransHomepage.Text ) )
		If IsExsistStringInArray(oListOfBookTranslators.Items, TranslatorDataString) = -1 Then
			IsNewBookTranslator = TranslatorDataString
		End If
	End With
End Function

&apos;***************************************************************************
&apos; добавление Переводчика Книги в ListBox
Sub _BookTranslatorAdd()
	With oFB2PropertiesDlg
		&apos; проверка вводимого Переводчика Книги на наличие в Списке добавленных Переводчиков Книги
		Dim oListOfBookTranslators	As Object : oListOfBookTranslators	= .getControl(&quot;lbTranslators&quot;)
		Dim TranslatorDataString	As String : TranslatorDataString	= IsNewBookTranslator()
		If TranslatorDataString &lt;&gt; &quot;&quot; Then
			oListOfBookTranslators.addItem( TranslatorDataString, oListOfBookTranslators.getItemCount() )
			.Model.tiTransFirst.Text	= &quot;&quot;
			.Model.tiTransMiddle.Text	= &quot;&quot;
			.Model.tiTransLast.Text		= &quot;&quot;
			.Model.tiTransNickname.Text	= &quot;&quot;
			.Model.tiTransEmail.Text	= &quot;&quot;
			.Model.tiTransHomepage.Text	= &quot;&quot;
		End If
	End With
End Sub

&apos;***************************************************************************
&apos; добавление Переводчика Книги в ListBox
Sub BookTranslatorAdd()
	With oFB2PropertiesDlg
		&apos; проверка, задан ли хоть один из данных на Переводчика Книги
		If Not IsBookTranslatorInput() Then
			MsgBox sFB2PED.sFB2PropEditorDlgFillBookTrans, 64, sConvertorName
			.getControl(&quot;tiTransFirst&quot;).setFocus()
			Exit Sub
		End If
		&apos; добавляем Переводчика Книги в ListBox
		_BookTranslatorAdd()
		.getControl(&quot;tiTransFirst&quot;).setFocus()
	End With
End Sub

&apos;***************************************************************************
&apos; перемещение выбранного Переводчика Книги вверх
Sub BookTranslatorUp()
	ListBoxItemUp( oFB2PropertiesDlg.getControl(&quot;lbTranslators&quot;) )
End Sub

&apos;***************************************************************************
&apos; перемещение выбранного Переводчика Книги вниз
Sub BookTranslatorDown()
	ListBoxItemDown( oFB2PropertiesDlg.getControl(&quot;lbTranslators&quot;) )
End Sub

&apos;***************************************************************************
&apos; удаление выбранного Переводчика Книги
Sub BookTranslatorRemove()
	ListBoxItemRemove( oFB2PropertiesDlg.getControl(&quot;lbTranslators&quot;) )
End Sub

&apos;***************************************************************************
&apos; проверка, задан ли хоть один из данных на Серию Электронной Книги
Function IsBookSequenceInput() As Boolean
	IsBookSequenceInput = False
	With oFB2PropertiesDlg.Model
		If Trim(.SequenceTextField.Text) = &quot;&quot; AND Trim(.SequenceNumberTextField.Text) = &quot;&quot; Then
			Exit Function
		End If
	End With
	IsBookSequenceInput = True
End Function

&apos;***************************************************************************
&apos; проверка вводимой Серии Электронной Книги на наличие в Списке добавленных Серию Электронной Книги
&apos; если вводимых данных нет в Списке, возвращает Строку &quot;Серия | Номер&quot;. Иначе - &quot;&quot;
Function IsNewBookSequence() As String
	IsNewBookSequence = &quot;&quot;
	With oFB2PropertiesDlg
		Dim oListOfBookSequencies As Object : oListOfBookSequencies = .getControl(&quot;lbSequencies&quot;)
		Dim BookSequenceDataString As String
		BookSequenceDataString = MakeBookSequenceDataString( Trim(.Model.SequenceTextField.Text), Trim(.Model.SequenceNumberTextField.Text) )
		If IsExsistStringInArray(oListOfBookSequencies.Items, BookSequenceDataString) = -1 Then
			IsNewBookSequence = BookSequenceDataString
		End If
	End With
End Function

&apos;***************************************************************************
&apos; добавление Серии Книги в ListBox
Sub _BookSequenceAdd()
	With oFB2PropertiesDlg
		&apos; проверка вводимой Серии Электронной Книги на наличие в Списке добавленных Серию Электронной Книги
		Dim oListOfBookSequencies	As Object : oListOfBookSequencies	= .getControl(&quot;lbSequencies&quot;)
		Dim BookSequenceDataString	As String : BookSequenceDataString	= IsNewBookSequence()
		If IsNewBookSequence() &lt;&gt; &quot;&quot; Then
			oListOfBookSequencies.addItem( BookSequenceDataString, oListOfBookSequencies.getItemCount() )
			.Model.SequenceTextField.Text		= &quot;&quot;
			.Model.SequenceNumberTextField.Text	= &quot;&quot;
		End If
	End With
End Sub

&apos;***************************************************************************
&apos; добавление Серии Книги в ListBox
Sub BookSequenceAdd()
	With oFB2PropertiesDlg
		&apos; проверка, задан ли хоть один из данных на Серию Электронной Книги
		If Not IsBookSequenceInput() Then
			MsgBox sFB2PED.sFB2PropEditorDlgFillBookSequence, 64, sConvertorName
			.getControl(&quot;SequenceTextField&quot;).setFocus()
			Exit Sub
		End If
		&apos; добавляем Серию Книги в ListBox
		_BookSequenceAdd()
		.getControl(&quot;SequenceTextField&quot;).setFocus()
	End With
End Sub

&apos;***************************************************************************
&apos; перемещение выбранной Серии Книги вверх
Sub BookSequenceUp()
	ListBoxItemUp( oFB2PropertiesDlg.getControl(&quot;lbSequencies&quot;) )
End Sub

&apos;***************************************************************************
&apos; перемещение выбранной Серии Книги вниз
Sub BookSequenceDown()
	ListBoxItemDown( oFB2PropertiesDlg.getControl(&quot;lbSequencies&quot;) )
End Sub

&apos;***************************************************************************
&apos; удаление выбранной Серии Книги
Sub BookSequenceRemove()
	ListBoxItemRemove( oFB2PropertiesDlg.getControl(&quot;lbSequencies&quot;) )
End Sub

&apos;***************************************************************************
&apos; генерация строки данных для Серии Книги
Function MakeBookSequenceDataString(Sequence As String, SequenceNumber As String) As String
	MakeBookSequenceDataString = Make2ColDataString(Sequence, SequenceNumber)
End Function

&apos;***************************************************************************
&apos; генерация строки данных для 2-х колонок
Function Make2ColDataString(Col1 As String, Col2 As String) As String
	Make2ColDataString = Trim( Col1 ) &amp; &quot; | &quot; &amp; Trim( Col2 )
End Function

&apos;***************************************************************************
&apos; проверка, задан ли хоть один из данных на Автора fb2-файла
Function IsFB2AuthorInput() As Boolean
	IsFB2AuthorInput = False
	With oFB2PropertiesDlg.Model
		If Trim(.diFirstField.Text) = &quot;&quot; AND Trim(.diMiddleField.Text) = &quot;&quot; AND Trim(.diLastField.Text) = &quot;&quot; AND _
			Trim(.diNicknameField.Text) = &quot;&quot; AND Trim(.diEmailField.Text) = &quot;&quot; AND Trim(.diHomepageField.Text) = &quot;&quot; Then
			Exit Function
		End If
	End With
	IsFB2AuthorInput = True
End Function

&apos;***************************************************************************
&apos; проверка вводимого Автора fb2-файла на наличие в Списке добавленных Авторов fb2-файла
&apos; если вводимых данных нет в Списке, возвращает Строку &quot;Имя | Отчество |&quot; и т.д. Иначе - &quot;&quot;
Function IsNewFB2Author() As String
	IsNewFB2Author = &quot;&quot;
	With oFB2PropertiesDlg
		Dim oListOfFB2Authors	As Object : oListOfFB2Authors = .getControl(&quot;lbFB2Author&quot;)
		Dim FB2AuthorDataString	As String
		FB2AuthorDataString = Trim( MakeAuthorDataString( .Model.diFirstField.Text, .Model.diMiddleField.Text, .Model.diLastField.Text, _
														.Model.diNicknameField.Text, .Model.diEmailField.Text, .Model.diHomepageField.Text ) )
		If IsExsistStringInArray(oListOfFB2Authors.Items, FB2AuthorDataString) = -1 Then
			IsNewFB2Author = FB2AuthorDataString
		End If
	End With
End Function

&apos;***************************************************************************
&apos; добавление Автора fb2-файла в ListBox
Sub _FB2AuthorAdd()
	With oFB2PropertiesDlg
		&apos; проверка вводимого Автора fb2-файла на наличие в Списке добавленных Авторов fb2-файла
		Dim oListOfFB2Authors	As Object : oListOfFB2Authors	= .getControl(&quot;lbFB2Author&quot;)
		Dim FB2AuthorDataString	As String : FB2AuthorDataString	= IsNewFB2Author()
		If FB2AuthorDataString &lt;&gt; &quot;&quot; Then
			oListOfFB2Authors.addItem(FB2AuthorDataString, oListOfFB2Authors.getItemCount())
			.Model.diFirstField.Text	= &quot;&quot;
			.Model.diMiddleField.Text	= &quot;&quot;
			.Model.diLastField.Text		= &quot;&quot;
			.Model.diNicknameField.Text	= &quot;&quot;
			.Model.diEmailField.Text	= &quot;&quot;
			.Model.diHomepageField.Text	= &quot;&quot;
		End If
	End With
End Sub
	
&apos;***************************************************************************
&apos; добавление Автора fb2-файла в ListBox
Sub FB2AuthorAdd()
	With oFB2PropertiesDlg
		&apos; проверка, задан ли хоть один из данных на Автора fb2-файла
		If NOT IsFB2AuthorInput() Then
			MsgBox sFB2PED.sFB2PropEditorDlgFillFB2Author, 64, sConvertorName
			.getControl(&quot;diFirstField&quot;).setFocus()
			Exit Sub
		End If
		&apos; добавляем Автора fb2-файла в ListBox
		_FB2AuthorAdd()
		.getControl(&quot;diFirstField&quot;).setFocus()
	End With
End Sub

&apos;***************************************************************************
&apos; перемещение выбранного Автора fb2-файла вверх
Sub FB2AuthorUp()
	ListBoxItemUp( oFB2PropertiesDlg.getControl(&quot;lbFB2Author&quot;) )
End Sub

&apos;***************************************************************************
&apos; перемещение выбранного Автора fb2-файла вниз
Sub FB2AuthorDown()
	ListBoxItemDown( oFB2PropertiesDlg.getControl(&quot;lbFB2Author&quot;) )
End Sub

&apos;***************************************************************************
&apos; удаление выбранного Автора fb2-файла
Sub FB2AuthorRemove()
	Dim oListOfFB2Authors As Object : oListOfFB2Authors = oFB2PropertiesDlg.getControl(&quot;lbFB2Author&quot;)
	ListBoxItemRemove( oListOfFB2Authors )
	If oListOfFB2Authors.getItemCount() = 0 Then
		If oListOfFB2Authors.getItemCount() &gt; 0 Then
			Redim sDocAuthors(oListOfFB2Authors.getItemCount(), 5)
		End If
	End If
End Sub

&apos;***************************************************************************
&apos; проверка, задан ли хоть один из данных на Серию Бумажной Книги
Function IsPublisherSequenseInput() As Boolean
	IsPublisherSequenseInput = False
	With oFB2PropertiesDlg.Model
		If Trim(.pubSequenseTextField.Text) = &quot;&quot; AND Trim(.pubSequenseNumberTextField.Text) = &quot;&quot; Then
			Exit Function
		End If
	End With
	IsPublisherSequenseInput = True
End Function

&apos;***************************************************************************
&apos; проверка вводимой Серии Бумажной Книги на наличие в Списке добавленных Серию Бумажной Книги
&apos; если вводимых данных нет в Списке, возвращает Строку &quot;Серия | Номер&quot;. Иначе - &quot;&quot;
Function IsNewPublisherSequence() As String
	IsNewPublisherSequence = &quot;&quot;
	With oFB2PropertiesDlg
		Dim oListOfPaperBookSequencies As Object : oListOfPaperBookSequencies = .getControl(&quot;lbPubSequensies&quot;)
		Dim PaperBookSequenceDataString As String
		PaperBookSequenceDataString = MakeBookSequenceDataString( Trim(.Model.pubSequenseTextField.Text), Trim(.Model.pubSequenseNumberTextField.Text) )
		If IsExsistStringInArray( oListOfPaperBookSequencies.Items, PaperBookSequenceDataString ) = -1 Then
			IsNewPublisherSequence = PaperBookSequenceDataString
		End If
	End With
End Function

&apos;***************************************************************************
&apos; добавление Серии Бумажной Книги
Sub _PublisherSequenceAdd()
	With oFB2PropertiesDlg
		&apos; проверка вводимой Серии Бумажной Книги на наличие в Списке добавленных Серию Бумажной Книги
		Dim oListOfPaperBookSequencies	As Object	: oListOfPaperBookSequencies = .getControl(&quot;lbPubSequensies&quot;)
		Dim PaperBookSequenceDataString	As String	: PaperBookSequenceDataString = IsNewPublisherSequence()
		If PaperBookSequenceDataString &lt;&gt; &quot;&quot; Then
			oListOfPaperBookSequencies.addItem(PaperBookSequenceDataString, oListOfPaperBookSequencies.getItemCount())
			.Model.pubSequenseTextField.Text		= &quot;&quot;
			.Model.pubSequenseNumberTextField.Text	= &quot;&quot;
		End If
	End With
End Sub
	
&apos;***************************************************************************
&apos; добавление Серии Бумажной Книги
Sub PublisherSequenceAdd()
	With oFB2PropertiesDlg
		&apos; проверка, задан ли хоть один из данных на Серию Бумажной Книги
		If NOT IsPublisherSequenseInput() Then
			MsgBox sFB2PED.sFB2PropEditorDlgFillPaperBookSequence, 64, sConvertorName
			.getControl(&quot;pubSequenseTextField&quot;).setFocus()
			Exit Sub
		End If
		&apos; добавляем Серию Бумажной Книги
		_PublisherSequenceAdd()
		.getControl(&quot;pubSequenseTextField&quot;).setFocus()
	End With
End Sub

&apos;***************************************************************************
&apos; перемещение выбранной Серии Бумажной Книги вверх
Sub PublisherSequenceUp()
	ListBoxItemUp( oFB2PropertiesDlg.getControl(&quot;lbPubSequensies&quot;) )
End Sub

&apos;***************************************************************************
&apos; перемещение выбранной Серии Бумажной Книги вниз
Sub PublisherSequenceDown()
	ListBoxItemDown( oFB2PropertiesDlg.getControl(&quot;lbPubSequensies&quot;) )
End Sub

&apos;***************************************************************************
&apos; удаление выбранной Серии Бумажной Книги
Sub PublisherSequenceRemove()
	ListBoxItemRemove( oFB2PropertiesDlg.getControl(&quot;lbPubSequensies&quot;) )
End Sub

&apos;***************************************************************************
&apos; проверка, задан ли УДК
Function IsUDCCustomInfoInput() As Boolean
	IsUDCCustomInfoInput = False
	With oFB2PropertiesDlg.Model
		If Trim(.pubUDCTextField.Text) = &quot;&quot; Then
			Exit Function
		End If
	End With
	IsUDCCustomInfoInput = True
End Function

&apos;***************************************************************************
&apos; проверка вводимой УДК Custom Info на наличие в Списке добавленных Custom Info
&apos; если вводимых данных нет в Списке, возвращает Строку &quot;Type | Value&quot;. Иначе - &quot;&quot;
Function IsNewUDCEnCustomInfo() As String
	IsNewUDCEnCustomInfo = &quot;&quot;
	With oFB2PropertiesDlg
		Dim oListOfCustomInfos As Object : oListOfCustomInfos = .getControl(&quot;lbCustomInfos&quot;)
		Dim UDCCustomInfoDataString As String
		UDCCustomInfoDataString = Make2ColDataString( &quot;UDC&quot;, Trim(.Model.pubUDCTextField.Text) )
		If IsExsistStringInArray(oListOfCustomInfos.Items, UDCCustomInfoDataString) = -1 Then
			IsNewUDCEnCustomInfo = UDCCustomInfoDataString
		End If
	End With
End Function

&apos;***************************************************************************
&apos; проверка вводимой УДК Custom Info на наличие в Списке добавленных Custom Info
&apos; если вводимых данных нет в Списке, возвращает Строку &quot;Type | Value&quot;. Иначе - &quot;&quot;
Function IsNewUDCRuCustomInfo() As String
	IsNewUDCRuCustomInfo = &quot;&quot;
	With oFB2PropertiesDlg
		Dim oListOfCustomInfos As Object : oListOfCustomInfos = .getControl(&quot;lbCustomInfos&quot;)
		Dim UDCCustomInfoDataString As String
		UDCCustomInfoDataString = Make2ColDataString( &quot;УДК&quot;, Trim(.Model.pubUDCTextField.Text) )
		If IsExsistStringInArray(oListOfCustomInfos.Items, UDCCustomInfoDataString) = -1 Then
			IsNewUDCRuCustomInfo = UDCCustomInfoDataString
		End If
	End With
End Function

&apos;***************************************************************************
&apos; добавление УДК в Custom Info
Sub _UDCCustomInfoAdd()
	With oFB2PropertiesDlg
		&apos; проверка вводимой Custom Info UDC на наличие в Списке добавленных Custom Info
		Dim oListOfCustomInfos		As Object : oListOfCustomInfos		= .getControl(&quot;lbCustomInfos&quot;)
		Dim UDCCustomInfoDataString	As String : UDCCustomInfoDataString	= IsNewUDCEnCustomInfo()
		If UDCCustomInfoDataString &lt;&gt; &quot;&quot; Then
			oListOfCustomInfos.addItem( UDCCustomInfoDataString, oListOfCustomInfos.getItemCount() )
		End If
		UDCCustomInfoDataString	= IsNewUDCRuCustomInfo()
		If UDCCustomInfoDataString &lt;&gt; &quot;&quot; Then
			oListOfCustomInfos.addItem( UDCCustomInfoDataString, oListOfCustomInfos.getItemCount() )
		End If
	End With
End Sub

&apos;***************************************************************************
&apos; проверка, задан ли ББК
Function IsBBCCustomInfoInput() As Boolean
	IsBBCCustomInfoInput = False
	With oFB2PropertiesDlg.Model
		If Trim(.pubBBCTextField.Text) = &quot;&quot; Then
			Exit Function
		End If
	End With
	IsBBCCustomInfoInput = True
End Function

&apos;***************************************************************************
&apos; проверка вводимой ББК Custom Info на наличие в Списке добавленных Custom Info
&apos; если вводимых данных нет в Списке, возвращает Строку &quot;Type | Value&quot;. Иначе - &quot;&quot;
Function IsNewBBCCustomInfo() As String
	IsNewBBCCustomInfo = &quot;&quot;
	With oFB2PropertiesDlg
		Dim oListOfCustomInfos As Object : oListOfCustomInfos = .getControl(&quot;lbCustomInfos&quot;)
		Dim BBCCustomInfoDataString As String
		BBCCustomInfoDataString = Make2ColDataString( &quot;ББК&quot;, Trim(.Model.pubBBCTextField.Text) )
		If IsExsistStringInArray(oListOfCustomInfos.Items, BBCCustomInfoDataString) = -1 Then
			IsNewBBCCustomInfo = BBCCustomInfoDataString
		End If
	End With
End Function

&apos;***************************************************************************
&apos; добавление ББК в Custom Info
Sub _BBCCustomInfoAdd()
	With oFB2PropertiesDlg
		&apos; проверка вводимой Custom Info BBC на наличие в Списке добавленных Custom Info
		Dim oListOfCustomInfos		As Object : oListOfCustomInfos		= .getControl(&quot;lbCustomInfos&quot;)
		Dim BBCCustomInfoDataString	As String : BBCCustomInfoDataString	= IsNewBBCCustomInfo()
		If BBCCustomInfoDataString &lt;&gt; &quot;&quot; Then
			oListOfCustomInfos.addItem( BBCCustomInfoDataString, oListOfCustomInfos.getItemCount() )
		End If
	End With
End Sub

&apos;***************************************************************************
&apos; проверка, задан ли Авторский знак
Function IsAuthorSignCustomInfoInput() As Boolean
	IsAuthorSignCustomInfoInput = False
	With oFB2PropertiesDlg.Model
		If Trim(.pubAuthorSignTextField.Text) = &quot;&quot; Then
			Exit Function
		End If
	End With
	IsAuthorSignCustomInfoInput = True
End Function

&apos;***************************************************************************
&apos; проверка вводимого Авторского знака Custom Info на наличие в Списке добавленных Custom Info
&apos; если вводимых данных нет в Списке, возвращает Строку &quot;Type | Value&quot;. Иначе - &quot;&quot;
Function IsNewAuthorSignEnCustomInfo() As String
	IsNewAuthorSignEnCustomInfo = &quot;&quot;
	With oFB2PropertiesDlg
		Dim oListOfCustomInfos As Object : oListOfCustomInfos = .getControl(&quot;lbCustomInfos&quot;)
		Dim AuthorSignCustomInfoDataString As String
		AuthorSignCustomInfoDataString = Make2ColDataString( &quot;Authors_sign&quot;, Trim(.Model.pubAuthorSignTextField.Text) )
		If IsExsistStringInArray(oListOfCustomInfos.Items, AuthorSignCustomInfoDataString) = -1 Then
			IsNewAuthorSignEnCustomInfo = AuthorSignCustomInfoDataString
		End If
	End With
End Function

&apos;***************************************************************************
&apos; проверка вводимого Авторского знака Custom Info на наличие в Списке добавленных Custom Info
&apos; если вводимых данных нет в Списке, возвращает Строку &quot;Type | Value&quot;. Иначе - &quot;&quot;
Function IsNewAuthorSignRuCustomInfo() As String
	IsNewAuthorSignRuCustomInfo = &quot;&quot;
	With oFB2PropertiesDlg
		Dim oListOfCustomInfos As Object : oListOfCustomInfos = .getControl(&quot;lbCustomInfos&quot;)
		Dim AuthorSignCustomInfoDataString As String
		AuthorSignCustomInfoDataString = Make2ColDataString( &quot;Авторский_знак&quot;, Trim(.Model.pubAuthorSignTextField.Text) )
		If IsExsistStringInArray(oListOfCustomInfos.Items, AuthorSignCustomInfoDataString) = -1 Then
			IsNewAuthorSignRuCustomInfo = AuthorSignCustomInfoDataString
		End If
	End With
End Function

&apos;***************************************************************************
&apos; добавление Авторского знака в Custom Info
Sub _AuthorSignCustomInfoAdd()
	With oFB2PropertiesDlg
		&apos; проверка вводимой Custom Info AuthorSign на наличие в Списке добавленных Custom Info
		Dim oListOfCustomInfos		As Object : oListOfCustomInfos	= .getControl(&quot;lbCustomInfos&quot;)
		Dim AuthorSignCustomInfoDataString	As String : AuthorSignCustomInfoDataString	= IsNewAuthorSignEnCustomInfo()
		If AuthorSignCustomInfoDataString &lt;&gt; &quot;&quot; Then
			oListOfCustomInfos.addItem( AuthorSignCustomInfoDataString, oListOfCustomInfos.getItemCount() )
		End If
		AuthorSignCustomInfoDataString	= IsNewAuthorSignRuCustomInfo()
		If AuthorSignCustomInfoDataString &lt;&gt; &quot;&quot; Then
			oListOfCustomInfos.addItem( AuthorSignCustomInfoDataString, oListOfCustomInfos.getItemCount() )
		End If
	End With
End Sub

&apos;***************************************************************************
&apos; добавление Готовых типов Custom Info
Sub PresetCustomInfoAdd()
	With oFB2PropertiesDlg
		Dim oCusTypeListBox	As Object : oCusTypeListBox = .getControl(&quot;cusTypeListBox&quot;)
		.Model.cusTypeTextField.Text = oCusTypeListBox.SelectedItem
		.getControl(&quot;cusTypeTextField&quot;).setFocus()
	End With
End Sub

&apos;***************************************************************************
&apos; проверка, задан ли хоть один из данных на Custom Info
Function IsCustomInfoInput() As Boolean
	IsCustomInfoInput = False
	With oFB2PropertiesDlg.Model
		If Trim(.cusTypeTextField.Text) = &quot;&quot; OR Trim(.cusValueTextField.Text) = &quot;&quot; Then
			Exit Function
		End If
	End With
	IsCustomInfoInput = True
End Function

&apos;***************************************************************************
&apos; проверка вводимой Custom Info на наличие в Списке добавленных Custom Info
&apos; если вводимых данных нет в Списке, возвращает Строку &quot;Type | Value&quot;. Иначе - &quot;&quot;
Function IsNewCustomInfo() As String
	IsNewCustomInfo = &quot;&quot;
	With oFB2PropertiesDlg
		Dim oListOfCustomInfos As Object : oListOfCustomInfos = .getControl(&quot;lbCustomInfos&quot;)
		Dim CustomInfoDataString As String
		CustomInfoDataString = Make2ColDataString( Trim(.Model.cusTypeTextField.Text), Trim(.Model.cusValueTextField.Text) )
		If IsExsistStringInArray(oListOfCustomInfos.Items, CustomInfoDataString) = -1 Then
			IsNewCustomInfo = CustomInfoDataString
		End If
	End With
End Function

&apos;***************************************************************************
&apos; добавление Custom Info
Sub _CustomInfoAdd()
	With oFB2PropertiesDlg
		&apos; проверка вводимой Custom Info на наличие в Списке добавленных Custom Info
		Dim oListOfCustomInfos		As Object : oListOfCustomInfos = .getControl(&quot;lbCustomInfos&quot;)
		Dim CustomInfoDataString	As String : CustomInfoDataString = IsNewCustomInfo()
		If CustomInfoDataString &lt;&gt; &quot;&quot; Then
			oListOfCustomInfos.addItem( CustomInfoDataString, oListOfCustomInfos.getItemCount() )
			.Model.cusTypeTextField.Text	= &quot;&quot;
			.Model.cusValueTextField.Text	= &quot;&quot;
		End If
	End With
End Sub	
	
&apos;***************************************************************************
&apos; добавление Custom Info
Sub CustomInfoAdd()
	With oFB2PropertiesDlg
		&apos; проверка, задан ли хоть один из данных на Custom Info
		If NOT IsCustomInfoInput() Then
			MsgBox sFB2PED.sFB2PropEditorDlgFillCustomInfo, 64, sConvertorName
			If Trim(.Model.cusTypeTextField.Text) = &quot;&quot; Then
				.getControl(&quot;cusTypeTextField&quot;).setFocus()
			Else
				.getControl(&quot;cusValueTextField&quot;).setFocus()
			End If
			Exit Sub
		End If
		&apos; добавляем Custom Info
		_CustomInfoAdd()
		.getControl(&quot;cusTypeTextField&quot;).setFocus()
	End With
End Sub

&apos;***************************************************************************
&apos; перемещение выбранной Custom Info вверх
Sub CustomInfoUp()
	ListBoxItemUp( oFB2PropertiesDlg.getControl(&quot;lbCustomInfos&quot;) )
End Sub

&apos;***************************************************************************
&apos; перемещение выбранной Custom Info вниз
Sub CustomInfoDown()
	ListBoxItemDown( oFB2PropertiesDlg.getControl(&quot;lbCustomInfos&quot;) )
End Sub

&apos;***************************************************************************
&apos; удаление выбранной Custom Info
Sub CustomInfoRemove()
	ListBoxItemRemove( oFB2PropertiesDlg.getControl(&quot;lbCustomInfos&quot;) )
End Sub

&apos; ===========================================================================================================================
&apos; 								сохранение fb2 данных в свойства документа
&apos; ===========================================================================================================================

&apos; сохранение fb2 данных в свойства документа
Sub SaveFB2PropertiesToDoc( ByRef oProgressBar, ByRef Iter As Integer )
	&apos; удаляем все fb2 свойства из документа
	RemoveAllUserPropertyFromTemplate()
	oProgressBar.setValue(Iter) : Iter = Iter + 1
	
	&apos; добавление данных в свойства документа
	With oFB2PropertiesDlg.Model
		&apos; = Title Info =
		If Trim(.BookTitleField.Text) &lt;&gt; &quot;&quot; Then
			SetUserProperty( _fb2_ti_BookTitle, Trim(.BookTitleField.Text) )
		End If
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		If Trim(.KeywordsField.Text) &lt;&gt; &quot;&quot; Then
			SetUserProperty( _fb2_ti_Keywords, Trim(.KeywordsField.Text) )
		End If
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		If Trim(.tiDateValueField.Text) &lt;&gt; &quot;&quot;  Then
			SetUserProperty( _fb2_ti_DateValue, Trim(.tiDateValueField.Text) )
		End If
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		If Trim(.tiDateTextField.Text) &lt;&gt; &quot;&quot; Then
			SetUserProperty( _fb2_ti_DateText, Trim(.tiDateTextField.Text) )
		End If
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		
		Dim oLB As Object
		oLB = oFB2PropertiesDlg.getControl(&quot;LangComboBox&quot;)
		SetUserProperty( _fb2_ti_Lang, oLB.SelectedItem )
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		oLB = oFB2PropertiesDlg.getControl(&quot;SrcLangComboBox&quot;)
		If oLB.SelectedItemPos &gt; 0 Then
			SetUserProperty( _fb2_ti_SrcLang, oLB.SelectedItem )
		End If
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		
		&apos; Массивы свойств
		Dim oListOfData As Object
		Dim i As Integer
		&apos; для Жанров Книги
		oListOfData = oFB2PropertiesDlg.getControl(&quot;lbGenre&quot;)
		If oListOfData.getItemCount() &gt; 0 Then
			For i = 0 To oListOfData.getItemCount() - 1
				SetUserProperty( _fb2_ti_GenreCM &amp; i, oListOfData.getItem(i) )
			Next i
		End If
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		
		&apos; для Авторов Книги
		oListOfData = oFB2PropertiesDlg.getControl(&quot;lbBookAuthors&quot;)
		If oListOfData.getItemCount() &gt; 0 Then
			For i = 0 To oListOfData.getItemCount() - 1
				SetUserProperty( _fb2_ti_BookAuthor &amp; i, oListOfData.getItem(i) )
			Next i
		End If
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		
		&apos; для Переводчиков Книги
		oListOfData = oFB2PropertiesDlg.getControl(&quot;lbTranslators&quot;)
		If oListOfData.getItemCount() &gt; 0 Then
			For i = 0 To oListOfData.getItemCount()-1
				SetUserProperty( _fb2_ti_Translator &amp; i, oListOfData.getItem(i) )
			Next i
		End If
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		
		&apos; для Серий Книги
		oListOfData = oFB2PropertiesDlg.getControl(&quot;lbSequencies&quot;)
		If oListOfData.getItemCount() &gt; 0 Then
			For i = 0 To oListOfData.getItemCount() - 1
				SetUserProperty( _fb2_ti_Sequence &amp; i, oListOfData.getItem(i) )
			Next i
		End If
		oProgressBar.setValue(Iter) : Iter = Iter + 1

		&apos; = Document Info =
		&apos; Единичные свойства
		If Trim(.IDField.Text) &lt;&gt; &quot;&quot; Then
			SetUserProperty( _fb2_di_ID, Trim(.IDField.Text) )
		End If
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		If Trim(.VersionField.Text) &lt;&gt; &quot;&quot; Then
			SetUserProperty( _fb2_di_Version, Trim(.VersionField.Text) )
		End If
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		If Trim(.diURLField.Text) &lt;&gt; &quot;&quot; Then
			SetUserProperty( _fb2_di_SrcUrl, Trim(.diURLField.Text) )
		End If
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		If Trim(.diOCRField.Text) &lt;&gt; &quot;&quot; Then
			SetUserProperty( _fb2_di_OCR, Trim(.diOCRField.Text) )
		End If
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		If Trim(.HistoryTextField.Text) &lt;&gt; &quot;&quot; Then
			SetUserProperty( _fb2_di_History, Trim(.HistoryTextField.Text) )
		End If
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		&apos; Массивы свойств
		oListOfData = oFB2PropertiesDlg.getControl(&quot;lbFB2Author&quot;)
		If oListOfData.getItemCount() &gt; 0 Then
			For i = 0 To oListOfData.getItemCount() - 1
				SetUserProperty( _fb2_di_FB2Author &amp; i, oListOfData.getItem(i) )
			Next i
		End If
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		
		&apos; = Publish Info =
		&apos; Единичные свойства
		If Trim(.pubBookNameTextField.Text) &lt;&gt; &quot;&quot; Then
			SetUserProperty( _fb2_pi_BookName, Trim(.pubBookNameTextField.Text) )
		End If
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		If Trim(.pubPublisherTextField.Text) &lt;&gt; &quot;&quot; Then
			SetUserProperty( _fb2_pi_Publisher, Trim(.pubPublisherTextField.Text) )
		End If
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		If Trim(.pubCityTextField.Text) &lt;&gt; &quot;&quot; Then
			SetUserProperty( _fb2_pi_City, Trim(.pubCityTextField.Text) )
		End If
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		If Trim(.pubYearTextField.Text) &lt;&gt; &quot;&quot; Then
			SetUserProperty( _fb2_pi_Year, Trim(.pubYearTextField.Text) )
		End If
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		If Trim(.pubISBNTextField.Text) &lt;&gt; &quot;&quot; Then
			SetUserProperty( _fb2_pi_ISBN, Trim(.pubISBNTextField.Text) )
		End If
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		
		&apos; Массивы свойств
		oListOfData = oFB2PropertiesDlg.getControl(&quot;lbPubSequensies&quot;)
		If oListOfData.getItemCount() &gt; 0 Then
			For i = 0 To oListOfData.getItemCount() - 1
				SetUserProperty( _fb2_pi_Sequence &amp; i, oListOfData.getItem(i) )
			Next i
		End If
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		
		&apos; = Custom Info =
		&apos; Массивы свойств
		oListOfData = oFB2PropertiesDlg.getControl(&quot;lbCustomInfos&quot;)
		If oListOfData.getItemCount() &gt; 0 Then
			For i = 0 To oListOfData.getItemCount() - 1
				SetUserProperty( _fb2_ci_CustomInfo &amp; i, oListOfData.getItem(i) )
			Next i
		End If
		oProgressBar.setValue(Iter) : Iter = Iter + 1

		&apos; = Разное =
		&apos; Единичные свойства
		oLB = oFB2PropertiesDlg.getControl(&quot;Codepage&quot;)
		SetUserProperty( _fb2_Encoding, oLB.SelectedItem )
		oProgressBar.setValue(Iter) : Iter = Iter + 1

		&apos; задаем признак изменения документа
		ThisComponent.setModified(True)
		oProgressBar.setValue(Iter) : Iter = Iter + 1
    End With

End Sub

&apos; ===========================================================================================================================
&apos; 								загрузка fb2 данных из свойств документа в контролы формы
&apos; ===========================================================================================================================

&apos; загрузка fb2 данных из свойств документа в контролы формы
Sub GetFB2PropertiesFromDoc( ByRef oProgressBar, ByRef Iter As Integer )
	With oFB2PropertiesDlg.Model
		&apos; = Title Info =
		Dim fb2Property As String : fb2Property = GetBookTitleFromProperty()
		If fb2Property &lt;&gt; &quot;&quot; Then
			.BookTitleField.Text = fb2Property
		End If
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		.KeywordsField.Text		= GetKeywordsFromProperty()
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		.tiDateValueField.Text	= GetBookDateFromProperty()
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		.tiDateTextField.Text	= GetBookDateTextFromProperty()
		oProgressBar.setValue(Iter) : Iter = Iter + 1		
		
		Dim oLB As Object
		fb2Property = GetLangFromProperty()
		If fb2Property &lt;&gt; &quot;&quot; Then
			oLB = oFB2PropertiesDlg.getControl(&quot;LangComboBox&quot;)
			oLB.selectItem( fb2Property, True )
		End If
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		oLB = oFB2PropertiesDlg.getControl(&quot;SrcLangComboBox&quot;)
		oLB.selectItem( GetSrcLangFromProperty(), True )
		oProgressBar.setValue(Iter) : Iter = Iter + 1

		GetGenresArray()
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		GetBookAuthorsArray()
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		GetBookTranslatorsArray()
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		GetBookSequenceArray()
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		
		&apos; = Document Info =
		fb2Property = GetIDFromProperty()
		If fb2Property &lt;&gt; &quot;&quot; Then
			.IDField.Text = fb2Property
		End If
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		fb2Property = GetVersionFromProperty()
		If fb2Property &lt;&gt; &quot;&quot; Then
			.VersionField.Text = fb2Property
		End If
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		fb2Property = GetSrcUrlFromProperty()
		If fb2Property &lt;&gt; &quot;&quot; Then
			.diURLField.Text = fb2Property
		End If
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		fb2Property = GetOCRFromProperty()
		If fb2Property &lt;&gt; &quot;&quot; Then
			.diOCRField.Text = fb2Property
		End If
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		fb2Property = GetHistoryFromProperty()
		If fb2Property &lt;&gt; &quot;&quot; Then
			.HistoryTextField.Text = fb2Property
		End If
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		
		GetFB2AuthorsArray()
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		
		&apos; = Publish Info =
		.pubBookNameTextField.Text	= GetPubBookNameFromProperty()
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		.pubPublisherTextField.Text	= GetPublisherFromProperty()
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		.pubCityTextField.Text		= GetCityFromProperty()
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		.pubYearTextField.Text		= GetYearFromProperty()
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		.pubISBNTextField.Text		= GetISBNFromProperty()
		oProgressBar.setValue(Iter) : Iter = Iter + 1
				
		GetPublishSequenceArray()
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		
		&apos; = Custom Info =
		GetCustomInfosArray()
		oProgressBar.setValue(Iter) : Iter = Iter + 1
		
		&apos; УДК и ББК из CustomInfo
		Dim oListOfCustomInfos As Object : oListOfCustomInfos = oFB2PropertiesDlg.getControl(&quot;lbCustomInfos&quot;)
		Dim i As Integer, itemsCount As Integer
		If UBound( oListOfCustomInfos.Items ) &gt; 0 Then
			itemsCount = UBound( oListOfCustomInfos.getItems() )
			For i = LBound( oListOfCustomInfos.getItems() ) To itemsCount
				Dim aUDC() As String, aAS() As String
				Dim Item As String : Item = oListOfCustomInfos.Items(i)
				If InStr( Item, &quot;UDC | &quot; ) = 1 Then
					aUDC() = Split( Item, &quot; | &quot; )
					.pubUDCTextField.Text = Trim( aUDC(1) )
					oListOfCustomInfos.removeItems( i, 1 )
					itemsCount = UBound( oListOfCustomInfos.getItems() )
					i = i - 1
				ElseIf InStr( Item, &quot;УДК | &quot; ) = 1 Then
					aUDC() = Split( Item, &quot; | &quot; )
					.pubUDCTextField.Text = Trim( aUDC(1) )
					oListOfCustomInfos.removeItems( i, 1 )
					itemsCount = UBound( oListOfCustomInfos.getItems() )
					i = i - 1
				ElseIf InStr( Item, &quot;ББК | &quot; ) = 1 Then
					Dim aBBC() As String : aBBC() = Split( Item, &quot; | &quot; )
					.pubBBCTextField.Text = Trim( aBBC(1) )
					oListOfCustomInfos.removeItems( i, 1 )
					itemsCount = UBound( oListOfCustomInfos.getItems() )
					i = i - 1
				ElseIf InStr( Item, &quot;Авторский_знак | &quot; ) = 1 Then
					aAS() = Split( Item, &quot; | &quot; )
					.pubAuthorSignTextField.Text = Trim( aAS(1) )
					oListOfCustomInfos.removeItems( i, 1 )
					itemsCount = UBound( oListOfCustomInfos.getItems() )
					i = i - 1
				ElseIf InStr( Item, &quot;Authors_sign | &quot; ) = 1 Then
					aAS() = Split( Item, &quot; | &quot; )
					.pubAuthorSignTextField.Text = Trim( aAS(1) )
					oListOfCustomInfos.removeItems( i, 1 )
					itemsCount = UBound( oListOfCustomInfos.getItems() )
					i = i - 1
				End If
			Next i
		End If
		
		&apos; = Разное =
		oLB = oFB2PropertiesDlg.getControl(&quot;Codepage&quot;)
		oLB.selectItem( GetEncodingFromProperty(), True )
		oProgressBar.setValue(Iter) : Iter = Iter + 1
	End With
End Sub

&apos; ===========================================================================================================================
&apos;									взаимодействие с диалогом Избранных Жанров
&apos; ===========================================================================================================================

Sub GenreElite_Focus()
	Dim aArray() As String
	ReadFileInArray( aArray(), getOOoFBToolsSettingsDir() &amp; sConstMyGenre )
	oFB2PropertiesDlg.Model.lbGenreElite.StringItemList = aArray()
End Sub

&apos;***************************************************************************
&apos; вставка Избранного Жанра в основной бокс Жанров
Sub InsertGEToGenreBox( oEvent )
	&apos; убираем chr(10) из названия жанра - строки листбокса
	Dim sCR As String : sCR = oEvent.source.getSelectedItem
	If InStr(sCR, chr(10)) &gt; 0 Then
		sCR = ReplaceInString( sCR, chr(10), &quot;&quot;, False )
	End If
	oFB2PropertiesDlg.getControl(&quot;GenreComboBox&quot;).selectItem( Space(8) &amp; sCR, True )
End Sub

&apos; ===========================================================================================================================
&apos;										генерация ID для Книги
&apos; ===========================================================================================================================

&apos; генерация нового ID
Sub NewBookID()
	With oFB2PropertiesDlg.Model
		.IDField.Text = generateID()
		If .IDField.Text = &quot;&quot; Then
			&apos; генерация ID на основе времени и случайных чисел...
			Dim sNow As String : sNow = Now
			.IDField.Text = &quot;OOoFBTools-&quot; &amp; _
				Year(sNow) &amp; &quot;-&quot; &amp; Month(sNow) &amp; &quot;-&quot; &amp; Day(sNow) &amp; &quot;-&quot; &amp; Hour(sNow) &amp; &quot;-&quot; &amp; Minute(sNow) &amp; &quot;-&quot; &amp; Second(sNow) &amp; _
				&quot;-&quot; &amp; Year(sNow)*2 &amp; Month(sNow)*3 &amp; Day(sNow)*4 &amp; Hour(sNow)*5 &amp; Minute(sNow)*6 &amp; Second(sNow)*7 &amp; _
				&quot;-&quot; &amp; Int((3568998 * Rnd) - 3/(37 * Rnd))
		End If
	End With
End Sub

&apos; ===========================================================================================================================
&apos; 										Установка минимального описания книги по-умолчанию
&apos; ===========================================================================================================================
&apos; Установка минимального описания книги по-умолчанию
Sub SetDefaultBookDescription()
	SetUserProperty( _fb2_di_ID, generateID() )
	SetUserProperty( _fb2_di_Version, &quot;1.0&quot; )
	SetUserProperty( _fb2_ti_BookTitle, &quot;Book&quot; )
	SetUserProperty( _fb2_ti_BookAuthor, &quot;|  | Автор |  |  |&quot; )
	SetUserProperty( _fb2_ti_Lang, &quot;Russian (ru)&quot; )
	SetUserProperty( _fb2_ti_GenreCM, &quot;Неотсортированное (other) | 100%&quot; )
	SetUserProperty( _fb2_Encoding, &quot;utf-8&quot; )
End Sub

&apos; ===========================================================================================================================
&apos; 												Разное
&apos; ===========================================================================================================================
Sub MakeLangList( aLangList() )
	aLangList() = Array(&quot;Abkhazian (ab)&quot;,&quot;Afar (aa)&quot;,&quot;Afrikaans (af)&quot;,&quot;Albanian (sq)&quot;,&quot;Amharic (am)&quot;,&quot;Arabic (ar)&quot;,&quot;Armenian (hy)&quot;,&quot;Assamese (as)&quot;,&quot;Aymara (ay)&quot;,&quot;Azerbaijani (az)&quot;, _
						&quot;Bashkir (ba)&quot;,&quot;Basque (eu)&quot;,&quot;Bengali (bn)&quot;,&quot;Bhutani (dz)&quot;,&quot;Bihari (bh)&quot;,&quot;Bislama (bi)&quot;,&quot;Breton (br)&quot;,&quot;Bulgarian (bg)&quot;,&quot;Burmese (my)&quot;,&quot;Byelorussian (be)&quot;,_
						&quot;Cambodian (km)&quot;,&quot;Catalan (ca)&quot;,&quot;Chinese (zh)&quot;,&quot;Corsican (co)&quot;,&quot;Croatian (hr)&quot;,&quot;Czech (cs)&quot;,_
						&quot;Danish (da)&quot;,&quot;Dutch (nl)&quot;,_
						&quot;English (en)&quot;,&quot;Esperanto (eo)&quot;,&quot;Estonian (et)&quot;,_
						&quot;Faroese (fo)&quot;,&quot;Fiji (fj)&quot;,&quot;Finnish (fi)&quot;,&quot;French (fr)&quot;,&quot;Frisian (fy)&quot;,_
						&quot;Galician (gl)&quot;,&quot;Georgian (ka)&quot;,&quot;German (de)&quot;,&quot;Greek (el)&quot;,&quot;Greenlandic (kl)&quot;,&quot;Guarani (gn)&quot;,&quot;Gujarati (gu)&quot;,_
						&quot;Hausa (ha)&quot;,&quot;Hebrew (he)&quot;,&quot;Hindi (hi)&quot;,&quot;Hungarian (hu)&quot;,_
						&quot;Icelandic (is)&quot;,&quot;Indonesian (in)&quot;,&quot;Interlingua (ia)&quot;,&quot;Inuktitut (iu)&quot;,&quot;Inupiak (ik)&quot;,&quot;Irish (ga)&quot;,&quot;Italian (it)&quot;,_
						&quot;Japanese (ja)&quot;,&quot;Javanese (jw)&quot;,_
						&quot;Kannada (kn)&quot;,&quot;Kashmiri (ks)&quot;,&quot;Kazakh (kk)&quot;,&quot;Kirghiz (ky)&quot;,&quot;Kirundi (rn)&quot;,&quot;Kiyarwanda (rw)&quot;,&quot;Korean (ko)&quot;,&quot;Kurdish (ku)&quot;,_
						&quot;Laotian (lo)&quot;,&quot;Latin (la)&quot;,&quot;Latvian (lv)&quot;,&quot;Lingala (ln)&quot;,&quot;Lithuanian (lt)&quot;,_
						&quot;Macedonian (mk)&quot;,&quot;Malagasy (mg)&quot;,&quot;Malay (ms)&quot;,&quot;Malayalam (ml)&quot;,&quot;Maltese (mt)&quot;,&quot;Maori (mi)&quot;,&quot;Marathi (mr)&quot;,&quot;Moldavian (mo)&quot;,&quot;Mongolian (mn)&quot;,_
						&quot;Nauru (na)&quot;,&quot;Nauru (na)&quot;,&quot;Nepali (ne)&quot;,&quot;Norwegian (no)&quot;,_
						&quot;Occitan (oc)&quot;,&quot;Oriya (or)&quot;,&quot;Oromo (om)&quot;,_
						&quot;Pashto (ps)&quot;,&quot;Persian (fa)&quot;,&quot;Polish (pl)&quot;,&quot;Portuguese (pt)&quot;,&quot;Pundjabi (pa)&quot;,_
						&quot;Quechua (qu)&quot;,_
						&quot;Rhaeto-Romance (rm)&quot;,&quot;Romanian (ro)&quot;,&quot;Russian (ru)&quot;,_
						&quot;Samoan (sm)&quot;,&quot;Sangho (sg)&quot;,&quot;Sanskrit (sa)&quot;,&quot;Scots Gaelic (gd)&quot;,&quot;Serbian (sr)&quot;,&quot;Serbo-Croatian (sh)&quot;,&quot;Sesotho (st)&quot;,&quot;Setswana (tn)&quot;,&quot;Shona (sn)&quot;,&quot;Sindhi (sd)&quot;,&quot;Singhalese (si)&quot;,&quot;Siswati (ss)&quot;,&quot;Slovak (sk)&quot;,&quot;Slovenian (sl)&quot;,&quot;Somali (so)&quot;,&quot;Spanish (es)&quot;,&quot;Sudanese (su)&quot;,&quot;Swahili (sw)&quot;,&quot;Swedish (sv)&quot;,_
						&quot;Tagalog (tl)&quot;,&quot;Tajik (tg)&quot;,&quot;Tamil (ta)&quot;,&quot;Tatar (tt)&quot;,&quot;Telugu (te)&quot;,&quot;Thai (th)&quot;,&quot;Tibetan (bo)&quot;,&quot;Tigrinya (ti)&quot;,&quot;Tonga (to)&quot;,&quot;Tsonga (ts)&quot;,&quot;Turkish (tr)&quot;,&quot;Turkman (tk)&quot;,&quot;Twi (tw)&quot;,_
						&quot;Uigur (ug)&quot;,&quot;Ukrainian (uk)&quot;,&quot;Urdu (ur)&quot;,&quot;Uzbek (uz)&quot;,_
						&quot;Vietnamese (vi)&quot;,&quot;Volapuk (vo)&quot;,_
						&quot;Welsh (cy)&quot;,&quot;Wolof (wo)&quot;,_
						&quot;Xhosa (xh)&quot;,_
						&quot;Yiddish (yi)&quot;,&quot;Yorouba (yo)&quot;,_
						&quot;Zhuang (za)&quot;,&quot;Zulu (zu)&quot;)
End Sub

&apos;Sub MakeLangList( aLangList() )
&apos;	aLangList() = Array(&quot;ab&quot;,&quot;az&quot;,&quot;be&quot;,&quot;bg&quot;,&quot;cs&quot;,&quot;cy&quot;,&quot;da&quot;,&quot;de&quot;,&quot;el&quot;,&quot;en&quot;,&quot;eo&quot;,&quot;es&quot;,&quot;et&quot;,&quot;fa&quot;,&quot;fi&quot;,_
&apos;						&quot;fr&quot;,&quot;he&quot;,&quot;hr&quot;,&quot;hu&quot;,&quot;hy&quot;,&quot;it&quot;,&quot;ja&quot;,&quot;kk&quot;,&quot;ko&quot;,&quot;ky&quot;,&quot;la&quot;,&quot;lt&quot;,&quot;lv&quot;,&quot;mk&quot;,&quot;mn&quot;,_
&apos;						&quot;mo&quot;,&quot;nl&quot;,&quot;no&quot;,&quot;pl&quot;,&quot;pt&quot;,&quot;ru&quot;,&quot;sa&quot;,&quot;sk&quot;,&quot;sl&quot;,&quot;sq&quot;,&quot;sv&quot;,&quot;tg&quot;,&quot;tr&quot;,&quot;tt&quot;,&quot;uk&quot;,_
&apos;						&quot;uz&quot;,&quot;vi&quot;,&quot;zh&quot;)
&apos;End Sub

&apos; ===========================================================================
&apos; 			Инициализация жанров в зависимости от выбранной Схемы
&apos; ===========================================================================

&apos; жанры схемы fb2.1 - Инициализация жанрами схемы FictionBook 2.1
Sub GenreFB21()
	Dim fb21GenresFileName As String
	If getOOoLocal() = &quot;ru&quot; OR getOOoLocal() = &quot;uk&quot; Then
		fb21GenresFileName = getRootStorage( &quot;DikBSD.OOoFBTools&quot; ) &amp; &quot;/fb2-schema/fb21_genres_ru.txt&quot;
	Else
		fb21GenresFileName = getRootStorage( &quot;DikBSD.OOoFBTools&quot; ) &amp; &quot;/fb2-schema/fb21_genres_en.txt&quot;
	End If
	
	makeGenreList( fb21GenresFileName )
	
End Sub

&apos; жанры схемы fb2 LibRusEc - Инициализация жанрами схемы FictionBook 2
Sub GenreFB2LibRusEc()
	
	Dim librusecGenresFileName As String
	If getOOoLocal() = &quot;ru&quot; OR getOOoLocal() = &quot;uk&quot; Then
		librusecGenresFileName = getRootStorage( &quot;DikBSD.OOoFBTools&quot; ) &amp; &quot;/fb2-librusec-schema/librusec_genres_ru.txt&quot;
	Else
		librusecGenresFileName = getRootStorage( &quot;DikBSD.OOoFBTools&quot; ) &amp; &quot;/fb2-librusec-schema/librusec_genres_en.txt&quot;
	End If
	
	makeGenreList( librusecGenresFileName )

End Sub	

&apos; жанры схемы fb2 Flibusta - Инициализация жанрами схемы FictionBook 2
Sub GenreFB2Flibusta()
	Dim FlibustaGenresFileName As String
	If getOOoLocal() = &quot;ru&quot; OR getOOoLocal() = &quot;uk&quot; Then
		FlibustaGenresFileName = getRootStorage( &quot;DikBSD.OOoFBTools&quot; ) &amp; &quot;/fb2-flibusta-schema/flibusta_genres_ru.txt&quot;
	Else
		FlibustaGenresFileName = getRootStorage( &quot;DikBSD.OOoFBTools&quot; ) &amp; &quot;/fb2-flibusta-schema/flibusta_genres_en.txt&quot;
	End If
	
	makeGenreList( FlibustaGenresFileName )

End Sub

&apos; жанры Объединенной схемы fb2 (LibRusEc &amp; Flibusta) - Инициализация жанрами схемы FictionBook 2
Sub GenreFB2Union()
	Dim UnionaGenresFileName As String
	If getOOoLocal() = &quot;ru&quot; OR getOOoLocal() = &quot;uk&quot; Then
		UnionaGenresFileName = getRootStorage( &quot;DikBSD.OOoFBTools&quot; ) &amp; &quot;/fb2-union-schema/union_genres_ru.txt&quot;
	Else
		UnionaGenresFileName = getRootStorage( &quot;DikBSD.OOoFBTools&quot; ) &amp; &quot;/fb2-union-schema/union_genres_en.txt&quot;
	End If
	
	makeGenreList( UnionaGenresFileName )

End Sub

&apos; жанры схемы fb2 (CoolLib &amp; LitVek) - Инициализация жанрами схемы FictionBook 2
Sub GenreFB2CoolLibLitVek()
	Dim GenresoolLibLitVekFileName As String
	If getOOoLocal() = &quot;ru&quot; OR getOOoLocal() = &quot;uk&quot; Then
		GenresoolLibLitVekFileName = getRootStorage( &quot;DikBSD.OOoFBTools&quot; ) &amp; &quot;/fb2-coollib_litvek-schema/coollib_litvek_genres_ru.txt&quot;
	Else
		GenresoolLibLitVekFileName = getRootStorage( &quot;DikBSD.OOoFBTools&quot; ) &amp; &quot;/fb2-coollib_litvek-schema/coollib_litvek_genres_en.txt&quot;
	End If
	
	makeGenreList( GenresoolLibLitVekFileName )

End Sub

&apos; формирования выпадающегно списка жанров в зависимости от схемы
Sub makeGenreList( ByRef FileName As String )
	Dim oSFA As Object	: oSFA	= createUnoService ( &quot;com.sun.star.ucb.SimpleFileAccess&quot; )
	Dim oFS As Object	: oFS	= oSFA.openFileRead ( ConvertToURL ( FileName ) )
	Dim oTIS As Object	: oTIS	= createUnoService ( &quot;com.sun.star.io.TextInputStream&quot; )
	oTIS.setInputStream (oFS)
	
	Dim GLN() As String
	AddNewItemToArray1( GLN(), &quot;&quot; )
	Dim Genre As String
	Do While ( NOT oTIS.isEOF() )
		Genre = oTIS.readLine()
		If Genre &lt;&gt; &quot;&quot; Then
			If Left( Genre, 1 ) &lt;&gt; &quot; &quot; Then
				&apos; Группа жанров
				AddNewItemToArray1( GLN(), UCase( Genre ) )
			Else
				&apos; Жанры
				AddNewItemToArray1( GLN(), Genre )
			End If
		End If
	Loop
	sGLN = GLN()
End Sub

&apos; ===================================================================================
&apos; 			локализация формы Редактора fb2 свойств и Жанров
&apos; ===================================================================================
Public sGLN() As String &apos;списки названий жанров
&apos; для хранения сообщений для формы Редактора fb2 свойств
Type tFB2PropertiesDlgData	
	&apos; основной диалог
	sFB2PropEditorDlgCreateDialog			As String &apos; Создание диалога
	sFB2PropEditorDlgTitle					As String &apos; Заголовок основной формы редактора fb2 свойств
	sFB2PropEditorDlgInit					As String &apos; Инициализация
	sFB2PropEditorDlgLoadFB2Properties		As String &apos; Загрузка fb2 свойств
	sFB2PropEditorDlgSaveFB2Properties		As String &apos; Сохранение fb2 свойств
	sFB2PropEditorDlgSelectGenre			As String &apos; Выберите, пожалуйста, Жанр Книги
	sFB2PropEditorDlgFillBookTitle			As String &apos; Заполните, пожалуйста, поля Названия Книги
	sFB2PropEditorDlgFillVersion			As String &apos; Заполните, пожалуйста, поле Версии Книги (например, 1.0)
	sFB2PropEditorDlgFillID					As String &apos; Заполните, пожалуйста, поле ID Книги произвольным образом, или нажмите на кнопку new ID
	sFB2PropEditorDlgFillBookAuthor			As String &apos; Пожалуйста, заполните хоть одно поле для Автора Книги
	sFB2PropEditorDlgFillBookTrans			As String &apos; Пожалуйста, заполните хоть одно поле для Переводчика Книги
	sFB2PropEditorDlgFillBookSequence		As String &apos; Пожалуйста, заполните поля названия и (или) номера для Серии Книги
	sFB2PropEditorDlgFillFB2Author			As String &apos; Пожалуйста, заполните хоть одно поле для Создателя FB2 Документа
	sFB2PropEditorDlgFillPaperBookSequence	As String &apos; Пожалуйста, заполните поля названия и (или) номера для Серии Бумажной Книги
	sFB2PropEditorDlgFillCustomInfo			As String &apos; Пожалуйста, заполните оба поля для Custom Info
	sFB2ExportFB2DeleteItem					As String &apos; Вы действительно хотите удалить:
	sFB2PropEditorDlgDateValue				As String &apos; Данные Даты написания книги (значение) введены неверно. Проверьте формат ввода данных (ГГГГ-ММ-ДД). Значение для Дня не должно превышать числа дней в конкретном месяце. Значение Месяца не должно быть от 01 до 12.
	&apos; диалог сохранения файла
	sFileDlgSaveAs					As String &apos; Сохранить как...
	&apos; Профили
	sFB2PropEditorDlgFillPublisher	As String &apos; Пожалуйста, заполните хоть одно поле для Изжательства
	sProfileFB2AuthorQuestionLoad	As String &apos; Вы действительно хотите загрузить профиль Автора fb2 документа? Все данные в полях Автора fb2 документа будут заменены на данные из профиля!
	sProfileFB2AuthorQuestionSave	As String &apos; Вы действительно хотите сохранить профиль Автора fb2 документа? Если вы раньше сохраняли свой профиль, то он будет перезаписан!
	sProfileAuthorOpen				As String &apos; Открыть профиль автора книги ...
	sProfileAuthorSave				As String &apos; Сохранить профиль для автора книги ...
	sProfilePublisherOpen			As String &apos; Открыть профиль Издательства ...
	sProfilePublisherSave			As String &apos; Сохранить профиль Издательства ...
	sProfileFB2AuthorOpen			As String &apos; Открыть профиль Автора fb2-файла ...
	sProfileFB2AuthorSave			As String &apos; Сохранить профиль Автора fb2-файла ...
End Type

&apos; для хранения сообщений для жанров
Type tGenreData
	sGenreGroup					As String &apos; Вы выбрали название группы жанров. Пожалуйста, выберите жанр книги!
	sSchemeFB21					As String &apos; схема fb2.1
	sSchemeFB22					As String &apos; схема fb2.2
	sSchemeFB2LibRusEc			As String &apos; схема fb2 LibRusEc
	sSchemeFB2Flibusta			As String &apos; схема fb2 Flibusta
	sSchemeFB2Union				As String &apos; Объединенная схема fb2 (LibRusEc &amp; Flibusta)
	sSchemeFB2CoolLibLitVek     As String &apos; схема fb2 (CoolLib &amp; LitVek)
	&apos; Избранные Жанры
	sGenreElite					As String &apos; Избранные Жанры
	sGenreEliteAdd				As String &apos; Добавление Жанра в Избранное
	sGenreEliteRemove			As String &apos; Удаление Жанра из Избранного
	sGenreEliteSorting			As String &apos; Сортировка списка Избранных Жанров
	sGenreEliteUp				As String &apos; Перемещение Жанра вверх
	sGenreEliteDown				As String &apos; Перемещение Жанра вниз
	sGenreEliteSelected			As String &apos; Выбраный жанр
	sGenreEliteSelectFromList	As String &apos; Пожалуйста, выберите Жанр из выпадающего списка!
	sGenreEliteSelectOther		As String &apos; Пожалуйста, выберите другой жанр книги!
	sGenreEliteIsExists			As String &apos; уже имеется в списке Избранных Жанров.
	sGenreEliteSelectForRemove	As String &apos; Пожалуйста, выберите Жанр из Избранного для удаления.
	sGenreEliteQuestionRemove	As String &apos; Вы действительно хотите удалить выбранный жанр из Избранного:
	sGenreEliteQuestionSort		As String &apos; Вы действительно хотите отсортировать список Избранных Жанров
	sGenreEliteSelectToUp		As String &apos; Пожалуйста, выберите Жанр из Избранного для перемещения его вверх!
	sGenreEliteSelectToDown		As String &apos; Пожалуйста, выберите Жанр из Избранного для перемещения его вниз!
End Type

Public sFB2PED	As tFB2PropertiesDlgData
Public sGD		As tGenreData

&apos; ********************************************************************************************************
&apos; инициализация основной формы Редактора fb2 свойств в зависимости от локали
Sub InitFB2PropertiesDlg()
	&apos; инициализация сообщений диалогов по работе с Жанрами в зависимости от локали
	InitGenreMessage()
	
	With oFB2PropertiesDlg.getModel
		&apos; Title Info
		.lbGenreElite.HelpText	= sGD.sGenreElite
	End With
	
	If getOOoLocal() = &quot;ru&quot; OR getOOoLocal() = &quot;uk&quot; Then
		With oFB2PropertiesDlg.getModel
			.optbtnTitleInfo.Label		= &quot;Book (Title Info)&quot;
			.optbtnDocumentInfo.Label	= &quot;FB2 (Document Info)&quot;
			.optbtnPublishInfo.Label	= &quot;Paper Book (Publish Info)&quot;
			.optbtnCustomInfo.Label		= &quot;Custom Info&quot;
			
			&apos; Title Info
			.fcTI.Label					= &quot; Книга (Title Info) &quot;
			.lblGenre.Label				= &quot;Жанр:&quot;
			.cmbtnFavorites.Label		= &quot;Избранное ...&quot;
			.cmbtnFavorites.HelpText	= &quot;Работа со списком Избранных Жанров...&quot;
			.lblMatch.Label				= &quot;Соответствие:&quot;
			
			.lblLang.Label			= &quot;Язык:&quot;
			.lblLangOriginal.Label	= &quot;Оригинал:&quot;
			
			.fcTIAuthors.Label			= &quot; Авторы &quot;
			.lblTIAuthorsFirst.Label	= &quot;Имя:&quot;
			.lblTIAuthorsMiddle.Label	= &quot;Отчество:&quot;
			.lblTIAuthorsLast.Label		= &quot;Фамилия:&quot;
			.lblTIAuthorsNick.Label		= &quot;Ник:&quot;
			.lblTIAuthorsEmail.Label	= &quot;Email:&quot;
			.lblTIAuthorsWebcite.Label	= &quot;Сайт:&quot;
			
			.lblTIName.Label		= &quot;Название:&quot;
			.lblTIKeywords.Label	= &quot;Ключевые слова:&quot;
			.lblTIDate.Label		= &quot;Дата написания книги:&quot;
			.lblTIDateText.Label	= &quot;Текст (Формат: ГГГГ):&quot;
			.lblTIDateValue.Label	= &quot;Значение (Формат: ГГГГ-ММ-ДД):&quot;
			
			.fcTITranslators.Label			= &quot; Переводчики &quot;
			.lblTITranslatorsFirst.Label	= &quot;Имя:&quot;
			.lblTITranslatorsMiddle.Label	= &quot;Отчество:&quot;
			.lblTITranslatorsLast.Label		= &quot;Фамилия:&quot;
			.lblTITranslatorsNick.Label		= &quot;Ник:&quot;
			.lblTITranslatorsEmail.Label	= &quot;Email:&quot;
			.lblTITranslatorsWebcite.Label	= &quot;Сайт:&quot;
			
			
			.fcSequencies.Label				= &quot; Серии &quot;
			.lblTISequence.Label			= &quot;Название:&quot;
			.lblTISequenceNumber.Label		= &quot;Номер:&quot;
			
			&apos; Document Info
			.fcDI.Label				= &quot; FB2 Документ (Document Info) &quot;
			.lblDIVersion.Label		= &quot;Версия:&quot;
			.lblDIID.Label			= &quot;ID:&quot;
			.cmdbtnNewID.Label		= &quot;Новый ID&quot;
			.cmdbtnNewID.HelpText	= &quot;Сгенерировать уникальный ID Книги заново&quot;
			.fcDIAuthors.Label			= &quot; Авторы fb2&quot;
			.lblDIAuthorsFirst.Label	= &quot;Имя:&quot;
			.lblDIAuthorsMiddle.Label	= &quot;Отчество:&quot;
			.lblDIAuthorsLast.Label		= &quot;Фамилия:&quot;
			.lblDIAuthorsNick.Label		= &quot;Ник:&quot;
			.lblDIAuthorsEmail.Label	= &quot;Email:&quot;
			.lblDIAuthorsWebcite.Label	= &quot;Сайт:&quot;
			
			.lblPrograms.Label		= &quot;Программа:&quot;
			.lblSourceOCR.Label		= &quot;Источник OCR:&quot;
			.lblSourceURLs.Label	= &quot;Источник URLs:&quot;
			.LoadProfileCommandButton.Label		= &quot;Загрузить профиль&quot;
			.SaveProfileCommandButton.Label		= &quot;Сохранить профиль&quot;
			.LoadProfileCommandButton.HelpText	= &quot;Загрузить профиль Автора fb2 документа, Source OCR и Истории создания fb2 документа&quot;
			.SaveProfileCommandButton.HelpText	= &quot;Сохранить профиль Автора fb2 документа, Source OCR и Истории создания fb2 документа&quot;
			.LoadProfileFB2Author.Label			= &quot;Загрузить профиль как...&quot;
			.SaveProfileFB2Author.Label			= &quot;Сохранить профиль как...&quot;
			
			&apos; Publish Info
			.fcPI.Label					= &quot; Бумажная Книга (Publish Info) &quot;
			.lblPIName.Label			= &quot;Название:&quot;
			.lblPIPublisher.Label		= &quot;Издатель:&quot;
			.lblPICity.Label			= &quot;Город:&quot;
			.fcPubSequencies.Label		= &quot; Серии &quot;
			.lblPISequence.Label		= &quot;Название:&quot;
			.lblPISequenceNumber.Label	= &quot;Номер:&quot;
			.lblPIISBN.Label			= &quot;ISBN:&quot;
			.lblPIYear.Label			= &quot;Год:&quot;
			.lblPIUDC.Label				= &quot;УДК:&quot;
			.lblPIBBC.Label				= &quot;ББК:&quot;
			.lblPIAuthorSign.Label		= &quot;Авторский знак:&quot;
			
			.cmdLoadPaperBook.Label		= &quot;Загрузить профиль...&quot;
			.cmdLoadPaperBook.HelpText	= &quot;Загрузить данные об Издательстве из отдельного профиля...&quot;
			.cmdSavePaperBook.Label		= &quot;Сохранить профиль...&quot;
			.cmdSavePaperBook.HelpText	= &quot;Сохранить данные об Издательстве в отдельный профиль...&quot;
			
			&apos; Custom Info
			.fcCI.Label			= &quot; Custom Info &quot;
			.lblCIType.Label	= &quot;Тип:&quot;
			.lblCIValue.Label	= &quot;Значение:&quot;
			
			&apos; fb2 file History
			.fcHistory.Label = &quot; История fb2 файла &quot;
			
			&apos; any
			.lblEncoding.Label		= &quot;Кодировка:&quot;
			.fcGenresType.Label		= &quot;Жанры:&quot;
			.obtnFB21.HelpText				= &quot;Переключение на жанры схемы FictionBook 2.1&quot;
			.obtnFB2LibRusEc.HelpText		= &quot;Переключение на жанры схемы FictionBook 2 Либрусек&quot;
			.obtnFB2Flibusta.HelpText		= &quot;Переключение на жанры схемы FictionBook 2 Флибуста&quot;
			.obtnFB2Union.HelpText			= &quot;Переключение на жанры объединенной схемы FictionBook 2 (Либрусек и Флибуста)&quot;
			.obtnFB2CoolLibLitVek.HelpText	= &quot;Переключение на жанры FictionBook 2 (CoolLib и LitVek)&quot;
			.SetPropertiesInDocCmdBtn.Label	= &quot;Сохранить FB2 свойства&quot;
			.CancelButton.Label		= &quot;Отмена&quot;
		End With
	Else
		With oFB2PropertiesDlg.getModel
			.optbtnTitleInfo.Label		= &quot;Book (Title Info)&quot;
			.optbtnDocumentInfo.Label	= &quot;FB2 (Document Info)&quot;
			.optbtnPublishInfo.Label	= &quot;Paper Book (Publish Info)&quot;
			.optbtnCustomInfo.Label		= &quot;Custom Info&quot;
			
			&apos; Title Info
			.fcTI.Label					= &quot; Book (Title Info) &quot;
			.lblGenre.Label				= &quot;Genre:&quot;
			.cmbtnFavorites.Label		= &quot;Favorites ...&quot;
			.cmbtnFavorites.HelpText	= &quot;Work with the Elite Genres List...&quot;
			.lblMatch.Label				= &quot;Match:&quot;
			
			.lblLang.Label				= &quot;Lang:&quot;
			.lblLangOriginal.Label		= &quot;Original:&quot;
			
			.fcTIAuthors.Label			= &quot; Authors &quot;
			.lblTIAuthorsFirst.Label	= &quot;First:&quot;
			.lblTIAuthorsMiddle.Label	= &quot;Middle:&quot;
			.lblTIAuthorsLast.Label		= &quot;Last:&quot;
			.lblTIAuthorsNick.Label		= &quot;Nick:&quot;
			.lblTIAuthorsEmail.Label	= &quot;Email:&quot;
			.lblTIAuthorsWebcite.Label	= &quot;Webcite:&quot;
			
			.lblTIName.Label		= &quot;Title:&quot;
			.lblTIKeywords.Label	= &quot;Keywords:&quot;
			.lblTIDate.Label		= &quot;Date of Book writing:&quot;
			.lblTIDateText.Label	= &quot;Text (Format: YYYY):&quot;
			.lblTIDateValue.Label	= &quot;Value (Format: YYYY-MM-DD):&quot;
			
			.fcTITranslators.Label			= &quot; Translators &quot;
			.lblTITranslatorsFirst.Label	= &quot;First:&quot;
			.lblTITranslatorsMiddle.Label	= &quot;Middle:&quot;
			.lblTITranslatorsLast.Label		= &quot;Last:&quot;
			.lblTITranslatorsNick.Label		= &quot;Nick:&quot;
			.lblTITranslatorsEmail.Label	= &quot;Email:&quot;
			.lblTITranslatorsWebcite.Label	= &quot;Webcite:&quot;
			
			.fcSequencies.Label				= &quot; Sequencies &quot;
			.lblTISequence.Label			= &quot;Name:&quot;
			.lblTISequenceNumber.Label		= &quot;Number:&quot;
			
			&apos; Document Info
			.fcDI.Label				= &quot; FB2 Document (Document Info) &quot;
			.lblDIVersion.Label 	= &quot;Version:&quot;
			.lblDIID.Label			= &quot;ID:&quot;
			.cmdbtnNewID.Label		= &quot;New ID&quot;
			.cmdbtnNewID.HelpText	= &quot;Generate new ID again&quot;
			.fcDIAuthors.Label			= &quot; FB2 Authors &quot;
			.lblDIAuthorsFirst.Label	= &quot;First:&quot;
			.lblDIAuthorsMiddle.Label	= &quot;Middle:&quot;
			.lblDIAuthorsLast.Label		= &quot;Last:&quot;
			.lblDIAuthorsNick.Label		= &quot;Nick:&quot;
			.lblDIAuthorsEmail.Label	= &quot;Email:&quot;
			.lblDIAuthorsWebcite.Label	= &quot;Webcite:&quot;
			
			.lblPrograms.Label		= &quot;Programs used:&quot;
			.lblSourceOCR.Label		= &quot;Source OCR:&quot;
			.lblSourceURLs.Label	= &quot;Source URLs:&quot;
			.LoadProfileFB2Author.Label			= &quot;Load default Profile&quot;
			.SaveProfileFB2Author.Label			= &quot;Save default Profile&quot;
			.LoadProfileCommandButton.HelpText	= &quot;Load the Profile of Author fb2 File, Source OCR and Histories of creation fb2 file&quot;
			.SaveProfileCommandButton.HelpText	= &quot;Save the Profile of Author fb2 File, Source OCR and Histories of creation fb2 file&quot;
			.LoadProfileFB2Author.Label			= &quot;Load Profile As...&quot;
			.SaveProfileFB2Author.Label			= &quot;Save Profile As...&quot;
			
			&apos; Publish Info
			.fcPI.Label					= &quot; Paper Book (Publish Info) &quot;
			.lblPIName.Label			= &quot;Title:&quot;
			.lblPIPublisher.Label		= &quot;Publisher:&quot;
			.lblPICity.Label			= &quot;City:&quot;
			.fcPubSequencies.Label		= &quot; Sequencies &quot;
			.lblPISequence.Label		= &quot;Name:&quot;
			.lblPISequenceNumber.Label	= &quot;Number:&quot;
			.lblPIISBN.Label			= &quot;ISBN:&quot;
			.lblPIYear.Label			= &quot;Year:&quot;
			.lblPIUDC.Label				= &quot;UDC:&quot;
			.lblPIBBC.Label				= &quot;BBC:&quot;
			.lblPIAuthorSign.Label		= &quot;Author Sign:&quot;
			
			.cmdLoadPaperBook.Label		= &quot;Load Profile...&quot;
			.cmdLoadPaperBook.HelpText	= &quot;Load the Data of Publisher from Profile..&quot;
			.cmdSavePaperBook.Label		= &quot;Save Profile...&quot;
			.cmdSavePaperBook.HelpText	= &quot;Save the Data of Publisher in Profile..&quot;
			
			&apos; Custom Info
			.fcCI.Label			= &quot; Custom Info &quot;
			.lblCIType.Label	= &quot;Type:&quot;
			.lblCIValue.Label	= &quot;Value:&quot;
			
			&apos; fb2 file History
			.fcHistory.Label = &quot; History of fb2 file &quot;
			
			&apos; any
			.lblEncoding.Label		= &quot;Encoding:&quot;
			.fcGenresType.Label		= &quot;Genres:&quot;
			.obtnFB21.HelpText		= &quot;Switching on Genres of Scheme FictionBook 2.1&quot;
			.obtnFB2LibRusEc.HelpText		= &quot;Switching on Genres of Scheme FictionBook 2 LibRusEc&quot;
			.obtnFB2Flibusta.HelpText		= &quot;Switching on Genres of Scheme FictionBook 2 Flibusta&quot;
			.obtnFB2Union.HelpText			= &quot;Switching on Genres of Union Scheme FictionBook 2 (LibRusEc &amp; Flibusta)&quot;
			.obtnFB2CoolLibLitVek.HelpText	= &quot;Switching on Genres of Scheme FictionBook 2 (CoolLib и LitVek)&quot;
			.SetPropertiesInDocCmdBtn.Label	= &quot;Save fb2 Properties&quot;
			.CancelButton.Label		= &quot;Cancel&quot;
		End With
	End If
End Sub

&apos; инициализация сообщений основной формы конвертера в зависимости от локали
Sub InitFB2PropertiesDlgMessage()
	If getOOoLocal() = &quot;ru&quot; OR getOOoLocal() = &quot;uk&quot; Then
		With sFB2PED
			&apos; основной диалог
			.sFB2PropEditorDlgTitle			= &quot;Редактор fb2 свойств&quot;
			.sFB2PropEditorDlgCreateDialog	= &quot;Создание диалога&quot;
			.sFB2PropEditorDlgInit			= &quot;Инициализация&quot;
			.sFB2PropEditorDlgLoadFB2Properties = &quot;Загрузка fb2 свойств&quot;
			.sFB2PropEditorDlgSaveFB2Properties	= &quot;Сохранение fb2 свойств&quot;
			.sFB2PropEditorDlgSelectGenre	= &quot;Выберите, пожалуйста, Жанр Книги.&quot;
			.sFB2PropEditorDlgFillBookTitle	= &quot;Заполните, пожалуйста, поля Названия Книги.&quot;
			.sFB2PropEditorDlgFillVersion	= &quot;Заполните, пожалуйста, поле Версии Книги (например, 1.0)&quot;
			.sFB2PropEditorDlgFillID		= &quot;Заполните, пожалуйста, поле ID Книги произвольным образом,&quot; &amp; chr(10) &amp; &quot;или нажмите на кнопку new ID.&quot;
			.sFB2PropEditorDlgFillBookAuthor = &quot;Пожалуйста, заполните хоть одно поле для Автора Книги.&quot;
			.sFB2PropEditorDlgFillBookTrans  = &quot;Пожалуйста, заполните хоть одно поле для Переводчика Книги.&quot;
			.sFB2PropEditorDlgFillBookSequence		= &quot;Пожалуйста, заполните поля названия и (или) номера для Серии Книги.&quot;
			.sFB2PropEditorDlgFillFB2Author			= &quot;Пожалуйста, заполните хоть одно поле для Создателя FB2 Документа.&quot;
			.sFB2PropEditorDlgFillPaperBookSequence	= &quot;Пожалуйста, заполните поля названия и (или) номера для Серии Бумажной Книги.&quot;
			.sFB2PropEditorDlgFillCustomInfo		= &quot;Пожалуйста, заполните оба поля для Custom Info.&quot;
			.sFB2ExportFB2DeleteItem				= &quot;Вы действительно хотите удалить:&quot;
			.sFB2PropEditorDlgDateValue	= &quot;Данные Даты написания книги (значение) введены неверно.&quot; &amp; chr(10) &amp; chr(10) &amp; _
										&quot;Проверьте формат ввода данных (ДД.ММ.ГГГГ).&quot; &amp; chr(10) &amp; _
										&quot;Значение для Дня не должно превышать числа дней в конкретном месяце.&quot; &amp; chr(10) &amp; _
										&quot;Значение Месяца не должно быть от 01 до 12.&quot; &amp; chr(10) &amp; chr(10) &amp; _
										&quot;Значение Дня задается 2-мя цифрами.&quot; &amp; chr(10) &amp; _
										&quot;Значение Месяца задается 2-мя цифрами.&quot; &amp; chr(10) &amp; _
										&quot;Значение Года задается 4-мя цифрами.&quot;
			&apos; диалог сохранения файла
			.sFileDlgSaveAs					= &quot;Сохранить как...&quot;
			&apos; Профили
			.sFB2PropEditorDlgFillPublisher		= &quot;Пожалуйста, заполните хоть одно поле для Издательства.&quot;
			.sProfileFB2AuthorQuestionLoad		= &quot;Вы действительно хотите загрузить профиль Автора fb2 документа?&quot; &amp; chr(10) &amp; _
													&quot;Все данные в полях Автора fb2 документа будут заменены на данные из профиля!&quot;
			.sProfileFB2AuthorQuestionSave		= &quot;Вы действительно хотите сохранить профиль Автора fb2 документа?&quot; &amp; chr(10) &amp; _
													&quot;Если вы раньше сохраняли свой профиль, то он будет перезаписан!&quot;
			.sProfileAuthorOpen					= &quot;Открыть профиль автора книги ...&quot;
			.sProfileAuthorSave					= &quot;Сохранить профиль для автора книги ...&quot;
			.sProfilePublisherOpen				= &quot;Открыть профиль Издательства ...&quot;
			.sProfilePublisherSave				= &quot;Сохранить профиль Издательства ...&quot;
			.sProfileFB2AuthorOpen				= &quot;Открыть профиль Автора fb2-файла ...&quot;
			.sProfileFB2AuthorSave				= &quot;Сохранить профиль Автора fb2-файла ...&quot;
		End With
	Else
		With sFB2PED
			&apos; main Dialog
			.sFB2PropEditorDlgTitle			= &quot;FB2 Properties Editor&quot;
			.sFB2PropEditorDlgCreateDialog	= &quot;Creating the Dialog&quot;
			.sFB2PropEditorDlgInit			= &quot;Initialization&quot;
			.sFB2PropEditorDlgLoadFB2Properties = &quot;FB2 Properties Loading&quot;
			.sFB2PropEditorDlgSaveFB2Properties	= &quot;FB2 Properties2 Saving&quot;
			.sFB2PropEditorDlgSelectGenre	= &quot;Please, select the Genre of the Book.&quot;
			.sFB2PropEditorDlgFillBookTitle	= &quot;Please, fiil the Field of the Book Title.&quot;
			.sFB2PropEditorDlgFillVersion	= &quot;Please, fiil the Field of the Book Version (for example, 1.0)&quot;
			.sFB2PropEditorDlgFillID		= &quot;Please, fiil at will the Field of the Book Version,&quot; &amp; chr(10) &amp; &quot;or click on the Button new ID.&quot;
			.sFB2PropEditorDlgFillBookAuthor = &quot;Please, fiil though one Field for Book Author.&quot;
			.sFB2PropEditorDlgFillBookTrans	= &quot;Please, fiil though one Field for Book Translator.&quot;
			.sFB2PropEditorDlgFillBookSequence		= &quot;Please, fiil the Fields Name And (Or) Number of the Book Sequence.&quot;
			.sFB2PropEditorDlgFillFB2Author			= &quot;Please, fiil though one Field for FB2 Document Author.&quot;
			.sFB2PropEditorDlgFillPaperBookSequence	= &quot;Please, fiil the Fields Name And (Or) Number of the Paper Book Sequence.&quot;
			.sFB2PropEditorDlgFillCustomInfo		= &quot;Please, fiil all Fields for Custom Info.&quot;
			.sFB2ExportFB2DeleteItem				= &quot;Are you sure you want to remove:&quot;
			.sFB2PropEditorDlgDateValue	= &quot;Date (value) of Book writing entered incorrectly.&quot; &amp; chr(10) &amp; chr(10) &amp; _
										&quot;Check the format of the input Date (DD.MM.YYYY).&quot; &amp; chr(10) &amp; _
										&quot;Value for Day should not exceed the number of days in a particular Month.&quot; &amp; chr(10) &amp;_
										&quot;Month value should not be from 01 to 12.&quot; &amp; chr(10) &amp; chr(10) &amp;_
										&quot;Day value is given by 2 digits.&quot; &amp; chr(10) &amp; _
										&quot;Month value is given by 2 digits.&quot; &amp; chr(10) &amp; _
										&quot;Year value is given by 4 digits.&quot;
			&apos; Save As Dialog
			.sFileDlgSaveAs						= &quot;Save As...&quot;
			&apos; Profile
			.sFB2PropEditorDlgFillPublisher		= &quot;Please, fiil though one Field for Publisher.&quot;
			.sProfileFB2AuthorQuestionLoad		= &quot;Do You want to load the FB2 File Author?&quot; &amp; chr(10) &amp; _
													&quot;All Data in FB2 Author Fields to do replaced on Data from the Profile!&quot;
			.sProfileFB2AuthorQuestionSave		= &quot;Do You want to save the FB2 File Author?&quot; &amp; chr(10) &amp; _
													&quot;If Yuo before save the Profile, then it to do rewrite!&quot;
			.sProfileAuthorOpen					= &quot;Open the Book Author Profile ...&quot;
			.sProfileAuthorSave					= &quot;Save the Book Author Profile ...&quot;
			.sProfilePublisherOpen				= &quot;Open the Publisher Profile ...&quot;
			.sProfilePublisherSave				= &quot;Save the Publisher Profile ...&quot;
			.sProfileFB2AuthorOpen				= &quot;Open the fb2 Author Profile ...&quot;
			.sProfileFB2AuthorSave				= &quot;Save the fb2 Author Profile ...&quot;
		End With
	End If
End Sub

&apos; инициализация сообщений диалогов по работе с Жанрами в зависимости от локали
Sub InitGenreMessage()
	If getOOoLocal() = &quot;ru&quot; OR getOOoLocal() = &quot;uk&quot; Then
		With sGD
			.sGenreGroup				= &quot;Вы выбрали название группы жанров.&quot; &amp; chr(10) &amp; &quot;Пожалуйста, выберите жанр книги!&quot;
			.sSchemeFB21				= &quot;схема fb2.1&quot;
			.sSchemeFB22				= &quot;схема fb2.2&quot;
			.sSchemeFB2LibRusEc			= &quot;схема fb2 Либрусек&quot;
			.sSchemeFB2Flibusta			= &quot;схема fb2 Флибуста&quot;
			.sSchemeFB2Union			= &quot;Объединенная схема fb2&quot;
			.sSchemeFB2CoolLibLitVek    = &quot;Схема fb2 CoolLib &amp; LitVek&quot;
			&apos; Избранные Жанры
			.sGenreElite				= &quot;Избранные Жанры&quot;
			.sGenreEliteAdd				= &quot;Добавление Жанра в Избранное&quot;
			.sGenreEliteRemove			= &quot;Удаление Жанра из Избранного&quot;
			.sGenreEliteSorting			= &quot;Сортировка списка Избранных Жанров&quot;
			.sGenreEliteUp				= &quot;Перемещение Жанра вверх&quot;
			.sGenreEliteDown			= &quot;Перемещение Жанра вниз&quot;
			.sGenreEliteSelected		= &quot;Выбраный жанр&quot;
			.sGenreEliteSelectFromList	= &quot;Пожалуйста, выберите Жанр из выпадающего списка!&quot;
			.sGenreEliteSelectOther		= &quot;Пожалуйста, выберите другой жанр книги!&quot;
			.sGenreEliteIsExists		= &quot;уже имеется в списке Избранных Жанров.&quot;
			.sGenreEliteSelectForRemove	= &quot;Пожалуйста, выберите Жанр из Избранного для удаления.&quot;
			.sGenreEliteQuestionRemove	= &quot;Вы действительно хотите удалить выбранный жанр из Избранного:&quot;
			.sGenreEliteQuestionSort	= &quot;Вы действительно хотите отсортировать список Избранных Жанров&quot;
			.sGenreEliteSelectToUp		= &quot;Пожалуйста, выберите Жанр из Избранного для перемещения его вверх!&quot;
			.sGenreEliteSelectToDown	= &quot;Пожалуйста, выберите Жанр из Избранного для перемещения его вниз!&quot;
		End With
	Else
		With sGD
			.sGenreGroup				= &quot;You choose Name of the Genres Group.&quot; &amp; chr(10) &amp; &quot;Please, select the Genre of the Book!&quot;
			.sSchemeFB21				= &quot;fb2.1 Scheme&quot;
			.sSchemeFB22				= &quot;fb2.2 Scheme&quot;
			.sSchemeFB2LibRusEc			= &quot;fb2 LibRuSec Scheme&quot;
			.sSchemeFB2Flibusta			= &quot;fb2 Flibusta Scheme&quot;
			.sSchemeFB2Union			= &quot;fb2 Union Scheme&quot;
			.sSchemeFB2CoolLibLitVek    = &quot;fb2 Scheme CoolLib &amp; LitVek&quot;
			&apos; Elite Genres
			.sGenreElite				= &quot;The Elite Genres&quot;
			.sGenreEliteAdd				= &quot;Add the Genre to the Elite Genres List&quot;
			.sGenreEliteRemove			= &quot;Remove the Genre from the Elite Genres List&quot;
			.sGenreEliteSorting			= &quot;Sorting of the Elite Genres List&quot;
			.sGenreEliteUp				= &quot;Genre Movement Up&quot;
			.sGenreEliteDown			= &quot;Genre Movement Down&quot;
			.sGenreEliteSelected		= &quot;Selected Genre&quot;
			.sGenreEliteSelectFromList	= &quot;Please, select the Genre from out-of-order Box!&quot;
			.sGenreEliteSelectOther		= &quot;Please, select the Other Book Genre!&quot;
			.sGenreEliteIsExists		= &quot;is exists in the Elite Genres List.&quot;
			.sGenreEliteSelectForRemove	= &quot;Please, select the Genre from Elite Genres List for Remove.&quot;
			.sGenreEliteQuestionRemove	= &quot;Do You want Remove the selected Genre from Elite Genres List:&quot;
			.sGenreEliteQuestionSort	= &quot;Do You want to Sort the Elite Genres List&quot;
			.sGenreEliteSelectToUp		= &quot;Please, choose the Genre from Elite Genres List for its moving upwards!&quot;
			.sGenreEliteSelectToDown	= &quot;Please, choose the Genre from Elite Genres List for its moving downwards!&quot;
		End With
	End If
End Sub

</script:module>