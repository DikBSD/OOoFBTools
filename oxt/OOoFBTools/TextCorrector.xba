<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="TextCorrector" script:language="StarBasic">REM  *****  BASIC  *****
Option Explicit

Private oDoc As Object
Private oReplace As Object

Private sCorrectorSettingsFilename As String
Private oTextCorrectorDlg As Object
Private bCorrectorExecute As Boolean

Private bDelSpace As Boolean

Private bDelEmptyPar As Boolean
Private bBreakLine As Boolean
Private bDel As Boolean
Private bPar As Boolean
Private bSpace As Boolean

Private b2HyphenToDash As Boolean
Private bHyphenToDash As Boolean
Private bDefis As Boolean
Private bKav As Boolean
Private bPoints As Boolean
Private bC As Boolean
Private bImages As Boolean
Private sAnchor As String

Private sAnchorsList() As String &apos; виды привязки картинки
Private oCB As Object &apos; Для работы с ListBox`ами
		
Sub TextCorrector
	DialogLibraries.LoadLibrary(&quot;OOoFBTools&quot;)
	oTextCorrectorDlg = CreateUnoDialog(DialogLibraries.OOoFBTools.TextCorrectorDlg)
	
	&apos; файл пользовательских стилей
	sCorrectorSettingsFilename = pmxCurDir() &amp; &quot;/OOoFBTools/corrector.txt&quot;
	
	
	sAnchorsList() = Array(&quot;К абзацу&quot;, &quot;К символу&quot;, &quot;Как символ&quot;)
	With oTextCorrectorDlg.Model
		.Title = &quot;Корректор текста документа&quot;
		.Height = 150
		.Width = 318
		.cbAnchor.StringItemList = sAnchorsList()
	End With
	
	&apos; АЛГОРИТМ - Очень ВАЖНО!!!
	&apos; т.к. Корректор развивается, и в диалоге Корректора Текста появляются НОВЫЕ опции (контролы),
	&apos; а у пользователей УЖЕ СОХРАНЕН файл corrector.txt, где данных для этих новых опций нет,
	&apos; то при работе Корректора может произойти либо ошибка, либо коректура произведется не так, как ожидается,
	&apos; а при запуске формы Корректора новые опции будут не такими, как ожидал User,
	&apos; Поэтому, сначала устанавливаем значения переменных по умолчанию (SetCorrectorSettingDefault),
	&apos; а потом - считываем из файла значения опций в переменные (ReadCorrectorSettings).
	&apos; Для тех новых опций, которых еще нет в файле corrector.txt значения будут по умолчанию,
	&apos; а для остальных - считаны из файла.
	&apos; Когда же User запустит форму и пересохранит ВСЕ настройки Корректора,
	&apos; то вне переменные и контролы будут иметь значения из файла!
		
	&apos; Задаем настройки очистки текста в контролы по умолчанию
	SetCorrectorSettingDefault
	&apos; только теперь считывание настройки из файла
	ReadCorrectorSettings
	
	oTextCorrectorDlg.execute()
	
	&apos; центрирование на экране
&apos;	ToScreenCenter(oTextCorrectorDlg)
	
	TextCorrector = bCorrectorExecute
End Sub

Function ReadCorrectorSettings As Boolean
	&apos; Читаем настройки очистки текста и задаем значения контролам формы
	If FileExists(sCorrectorSettingsFilename) Then
		Dim iFileNo As Integer, sCurrentLine As String
		&apos; Установление свободного файлового манипулятора
		iFileNo = Freefile
		&apos; Открытие файла (в режиме на чтение)
		Open sCorrectorSettingsFilename For Input As #iFileNo
		&apos; Проверка, был ли достигнут конец файла
		Do While NOT eof(iFileNo)
			&apos; Чтение строки
			Line Input #iFileNo, sCurrentLine
			If sCurrentLine &lt;&gt; &quot;&quot; Then
				&apos; Устанавливаем данные стилей
				SetCorrectorSettings(sCurrentLine)
			End If
		Loop
		&apos; Закрытие файла
		Close #iFileNo
		ReadCorrectorSettings = True
	Else
		ReadCorrectorSettings = False
	End If
End Function

Function SaveCorrectorSettings
	&apos; записываем настройки очистки текста
	Dim iFileNo As Integer, sCurrentLine As String
	iFileNo = Freefile &apos; Установление свободного файлового манипулятора
	Open sCorrectorSettingsFilename For Output As #iFileNo &apos; Открытие файла (в режиме на запись)
	
	Dim ctrl As Object, i As Integer
	ctrl = oTextCorrectorDlg.getControls()
	For i=LBound(ctrl) To UBound(ctrl)
		If ctrl(i).getImplementationName() = &quot;stardiv.Toolkit.UnoCheckBoxControl&quot; Then
			Print #iFileNo, ctrl(i).Model.Name &amp; &quot;=&quot; &amp; ctrl(i).Model.State
		ElseIf ctrl(i).getImplementationName() = &quot;stardiv.Toolkit.UnoRadioButtonControl&quot; Then
			Print #iFileNo, ctrl(i).Model.Name &amp; &quot;=&quot; &amp; ctrl(i).Model.State
		ElseIf ctrl(i).getImplementationName() = &quot;stardiv.Toolkit.UnoComboBoxControl&quot; Then
			Print #iFileNo, ctrl(i).Model.Name &amp; &quot;=&quot; &amp; ctrl(i).Model.Text
		ElseIf ctrl(i).getImplementationName() = &quot;stardiv.Toolkit.UnoListBoxControl&quot; Then
			Print #iFileNo, ctrl(i).Model.Name &amp; &quot;=&quot; &amp; ctrl(i).SelectedItem
		End If
	Next i
	
	Close #iFileNo &apos; Закрытие файла
	&apos; заполняем переменные
	bDelSpace = oTextCorrectorDlg.GetControl(&quot;cboxDelSpace&quot;).State
	bDelEmptyPar = oTextCorrectorDlg.GetControl(&quot;cboxDelEmptyPar&quot;).State
	bBreakLine = oTextCorrectorDlg.GetControl(&quot;cboxBreakLine&quot;).State
	bDel = oTextCorrectorDlg.GetControl(&quot;obtnDel&quot;).State
	bPar = oTextCorrectorDlg.GetControl(&quot;obtnPar&quot;).State
	bSpace = oTextCorrectorDlg.GetControl(&quot;obtnSpace&quot;).State
	b2HyphenToDash = oTextCorrectorDlg.GetControl(&quot;cbox2HyphenToDash&quot;).State
	bHyphenToDash = oTextCorrectorDlg.GetControl(&quot;cboxHyphenToDash&quot;).State
	bDefis = oTextCorrectorDlg.GetControl(&quot;cboxDefis&quot;).State
	bKav = oTextCorrectorDlg.GetControl(&quot;cboxKav&quot;).State
	bPoints = oTextCorrectorDlg.GetControl(&quot;cboxPoints&quot;).State
	bC = oTextCorrectorDlg.GetControl(&quot;cboxC&quot;).State
	bImages = oTextCorrectorDlg.GetControl(&quot;cboxImages&quot;).State
	oCB = oTextCorrectorDlg.getControl(&quot;cbAnchor&quot;)
	sAnchor = oCB.SelectedItem
	
End Function

Function SetCorrectorSettings(sCurrentLine)
	On Error Goto ErrorHandler
	Dim sCorrectorSettings() As String
	sCorrectorSettings = Split(sCurrentLine, &quot;=&quot;)
	
	If oTextCorrectorDlg.GetControl(sCorrectorSettings(0)).getImplementationName() = &quot;stardiv.Toolkit.UnoCheckBoxControl&quot; Then
		oTextCorrectorDlg.GetControl(sCorrectorSettings(0)).State = sCorrectorSettings(1)
	ElseIf oTextCorrectorDlg.GetControl(sCorrectorSettings(0)).getImplementationName() = &quot;stardiv.Toolkit.UnoRadioButtonControl&quot; Then
		oTextCorrectorDlg.GetControl(sCorrectorSettings(0)).State = sCorrectorSettings(1)
	ElseIf oTextCorrectorDlg.GetControl(sCorrectorSettings(0)).getImplementationName() = &quot;stardiv.Toolkit.UnoComboBoxControl&quot; Then
		oTextCorrectorDlg.GetControl(sCorrectorSettings(0)).Text = sCorrectorSettings(1)
	ElseIf oTextCorrectorDlg.GetControl(sCorrectorSettings(0)).getImplementationName() = &quot;stardiv.Toolkit.UnoListBoxControl&quot; Then
		oCB = oTextCorrectorDlg.getControl(sCorrectorSettings(0))
		Select Case sCorrectorSettings(1)
			Case &quot;К абзацу&quot;
				oCB.SelectItemPos(0, True)
			Case &quot;К символу&quot;
				oCB.SelectItemPos(1, True)
			Case &quot;Как символ&quot;
				oCB.SelectItemPos(2, True)
		End Select
	End If

	cboxImagesEnabled
	cboxBreakLineEnabled
	Exit Function
	
	ErrorHandler: &apos; идем дальше
End Function

Function SetCorrectorSettingDefault
	&apos; Установка настроек по умолчанию в контролы
	&apos; Работа с пробелами и табуляциями
	oTextCorrectorDlg.GetControl(&quot;cboxDelSpace&quot;).State = 1
	&apos; Работа с абзацами и разрывами
	oTextCorrectorDlg.GetControl(&quot;cboxDelEmptyPar&quot;).State = 1
	oTextCorrectorDlg.GetControl(&quot;cboxBreakLine&quot;).State = 1
	oTextCorrectorDlg.GetControl(&quot;obtnDel&quot;).State = 0
	oTextCorrectorDlg.GetControl(&quot;obtnPar&quot;).State = 1
	oTextCorrectorDlg.GetControl(&quot;obtnSpace&quot;).State = 0
	&apos; Кавычки, Дефисы. Разное
	oTextCorrectorDlg.GetControl(&quot;cbox2HyphenToDash&quot;).State = 1
	oTextCorrectorDlg.GetControl(&quot;cboxHyphenToDash&quot;).State = 1
	oTextCorrectorDlg.GetControl(&quot;cboxDefis&quot;).State = 1
	oTextCorrectorDlg.GetControl(&quot;cboxKav&quot;).State = 1
	oTextCorrectorDlg.GetControl(&quot;cboxPoints&quot;).State = 1
	oTextCorrectorDlg.GetControl(&quot;cboxC&quot;).State = 1
	&apos; Картинки
	oTextCorrectorDlg.GetControl(&quot;cboxImages&quot;).State = 0
	oCB = oTextCorrectorDlg.getControl(&quot;cbAnchor&quot;)
	oCB.SelectItemPos(0, True) &apos; &quot;К абзацу&quot;
	
	cboxImagesEnabled
	cboxBreakLineEnabled
End Function

Function TextCorrectorDlgCanceled
	bCorrectorExecute = False
	oTextCorrectorDlg.endExecute()
End Function

Function cboxImagesEnabled
	If oTextCorrectorDlg.GetControl(&quot;cboxImages&quot;).State = 1 Then
		oTextCorrectorDlg.GetControl(&quot;lblAnchor&quot;).Enable = True
		oTextCorrectorDlg.GetControl(&quot;cbAnchor&quot;).Enable = True
	Else
		oTextCorrectorDlg.GetControl(&quot;lblAnchor&quot;).Enable = False
		oTextCorrectorDlg.GetControl(&quot;cbAnchor&quot;).Enable = False
	End If
End Function

Function cboxBreakLineEnabled
	If oTextCorrectorDlg.GetControl(&quot;cboxBreakLine&quot;).State = 1 Then
		oTextCorrectorDlg.GetControl(&quot;obtnDel&quot;).Enable = True
		oTextCorrectorDlg.GetControl(&quot;obtnPar&quot;).Enable = True
		oTextCorrectorDlg.GetControl(&quot;obtnSpace&quot;).Enable = True
	Else
		oTextCorrectorDlg.GetControl(&quot;obtnDel&quot;).Enable = False
		oTextCorrectorDlg.GetControl(&quot;obtnPar&quot;).Enable = False
		oTextCorrectorDlg.GetControl(&quot;obtnSpace&quot;).Enable = False
	End If
End Function

Function TextCorrectorDlgOk
	&apos; Если есть опции для чистки, то - работаем
	If oTextCorrectorDlg.GetControl(&quot;cboxDelSpace&quot;).State = 0 And oTextCorrectorDlg.GetControl(&quot;cboxDelEmptyPar&quot;).State = 0 And _
		oTextCorrectorDlg.GetControl(&quot;cboxBreakLine&quot;).State = 0 And oTextCorrectorDlg.GetControl(&quot;cbox2HyphenToDash&quot;).State = 0 And _
		oTextCorrectorDlg.GetControl(&quot;cboxHyphenToDash&quot;).State = 0 And oTextCorrectorDlg.GetControl(&quot;cboxDefis&quot;).State = 0 And _
		oTextCorrectorDlg.GetControl(&quot;cboxKav&quot;).State = 0 And oTextCorrectorDlg.GetControl(&quot;cboxPoints&quot;).State = 0 And _
		oTextCorrectorDlg.GetControl(&quot;cboxC&quot;).State = 0 And oTextCorrectorDlg.GetControl(&quot;cboxImages&quot;).State = 0 Then
		MsgBox &quot;Выберите, пожалуйста, хоть одну опцию для корректуры текста!&quot;, 64, sConvertorName
		Exit Function
	End If
	
	&apos; Принятие параметров чистки текста
	SaveCorrectorSettings &apos; сохранение настроек чистки текста

	Dim oProgressBar
	oProgressBar = ThisComponent.CurrentController.StatusIndicator
	oProgressBar.start(&quot;Корректировка документа:&quot;, 84)
	oProgressBar.setValue(0)
	
	&apos; Очистка текста
	oDoc = ThisComponent
	oReplace = oDoc.createReplaceDescriptor
	oReplace.SearchRegularExpression = True
	
	&apos; Привязка картинок
	If bImages = True Then
		Dim oGraphics As Object 
		Dim oThisGraphic As Object 
		Dim nAnchor As Integer
		Dim i As Integer
		Select Case sAnchor
			Case &quot;К абзацу&quot;
				nAnchor = 0
			Case &quot;К символу&quot;
				nAnchor = 4
			Case &quot;Как символ&quot;
				nAnchor = 1
			Case Else
				nAnchor = 0
		End Select
		oGraphics = oDoc.getGraphicObjects()
	    For i = 0 to oGraphics.Count - 1
	    	oThisGraphic = oGraphics.GetByIndex(i)
			oThisGraphic.AnchorType  = nAnchor
		Next i
	End If
	
	&apos; Работа с абзацами и разрывами
	If bDelEmptyPar = True Then
		&apos; Удаляем все множественные пустые абзацы
		oReplace.SearchString = &quot;^$&quot;
		oReplace.ReplaceString = &quot;&quot;
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(1)
	End If
	If bBreakLine = True Then
		&apos; Разрывы строк
		If bDel = True Then
			&apos; Удаляем разрыв строки
			oReplace.SearchString = chr(10)&apos;&quot;\n&quot;
			oReplace.ReplaceString = &quot;&quot;
		ElseIf bPar = True Then
			&apos; Заменяем разрыв строки на абзац
			oReplace.SearchString = chr(10)&apos;&quot;\n&quot;
			oReplace.ReplaceString = &quot;\n&quot;
		ElseIf bSpace = True Then
			&apos; Заменяем разрыв строки на 1 пробел
			oReplace.SearchString = chr(10)&apos;&quot;\n&quot;
			oReplace.ReplaceString = &quot; &quot;
		End If
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(2)
	End If
	&apos; Кавычки, Дефисы, Разное
	If b2HyphenToDash = True Then
		&apos; Заменить двойной дефис (--) на тире
		oReplace.SearchString = &quot;--&quot;
		oReplace.ReplaceString = &quot; — &quot;
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(3)
		oReplace.SearchString = chr(8211) &amp; chr(8211)
		oReplace.ReplaceString = &quot; — &quot;
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(4)
	End If
	If bHyphenToDash = True Then
		&apos; Заменить, дефис используемый вместо тире на тире
		&apos;(Речь, между слов, но не в &quot;какой-то, где-то...&quot;)
		oReplace.SearchString = &quot;^-&quot;
		oReplace.ReplaceString = &quot;— &quot;
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(5)
		oReplace.SearchString = &quot;\.-&quot;
		oReplace.ReplaceString = &quot;. — &quot;
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(6)
		oReplace.SearchString = &quot;\. -&quot;
		oReplace.ReplaceString = &quot;. — &quot;
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(7)
		oReplace.SearchString = &quot;,-&quot;
		oReplace.ReplaceString = &quot;, — &quot;
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(8)
		oReplace.SearchString = &quot;, -&quot;
		oReplace.ReplaceString = &quot;, — &quot;
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(9)
		oReplace.SearchString = &quot;:-&quot;
		oReplace.ReplaceString = &quot;: — &quot;
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(10)
		oReplace.SearchString = &quot;: -&quot;
		oReplace.ReplaceString = &quot;: — &quot;
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(11)
		oReplace.SearchString = &quot;;-&quot;
		oReplace.ReplaceString = &quot;; — &quot;
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(12)
		oReplace.SearchString = &quot; ;-&quot;
		oReplace.ReplaceString = &quot;; — &quot;
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(13)
		oReplace.SearchString = &quot;\!-&quot;
		oReplace.ReplaceString = &quot;! — &quot;
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(14)
		oReplace.SearchString = &quot;\! -&quot;
		oReplace.ReplaceString = &quot;! — &quot;
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(15)
		oReplace.SearchString = &quot;\?-&quot;
		oReplace.ReplaceString = &quot;? — &quot;
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(16)
		oReplace.SearchString = &quot;\? -&quot;
		oReplace.ReplaceString = &quot;? — &quot;
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(17)
		oReplace.SearchString = &quot;…-&quot;
		oReplace.ReplaceString = &quot;… — &quot;
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(18)
		oReplace.SearchString = &quot;… -&quot;
		oReplace.ReplaceString = &quot;… — &quot;
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(19)
		oReplace.SearchString = &quot;\&gt; - \&lt;&quot;
		oReplace.ReplaceString = &quot; — &quot;
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(20)
		
		oReplace.SearchString = &quot;» - \&lt;&quot;
		oReplace.ReplaceString = &quot;» — &quot;
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(21)
		oReplace.SearchString = &quot;»- \&lt;&quot;
		oReplace.ReplaceString = &quot;» — &quot;
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(22)
		oReplace.SearchString = &quot;» -\&lt;&quot;
		oReplace.ReplaceString = &quot;» — &quot;
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(23)
		oReplace.SearchString = &quot;»-\&lt;&quot;
		oReplace.ReplaceString = &quot;» — &quot;
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(24)
		oReplace.SearchString = &quot;\&gt; - «&quot;
		oReplace.ReplaceString = &quot; — «&quot;
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(25)
		oReplace.SearchString = &quot;\&gt;- «&quot;
		oReplace.ReplaceString = &quot; — «&quot;
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(26)
		oReplace.SearchString = &quot;\&gt; -«&quot;
		oReplace.ReplaceString = &quot; — «&quot;
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(27)
		oReplace.SearchString = &quot;\&gt;-«&quot;
		oReplace.ReplaceString = &quot; — «&quot;
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(28)
		oReplace.SearchString = &quot;» - «&quot;
		oReplace.ReplaceString = &quot;» — «&quot;
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(29)
		oReplace.SearchString = &quot;»- «&quot;
		oReplace.ReplaceString = &quot;» — «&quot;
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(30)
		oReplace.SearchString = &quot;» -«&quot;
		oReplace.ReplaceString = &quot;» — «&quot;
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(31)
		oReplace.SearchString = &quot;»-«&quot;
		oReplace.ReplaceString = &quot;» — «&quot;
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(32)
		
		oReplace.SearchString = &quot;&quot;&quot; - \&lt;&quot;
		oReplace.ReplaceString = &quot;&quot;&quot; — &quot;
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(33)
		oReplace.SearchString = &quot;&quot;&quot;- \&lt;&quot;
		oReplace.ReplaceString = &quot;&quot;&quot; — &quot;
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(34)
		oReplace.SearchString = &quot;&quot;&quot; -\&lt;&quot;
		oReplace.ReplaceString = &quot;&quot;&quot; — &quot;
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(35)
		oReplace.SearchString = &quot;&quot;&quot;-\&lt;&quot;
		oReplace.ReplaceString = &quot;&quot;&quot; — &quot;
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(36)
		oReplace.SearchString = &quot;\&gt; - &quot;&quot;&quot;
		oReplace.ReplaceString = &quot; — &quot;&quot;&quot;
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(37)
		oReplace.SearchString = &quot;\&gt;- &quot;&quot;&quot;
		oReplace.ReplaceString = &quot; — &quot;&quot;&quot;
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(38)
		oReplace.SearchString = &quot;\&gt; -&quot;&quot;&quot;
		oReplace.ReplaceString = &quot; — &quot;&quot;&quot;
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(39)
		oReplace.SearchString = &quot;\&gt;-&quot;&quot;&quot;
		oReplace.ReplaceString = &quot; — &quot;&quot;&quot;
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(40)
		oReplace.SearchString = &quot;&quot;&quot; - &quot;&quot;&quot;
		oReplace.ReplaceString = &quot;&quot;&quot; — &quot;&quot;&quot;
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(41)
		oReplace.SearchString = &quot;&quot;&quot;- &quot;&quot;&quot;
		oReplace.ReplaceString = &quot;&quot;&quot; — &quot;&quot;&quot;
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(42)
		oReplace.SearchString = &quot;&quot;&quot; -&quot;&quot;&quot;
		oReplace.ReplaceString = &quot;&quot;&quot; — &quot;&quot;&quot;
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(43)
		oReplace.SearchString = &quot;&quot;&quot;-&quot;&quot;&quot;
		oReplace.ReplaceString = &quot;&quot;&quot; — &quot;&quot;&quot;
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(44)
		
		oReplace.SearchString = &quot;” - \&lt;&quot;
		oReplace.ReplaceString = &quot;” — &quot;
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(45)
		oReplace.SearchString = &quot;”- \&lt;&quot;
		oReplace.ReplaceString = &quot;” — &quot;
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(46)
		oReplace.SearchString = &quot;” -\&lt;&quot;
		oReplace.ReplaceString = &quot;” — &quot;
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(47)
		oReplace.SearchString = &quot;”-\&lt;&quot;
		oReplace.ReplaceString = &quot;” — &quot;
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(48)
		oReplace.SearchString = &quot;\&gt; - “&quot;
		oReplace.ReplaceString = &quot; — “&quot;
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(49)
		oReplace.SearchString = &quot;\&gt;- “&quot;
		oReplace.ReplaceString = &quot; — “&quot;
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(50)
		oReplace.SearchString = &quot;\&gt; -“&quot;
		oReplace.ReplaceString = &quot; — “&quot;
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(51)
		oReplace.SearchString = &quot;\&gt;-“&quot;
		oReplace.ReplaceString = &quot; — “&quot;
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(52)
		oReplace.SearchString = &quot;” - “&quot;
		oReplace.ReplaceString = &quot;” — “&quot;
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(53)
		oReplace.SearchString = &quot;”- “&quot;
		oReplace.ReplaceString = &quot;” — “&quot;
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(54)
		oReplace.SearchString = &quot;” -“&quot;
		oReplace.ReplaceString = &quot;” — “&quot;
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(55)
		oReplace.SearchString = &quot;”-“&quot;
		oReplace.ReplaceString = &quot;” — “&quot;
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(56)
	End If
	If bDefis = True Then
		&apos; Вместо минуса - дефис в &quot;кое-что&quot;, &quot;куда-то&quot; и т.д.
		oReplace.SearchString = &quot;\&gt;-\&lt;&quot;
		oReplace.ReplaceString = chr(8211)
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(57)
	End If
	If bPoints = True Then
		&apos; Упорядочить многоточие
		oReplace.SearchString = &quot;\.\.\.&quot;
		oReplace.ReplaceString = &quot;…&quot;&apos;chr(8230)
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(58)
		oReplace.SearchString = &quot;\. \. \.&quot;
		oReplace.ReplaceString = &quot;…&quot;&apos;chr(8230)
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(59)
	End If
	If bKav = True Then
		&apos; Заменить кавычки  &quot; &quot; и “ ” на  « »
		oReplace.SearchString = &quot;&quot;&quot;\&lt;&quot;
		oReplace.ReplaceString = &quot;«&quot;
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(60)
		oReplace.SearchString = &quot;\&gt;&quot;&quot;&quot;
		oReplace.ReplaceString = &quot;»&quot;
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(61)
		oReplace.SearchString = &quot;“\&lt;&quot;
		oReplace.ReplaceString = &quot;«&quot;
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(62)
		oReplace.SearchString = &quot;\&gt;”&quot;
		oReplace.ReplaceString = &quot;»&quot;
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(63)
		oReplace.SearchString = &quot;…&quot;&quot;&quot;
		oReplace.ReplaceString = &quot;…»&quot;
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(64)
		oReplace.SearchString = &quot;&quot;&quot;…&quot;
		oReplace.ReplaceString = &quot;«…&quot;
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(65)
		oReplace.SearchString = &quot;…”&quot;
		oReplace.ReplaceString = &quot;…»&quot;
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(66)
		oReplace.SearchString = &quot;“…&quot;
		oReplace.ReplaceString = &quot;«…&quot;
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(67)
		
		oReplace.SearchString = &quot;!&quot;&quot;&quot;
		oReplace.ReplaceString = &quot;!»&quot;
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(68)
		oReplace.SearchString = &quot;!”&quot;
		oReplace.ReplaceString = &quot;!»&quot;
		oDoc.ReplaceAll(oReplace)
		
		oReplace.SearchString = &quot;?&quot;&quot;&quot;
		oReplace.ReplaceString = &quot;?»&quot;
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(69)
		oReplace.SearchString = &quot;?”&quot;
		oReplace.ReplaceString = &quot;?»&quot;
		oDoc.ReplaceAll(oReplace)
		
		oReplace.SearchString = &quot;.&quot;&quot;&quot;
		oReplace.ReplaceString = &quot;.»&quot;
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(70)
		oReplace.SearchString = &quot;.”&quot;
		oReplace.ReplaceString = &quot;.»&quot;
		oDoc.ReplaceAll(oReplace)
		
		oReplace.SearchString = &quot;„\&lt;&quot;
		oReplace.ReplaceString = &quot;«&quot;
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(71)
		
		oReplace.SearchString = &quot;„…&quot;
		oReplace.ReplaceString = &quot;«…&quot;
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(72)

	End If
	If bC = True Then
		&apos; Замена на (c) (r) (TM)
		oReplace.SearchString = &quot;\(c\)&quot;
		oReplace.ReplaceString = &quot;©&quot;
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(73)
		oReplace.SearchString = &quot;\(с\)&quot;
		oReplace.ReplaceString = &quot;©&quot;
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(74)
		oReplace.SearchString = &quot;\(C\)&quot;
		oReplace.ReplaceString = &quot;©&quot;
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(75)
		oReplace.SearchString = &quot;\(С\)&quot;
		oReplace.ReplaceString = &quot;©&quot;
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(76)
		oReplace.SearchString = &quot;\(r\)&quot;
		oReplace.ReplaceString = &quot;®&quot;
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(77)
		oReplace.SearchString = &quot;\(R\)&quot;
		oReplace.ReplaceString = &quot;®&quot;
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(78)
		oReplace.SearchString = &quot;\(TM\)&quot;
		oReplace.ReplaceString = &quot;™&quot;
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(79)
		oReplace.SearchString = &quot;\(ТМ\)&quot;
		oReplace.ReplaceString = &quot;™&quot;
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(80)
	End If
	
	&apos; Работа с пробелами и табуляциями
	If bDelSpace = True Then
		&apos; Заменяем одиночную табуляцию на пробел
		oReplace.SearchString = &quot;\t&quot;
		oReplace.ReplaceString = &quot; &quot;
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(81)
		&apos; Удаляем все стартовые табуляции
		&apos;oReplace.SearchString = &quot;^\t{1,}&quot;
		&apos;oReplace.ReplaceString = &quot;&quot;
		&apos;oDoc.ReplaceAll(oReplace)
		&apos; Удаляем все конечные табуляции
		&apos;oReplace.SearchString = &quot;\t{1,}$&quot;
		&apos;oReplace.ReplaceString = &quot;&quot;
		&apos;oDoc.ReplaceAll(oReplace)
		&apos; Заменяем все множественные табуляции:
		&apos;oReplace.SearchString = &quot;\t{2,}&quot;
		&apos;oReplace.ReplaceString = &quot; &quot;
		&apos;oDoc.ReplaceAll(oReplace)
		&apos; Удаляем все стартовые пробелы
		oReplace.SearchString = &quot;^ {1,}&quot;
		oReplace.ReplaceString = &quot;&quot;
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(82)
		&apos; Удаляем все конечные пробелы
		oReplace.SearchString = &quot; {1,}$&quot;
		oReplace.ReplaceString = &quot;&quot;
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(83)
		&apos; Удаляем все множественные неразрывные пробелы
&apos;		oReplace.SearchString = &quot; {1,}&quot;
&apos;		oReplace.ReplaceString = &quot; &quot;
&apos;		oDoc.ReplaceAll(oReplace)
&apos;		oProgressBar.setValue(84)
		&apos; Удаляем все множественные пробелы
		oReplace.SearchString = &quot; {1,}&quot;
		oReplace.ReplaceString = &quot; &quot;
		oDoc.ReplaceAll(oReplace)
		oProgressBar.setValue(84)
	End If
	
	bCorrectorExecute = True
	oTextCorrectorDlg.endExecute()
	
	MsgBox &quot;Коррекция текста документа завершена!&quot;, 64, sConvertorName
	oProgressBar.end
End Function

</script:module>