<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="InCutParser" script:language="StarBasic">REM  *****  BASIC  *****
Option Explicit

&apos; //////////////// Парсер текстовых врезок /////////////////

Sub TextFrameParser( oContent As Object )
	&apos; Парсер Текстовой Врезки
	Select Case sTextFrameToFB2
		Case &quot;Таблица&quot;
			TextFrameTableParser( oContent )
			sPrevStyle = sTextFrameToFB2
		Case &quot;Цитата&quot;
			TextFrameCiteParser( oContent )
			sPrevStyle = sTextFrameToFB2
		Case &quot;Структура&quot;
			TextFrameStructParser( oContent )
			sPrevStyle = sTextFrameToFB2
		Case Else
			TextFrameTextParser( oContent )
			sPrevStyle = &quot;Para&quot;
	End Select
End Sub

&apos; парсер текстовой врезки как таблицы
Sub TextFrameTableParser( oContent As Object )
	Dim oParEnum As Object, oPar As Object, oWordEnum As Object, oWord As Object, sFormatPara As String, sTable As String
	oParEnum = oContent.createEnumeration()
	Do While oParEnum.hasMoreElements()
		oPar = oParEnum.nextElement()
		If oPar.ImplementationName = &quot;SwXParagraph&quot; Then
			oWordEnum = oPar.createEnumeration()
			sFormatPara = &quot;&quot;
			Dim sString As String : sString = &quot;&quot; &apos; Для &quot;отлова&quot; нумерованных списков
			Do While oWordEnum.hasMoreElements()
				oWord = oWordEnum.nextElement()			
				If oWord.TextPortionType = &quot;Frame&quot; Then
					Dim oCEnum : oCEnum = oWord.createContentEnumeration(&quot;com.sun.star.text.TextContent&quot;)
					Do While oCEnum.hasMoreElements()
						Dim oContent : oContent = oCEnum.nextElement()
						If oContent.supportsService(&quot;com.sun.star.text.TextGraphicObject&quot;) Or _
							oContent.supportsService(&quot;com.sun.star.drawing.GraphicObjectShape&quot;) Or _
							oContent.supportsService(&quot;com.sun.star.drawing.CustomShape&quot;) Then
							sFormatPara = sFormatPara &amp; ImagesTextInCutParser( oContent, sFormatPara )
						End If
					Loop
				Else &apos; oWord.TextPortionType = &quot;Text&quot;
					sString = sString &amp; oWord.getString()
					&apos; врезки не поддерживают сносок, поэтому их &quot;не парсим&quot;
					If bOnlyOneStyle = True Then
						sFormatPara = sFormatPara &amp; InLineParser( oWord )
					Else
						sFormatPara = sFormatPara &amp; InLineAllParser( oWord )
					End If
				End If
			Loop
		
			If oPar.NumberingIsNumber = True Then &apos; нумерованные списки
				Dim s As String, sPos As String
				s = Mid( oPar.getString(), 1, Len( oPar.getString() )-Len( sString ) )
				sPos = Mid(sString, 1,1)
				If sFormatPara &lt;&gt; &quot;&quot; Then InsertInString( sFormatPara, sPos, s &amp; &quot; &quot; &amp; sPos )
			End If
		
			If bDelEL = True Then &apos; удаление пустых параграфов
				If sFormatPara &lt;&gt; &quot;&quot; Then
					sTable = sTable &amp; &quot;&lt;tr&gt;&quot; &amp; chr(10)
					sTable = sTable &amp; &quot;&lt;td align=&quot;&quot;&quot; &amp; GetFB2ParagraphAdjust( oPar ) &amp; &quot;&quot;&quot;&gt;&quot; &amp; sFormatPara &amp; &quot;&lt;/td&gt;&quot; &amp; chr(10)
					sTable = sTable &amp; &quot;&lt;/tr&gt;&quot; &amp; chr(10)
				End If
			Else
				sTable = sTable &amp; &quot;&lt;tr&gt;&quot; &amp; chr(10)
				If sFormatPara &lt;&gt; &quot;&quot; Then
					sTable = sTable &amp; &quot;&lt;td align=&quot;&quot;&quot; &amp; GetFB2ParagraphAdjust( oPar ) &amp; &quot;&quot;&quot;&gt;&quot; &amp; sFormatPara &amp; &quot;&lt;/td&gt;&quot; &amp; chr(10)
				Else &apos; пустая строка
					sTable = sTable &amp; &quot;&lt;td/&gt;&quot; &amp; chr(10)
				End If
				sTable = sTable &amp; &quot;&lt;/tr&gt;&quot; &amp; chr(10)
			End If
		ElseIf oPar.ImplementationName = &quot;SwXTextTable&quot; Then
			&apos; парсер таблицы
			Dim sT As String, sTI As String
			sT = OOo23TextTableParserForTextInCut( iCurrentTable )
			sTI = ReplaceInString( sT, &quot;&lt;table&gt;&quot; &amp; chr(10), &quot;&quot;, False )
			sTI = ReplaceInString( sTI, chr(10) &amp; &quot;&lt;/table&gt;&quot;, &quot;&quot;, False )
			sTable = sTable &amp; sTI &amp; chr(10)
		End If
	Loop
	sTable = &quot;&lt;table&gt;&quot; &amp; chr(10) &amp; sTable &amp; &quot;&lt;/table&gt;&quot;
	AddBodyArray(sTable, &quot;Table&quot;, False)
End Sub

&apos; парсер текстовой врезки как цитаты
Sub TextFrameCiteParser( oContent As Object )
	Dim sCite As String
	Dim oParEnum As Object, oPar As Object, oWordEnum As Object, oWord As Object, sFormatPara As String
	oParEnum = oContent.createEnumeration()
	Do While oParEnum.hasMoreElements()
		oPar = oParEnum.nextElement()
		If oPar.ImplementationName = &quot;SwXParagraph&quot; Then
			oWordEnum = oPar.createEnumeration()
			sFormatPara = &quot;&quot;
			Dim sString As String : sString = &quot;&quot; &apos; Для &quot;отлова&quot; нумерованных списков
			Do While oWordEnum.hasMoreElements()
				oWord = oWordEnum.nextElement()
				If oWord.TextPortionType = &quot;Frame&quot; Then
					Dim oCEnum : oCEnum = oWord.createContentEnumeration(&quot;com.sun.star.text.TextContent&quot;)
					Do While oCEnum.hasMoreElements()
						Dim oContent : oContent = oCEnum.nextElement()
						If oContent.supportsService(&quot;com.sun.star.text.TextGraphicObject&quot;) Or _
							oContent.supportsService(&quot;com.sun.star.drawing.GraphicObjectShape&quot;) Or _
							oContent.supportsService(&quot;com.sun.star.drawing.CustomShape&quot;) Then
							sFormatPara = sFormatPara &amp; ImagesTextInCutParser( oContent, sFormatPara )
						End If
					Loop
				Else &apos; oWord.TextPortionType = &quot;Text&quot;
					sString = sString &amp; oWord.getString()
					&apos; врезки не поддерживают сносок, поэтому их &quot;не парсим&quot;
					If bOnlyOneStyle = True Then
						sFormatPara = sFormatPara &amp; InLineParser( oWord )
					Else
						sFormatPara = sFormatPara &amp; InLineAllParser( oWord )
					End If
				End If
			Loop
		
			If oPar.NumberingIsNumber = True Then &apos; нумерованные списки
				Dim s As String, sPos As String
				s = Mid( oPar.getString(), 1, Len( oPar.getString() )-Len( sString ) )
				sPos = Mid(sString, 1,1)
				If sFormatPara &lt;&gt; &quot;&quot; Then InsertInString( sFormatPara, sPos, s &amp; &quot; &quot; &amp; sPos )
			End If
		
			If bDelEL = True Then &apos; удаление пустых параграфов
				If sFormatPara &lt;&gt; &quot;&quot; Then
					sCite = sCite &amp; &quot;&lt;p&gt;&quot; &amp; sFormatPara &amp; &quot;&lt;/p&gt;&quot; &amp; chr(10)
				End If
			Else
				If sFormatPara &lt;&gt; &quot;&quot; Then
					sCite = sCite &amp; &quot;&lt;p&gt;&quot; &amp; sFormatPara &amp; &quot;&lt;/p&gt;&quot; &amp; chr(10)
				Else &apos; пустая строка
					sCite = sCite &amp; &quot;&lt;empty-line/&gt;&quot; &amp; chr(10)
				End If
			End If
		ElseIf oPar.ImplementationName = &quot;SwXTextTable&quot; Then
			&apos; парсер таблицы
			sCite = sCite &amp; OOo23TextTableParserForTextInCut( iCurrentTable ) &amp; chr(10)
		End If
	Loop
	sCite = Mid(sCite, 4, Len(sCite)) &apos; убираем &lt;cite&gt; в начале
	sCite = Mid(sCite, 1, Len(sCite)-5)&apos; убираем &lt;/cite&gt; в конце
	AddBodyArray(sCite, &quot;Cite&quot;, False)
End Sub

&apos; парсер текстовой врезки как текста
Sub TextFrameTextParser( oContent As Object )
	Dim sText As String
	Dim oParEnum As Object, oPar As Object, oWordEnum As Object, oWord As Object, sFormatPara As String
	oParEnum = oContent.createEnumeration()
	Do While oParEnum.hasMoreElements()
		oPar = oParEnum.nextElement()
		If oPar.ImplementationName = &quot;SwXParagraph&quot; Then
			oWordEnum = oPar.createEnumeration()
			sFormatPara = &quot;&quot;
			Dim sString As String : sString = &quot;&quot; &apos; Для &quot;отлова&quot; нумерованных списков
			Do While oWordEnum.hasMoreElements()
				oWord = oWordEnum.nextElement()
				If oWord.TextPortionType = &quot;Frame&quot; Then
					Dim oCEnum : oCEnum = oWord.createContentEnumeration(&quot;com.sun.star.text.TextContent&quot;)
					Do While oCEnum.hasMoreElements()
						Dim oContent : oContent = oCEnum.nextElement()
						If oContent.supportsService(&quot;com.sun.star.text.TextGraphicObject&quot;) Or _
							oContent.supportsService(&quot;com.sun.star.drawing.GraphicObjectShape&quot;) Or _
							oContent.supportsService(&quot;com.sun.star.drawing.CustomShape&quot;) Then
							sFormatPara = sFormatPara &amp; ImagesTextInCutParser( oContent, sFormatPara )
						End If
					Loop
				Else &apos; oWord.TextPortionType = &quot;Text&quot;
					sString = sString &amp; oWord.getString()
					&apos; врезки не поддерживают сносок, поэтому их &quot;не парсим&quot;	
					If bOnlyOneStyle = True Then
						sFormatPara = sFormatPara &amp; InLineParser( oWord )
					Else
						sFormatPara = sFormatPara &amp; InLineAllParser( oWord )
					End If
				End If
			Loop
		
			If oPar.NumberingIsNumber = True Then &apos; нумерованные списки
				Dim s As String, sPos As String
				s = Mid( oPar.getString(), 1, Len( oPar.getString() )-Len( sString ) )
				sPos = Mid(sString, 1,1)
				If sFormatPara &lt;&gt; &quot;&quot; Then InsertInString( sFormatPara, sPos, s &amp; &quot; &quot; &amp; sPos )
			End If
			
			If bDelEL = True Then &apos; удаление пустых параграфов
				If sFormatPara &lt;&gt; &quot;&quot; Then
					sText = sText &amp; &quot;&lt;p&gt;&quot; &amp; sFormatPara &amp; &quot;&lt;/p&gt;&quot; &amp; chr(10)
				End If
			Else
				If sFormatPara &lt;&gt; &quot;&quot; Then
					sText = sText &amp; &quot;&lt;p&gt;&quot; &amp; sFormatPara &amp; &quot;&lt;/p&gt;&quot; &amp; chr(10)
				Else &apos; пустая строка
					sText = sText &amp; &quot;&lt;empty-line/&gt;&quot; &amp; chr(10)
				End If
			End If
		ElseIf oPar.ImplementationName = &quot;SwXTextTable&quot; Then
			&apos; парсер таблицы
			sText = sText &amp; OOo23TextTableParserForTextInCut( iCurrentTable ) &amp; chr(10)
		End If
	Loop
	sText = Mid(sText, 4, Len(sText))   &apos; убираем &lt;p&gt; в начале
	sText = Mid(sText, 1, Len(sText)-5) &apos; убираем &lt;/p&gt; в конце
	AddBodyArray(sText, &quot;Para&quot;, False)
End Sub

&apos; парсер текстовой врезки как структуры
Sub TextFrameStructParser( oContent As Object )
	Dim oParEnum As Object, oPar As Object, oWordEnum As Object, oWord As Object, sFormatPara As String
	oParEnum = oContent.createEnumeration()
	Do While oParEnum.hasMoreElements()
		oPar = oParEnum.nextElement()
		If oPar.ImplementationName = &quot;SwXParagraph&quot; Then
			oWordEnum = oPar.createEnumeration()
			sFormatPara = &quot;&quot;
			Dim sString As String : sString = &quot;&quot; &apos; Для &quot;отлова&quot; нумерованных списков
			Do While oWordEnum.hasMoreElements()
				oWord = oWordEnum.nextElement()
				If oWord.TextPortionType = &quot;Frame&quot; Then
					Dim oCEnum : oCEnum = oWord.createContentEnumeration(&quot;com.sun.star.text.TextContent&quot;)
					Do While oCEnum.hasMoreElements()
						Dim oContent : oContent = oCEnum.nextElement()
						If oContent.supportsService(&quot;com.sun.star.text.TextGraphicObject&quot;) Or _
							oContent.supportsService(&quot;com.sun.star.drawing.GraphicObjectShape&quot;) Or _
							oContent.supportsService(&quot;com.sun.star.drawing.CustomShape&quot;) Then
							sFormatPara = sFormatPara &amp; ImagesTextInCutParser( oContent, sFormatPara )
						End If
					Loop
				Else &apos; oWord.TextPortionType = &quot;Text&quot;
					sString = sString &amp; oWord.getString()
					&apos; врезки не поддерживают сносок, поэтому их &quot;не парсим&quot;
					If bOnlyOneStyle = True Then
						sFormatPara = sFormatPara &amp; InLineParser( oWord )
					Else
						sFormatPara = sFormatPara &amp; InLineAllParser( oWord )
					End If
				End If
			Loop
		
			If oPar.NumberingIsNumber = True Then &apos; нумерованные списки
				Dim s As String, sPos As String
				s = Mid( oPar.getString(), 1, Len( oPar.getString() )-Len( sString ) )
				sPos = Mid(sString, 1,1)
				If sFormatPara &lt;&gt; &quot;&quot; Then InsertInString( sFormatPara, sPos, s &amp; &quot; &quot; &amp; sPos )
			End If
		
			StyleParser(oPar.ParaStyleName, sFormatPara)
		ElseIf oPar.ImplementationName = &quot;SwXTextTable&quot; Then
			&apos; парсер таблицы
			Dim sTable as String
			sTable = OOo23TextTableParserForTextInCut( iCurrentTable )
			&apos;sTable = &quot;&lt;table&gt;&quot; &amp; chr(10) &amp; sTable &amp; &quot;&lt;/table&gt;&quot;
			AddBodyArray(sTable, &quot;Table&quot;, False)
		End If
	Loop
End Sub

&apos; парсер таблиц внутри Текстовой Врезки
Function OOo23TextTableParserForTextInCut( iCurrentTable As Integer ) As String
	Dim nHeaderRowCount As Integer
	Dim oTables As Object, oTable As Object
	Dim sTable As String &apos; текст таблицы в fb2.1 формате
	Dim iCel As Integer &apos; текушая ячейка
	Dim CellNames
	&apos; все таблицы документа
	oTables = ThisComponent.getTextTables() 
	&apos; получаем текущую таблицу
	oTable = oTables.getByIndex(iCurrentTable)
	iCel = 0 &apos; текушая ячейка
	CellNames = oTable.getCellNames()
	
	&apos; число строк заголовка таблицы
	nHeaderRowCount = GetHeaderRowCount( oTable )

	&apos; обработка сложных таблиц
	If IsComplexRowsCollTable(oTable) = True Then
		&apos;Сложная таблица: разное число столбцов и строк В ЯЧЕЙКЕ (очень сложная)
	Else
		&apos;Сложная таблица с разным числом столбцов в строке
		sTable = MakeComplexTable(nHeaderRowCount, oTable, CellNames)
	End If	
	iCurrentTable = iCurrentTable + 1 &apos; на следующую таблицу, если она есть
	OOo23TextTableParserForTextInCut = sTable
End Function

&apos; парсер графики внутри Текстовой Врезки
Function ImagesTextInCutParser( oContent As Object, sText As String )
	If oContent.AnchorType = 1 Then
		ImagesTextInCutParser = sText &amp; &quot;&lt;image l:href=&quot;&quot;#img_&quot; &amp; iImgCurrent &amp; &quot;&quot;&quot;/&gt;&quot;
	Else
		If bSaveImageTitle=True Then
			ImagesTextInCutParser = &quot;&lt;image l:href=&quot;&quot;#img_&quot; &amp; iImgCurrent &amp; &quot;&quot;&quot; title=&quot;&quot;&quot; &amp; oContent.getName() &amp; &quot;&quot;&quot;/&gt;&quot;
		Else
			ImagesTextInCutParser = &quot;&lt;image l:href=&quot;&quot;#img_&quot; &amp; iImgCurrent &amp; &quot;&quot;&quot;/&gt;&quot;
		End If
	End If
	iImgCurrent = iImgCurrent+1
End Function

</script:module>