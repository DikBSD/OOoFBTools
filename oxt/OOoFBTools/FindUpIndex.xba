<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="FindUpIndex" script:language="StarBasic">REM  *****  BASIC  *****
&apos; ===========================================================================================================================
&apos;													 модуль инструментов:
&apos; 									Поиск символов в верхнем индексе и преобразование их по шаблону
&apos; ===========================================================================================================================
Option Explicit

Public oFUI As Object

Private oDocControl	As Object
Private ovCurs		As Object	&apos; видимый курсор
Private otxtCurs	As Object	&apos; текстовый курсор для перебора найденного
Private oPosTxtCurs	As Object	&apos; текстовый курсор - хранение текущей позиции найденного символа по заданному условию
Private bWorkStart	As Boolean	&apos; флаг начала работы инструмента (True). Защита от повторного запуска диалога
Private bWorkEnd	As Boolean	&apos; флаг конца работы инструмента - закрытия диалога (True)
Private bEnd		As Boolean	&apos; флаг конца поиска (признак конца документа) - закрытия диалога (True)

&apos;***************************************************************************
Sub FindUpIndexDlg_windowActivated(oEv)
	oDocControl = ThisComponent.getCurrentController()
End Sub

Sub FindUpIndexDlg_windowDeactivated(oEv)
End Sub

Sub FindUpIndexDlg_windowOpened(oEv)
	bWorkStart = True &apos; Защита от повторного запуска диалога
End Sub

Sub FindUpIndexDlg_windowClosing(oEv)
	bWorkEnd	= True	&apos; флаг закрытия дмалога
	bWorkStart	= False	&apos; готовность к новому запуску диалога
End Sub

Sub FindUpIndexDlg_windowClosed(oEv)
End Sub

Sub FindUpIndexDlg_windowMinimized(oEv)
End Sub

Sub FindUpIndexDlg_windowNormalized(oEv)
End Sub

Sub FindUpIndexDlg_disposing(oEv)
End Sub

&apos; ===========================================================================================================================
&apos; 										запуск формы поиска верхнего индекса
&apos; ===========================================================================================================================
&apos; инициализация и запуск диалога поиска
Sub FindUpIndexFinderStart()
	If bWorkStart Then Exit Sub &apos; Защита от повторного запуска диалога
	
	GlobalScope.BasicLibraries.LoadLibrary( &quot;Tools&quot; )
	oFUI = LoadDialog( &quot;OOoFBTools&quot;, &quot;FindUpIndexDlg&quot; )
	
	&apos; создание и инициализация курсоров
	oDocControl	= ThisComponent.getCurrentController()
	&apos; инициализация позиции видимого курсора
	ovCurs		= oDocControl.getViewCursor()
	&apos; создаем текстовый курсор - хранение текущей позиции найденного символа по заданному условию
	oPosTxtCurs	= ovCurs.Text.createTextCursor()
	otxtCurs	= ovCurs.Text.createTextCursor()
	
	&apos; инициализация диалога Поиска символов верхнего индекса в зависимости от локали
	InitFindUpIndexDlg()
	
	&apos; файл настроек
	Dim sFUISettingsFilename As String : sFUISettingsFilename = getOOoFBToolsSettingsDir() &amp; &quot;up_index_finder.txt&quot;
	
	Dim aList() As String
	aList() = Array(&quot;... &quot; &amp; sFUID.sText &amp; &quot; (x) ...&quot;, _
					&quot;... &quot; &amp; sFUID.sText &amp; &quot; [x] ...&quot;, _
					&quot;... &quot; &amp; sFUID.sText &amp; &quot; {x} ...&quot;, _
					&quot;... &quot; &amp; sFUID.sText &amp; &quot; &lt;x&gt; ...&quot;, _
					&quot;... &quot; &amp; sFUID.sText &amp; &quot; /x/ ...&quot;, _
					&quot;... &quot; &amp; sFUID.sText &amp; &quot; \x\ ...&quot;)

	Dim aNFNInListList() As String
	aNFNInListList() = Array(	&quot;x &quot; &amp; sBTEND.sSText &amp; &quot; ...&quot;, _
								&quot;x. &quot; &amp; sBTEND.sSText &amp; &quot; ...&quot;, _
								&quot;(x) &quot; &amp; sBTEND.sSText &amp; &quot; ...&quot;, _
								&quot;(x). &quot; &amp; sBTEND.sSText &amp; &quot; ...&quot;, _
								&quot;[x] &quot; &amp; sBTEND.sSText &amp; &quot; ...&quot;, _
								&quot;[x]. &quot; &amp; sBTEND.sSText &amp; &quot; ...&quot;, _
								&quot;{x} &quot; &amp; sBTEND.sSText &amp; &quot; ...&quot;, _
								&quot;{x}. &quot; &amp; sBTEND.sSText &amp; &quot; ...&quot;, _
								&quot;&lt;x&gt; &quot; &amp; sBTEND.sSText &amp; &quot; ...&quot;, _
								&quot;&lt;x&gt;. &quot; &amp; sBTEND.sSText &amp; &quot; ...&quot;, _
								&quot;/x/ &quot; &amp; sBTEND.sSText &amp; &quot; ...&quot;, _
								&quot;/x/. &quot; &amp; sBTEND.sSText &amp; &quot; ...&quot;, _
								&quot;\x\ &quot; &amp; sBTEND.sSText &amp; &quot; ...&quot;, _
								&quot;\x\. &quot; &amp; sBTEND.sSText &amp; &quot; ...&quot;	)

	With oFUI
		.Model.lboxFNLTrans.StringItemList = aList()
		.Model.lboxFNInListTrans.StringItemList = aNFNInListList()
		.getControl( &quot;lboxFNLTrans&quot; ).SelectItemPos( 2, True )
		.getControl( &quot;lboxFNInListTrans&quot; ).SelectItemPos( 0, True )
	End With
	
	&apos; считаем положение диалога из файла настроек
	Dim nX As Integer, nY As Integer
	ReadDlgSettings( sFUISettingsFilename, oFUI,  nX, nY )
	oFUI.setPosSize( nX, nY, 100, 367, com.sun.star.awt.PosSize.POS )

	bWorkEnd = False
	
	Dim oList : oList = createUnoListener( &quot;FindUpIndexDlg_&quot;,&quot;com.sun.star.awt.XTopWindowListener&quot; )
	With oFUI
		.addTopWindowListener( oList )
		.setVisible( True )
	End With
	While Not bWorkEnd
		Wait 200     
	Wend
	
	&apos; записываем настройки диалога
	SaveSettings( sFUISettingsFilename, oFUI )
	oFUI.setVisible( False )
End Sub

&apos;***************************************************************************
&apos; Поиск по заданному режиму
Sub FUIFind()
	Dim sFind As String
	bEnd = False &apos; признак конца документа
	If oFUI.getControl( &quot;obtnOnlyNumbers&quot; ).State = True Then
		sFind = &quot;[:digit:]+&quot;
	Else
		sFind = &quot;.+&quot;
	End If
	Dim sTitle	As String : sTitle	=  sFUID.sTitle

	&apos; проверка, является ли объект, где производится поиск - текстом
	If Not IsSelTextRange( oDocControl ) Then
		MsgBox sFUID.sImpossibleToFind, 64, sTitle
		Exit Sub
	End If

	&apos; переместить курсор на позицию видимого курсора
	otxtCurs = ovCurs.getText().CreateTextCursorByRange(ovCurs)

	&apos; ищем заданное регулярное выражение
	FindRegInText( ovCurs, sFind, sTitle )
End Sub

&apos;***************************************************************************
&apos; ищем заданный регекс
Sub FindRegInText( ovCurs, sFind As String, sTitle As String )
	If Not IsSelTextRange( oDocControl ) Then
		MsgBox sFUID.sImpossibleToFind, 64, sTitle
		Exit Sub
	End If
	Dim oViewCursor	As Object
	otxtCurs = ovCurs.Text.createTextCursorByRange( ovCurs )
	&apos; поиск и обработка искомого слова
	If FindNextInText( sFind ) Then &apos; еще не дошли до конца документа
		If oFUI.getControl( &quot;obtnOnlyUpIndex&quot; ).State = True Then
			&apos; только для символов верхнего индекса
			If otxtCurs.CharEscapement &lt; 0 Then
				&apos; снимаем выделение с последнего слова - оно было уже обработано, просто поиск закончился на нем
				oViewCursor	= ThisComponent.getCurrentController().getViewCursor()
				oViewCursor.collapseToEnd()
				oDocControl.Select( otxtCurs ) &apos; снимаем предыдущее выделяем и ищем заново с начала документа
				FindRegInText( ovCurs, sFind, sTitle ) &apos; рекурсия
			Else
				oPosTxtCurs = otxtCurs.getText().CreateTextCursorByRange(otxtCurs)
			End If
		ElseIf oFUI.getControl( &quot;obtnOnlyDonwIndex&quot; ).State = True Then
			&apos; только для символов нижнего индекса
			If otxtCurs.CharEscapement &gt; 0 Then
				&apos; снимаем выделение с последнего слова - оно было уже обработано, просто поиск закончился на нем
				oViewCursor	= ThisComponent.getCurrentController().getViewCursor()
				oViewCursor.collapseToEnd()
				oDocControl.Select( otxtCurs ) &apos; снимаем предыдущее выделяем и ищем заново с начала документа
				FindRegInText( ovCurs, sFind, sTitle ) &apos; рекурсия
			End If
		End If
		If bEnd = False Then
			oDocControl.Select( otxtCurs )
		Else
			oDocControl.Select( oPosTxtCurs )
		End If
	Else &apos; конец документа
		&apos; снимаем выделение с последнего слова - оно было уже обработано, просто поиск закончился на нем
		oViewCursor	= ThisComponent.getCurrentController().getViewCursor()
		oViewCursor.collapseToEnd()
		If MsgBox( sFUID.sToContinueSearch, 32 + 4 + 128, sTitle ) &lt;&gt; 6 Then
			bEnd = True : Exit Sub
		End If
		oDocControl.Select( otxtCurs ) &apos; снимаем предыдущее выделяем и ищем заново с начала документа
		FindRegInText( ovCurs, sFind, sTitle ) &apos; рекурсия
	End If
End Sub

&apos;***************************************************************************
&apos; поиск следующего заданного регекса в документе
Function FindNextInText( sFind ) As Boolean
	&apos; задаем поиск верхнего индекса
	Dim SrchAttributes(0) As New com.sun.star.beans.PropertyValue
	SrchAttributes(0).Name	= &quot;CharEscapement&quot;

	Dim oDesc : oDesc = ThisComponent.createSearchDescriptor()
	With oDesc
		.SearchRegularExpression = True
		.SetSearchAttributes(SrchAttributes())
		.SearchString = sFind
&apos;		.SearchStyles = True
		.ValueSearch = False
	End With
	
	otxtCurs.collapseToEnd()
	Dim Found : Found = ThisComponent.findNext( otxtCurs.getStart(), oDesc )
	
	if IsNull( Found ) Then &apos; конец документа - ничего не нашли
		otxtCurs = ThisComponent.getText().CreateTextCursorByRange(ThisComponent.Text.getStart())
		FindNextInText = False &apos; конец документа - ничего не нашли
		Exit Function
	End If

	otxtCurs = Found.Text.createTextCursor()
	With otxtCurs
		.gotorange( Found.getStart(), False )
		.gotorange( Found.getEnd(), True )
	End With

	FindNextInText = True &apos; нашли искомое регулярное выражение
End Function
	
&apos;***************************************************************************
&apos; проверка, является ли объект, где производится поиск - текстом
Function IsSelTextRange( ByRef oDocControl As Object ) As Boolean
	If oDocControl.getSelection().supportsService(&quot;com.sun.star.text.TextRanges&quot;) Then
		IsSelTextRange = True
	Else &apos; защита от поиска в выделенных врезках, ячейках таблицы, картинках...
		IsSelTextRange = False
	End If 
End Function

&apos;***************************************************************************
&apos; преобразование цифр в верхнем индексе по шаблону для сносок
Sub UpIndexTransformToFootNoteTemplate()
	&apos; проверка на выделение
	Dim oSels As Object : oSels = ThisComponent.getCurrentSelection() &apos; все выделения текста
	If oSels.getCount() &gt; 1 Then Exit Sub
	Dim oSel As Object : oSel = oSels.getByIndex( 0 )
	If oSel.getString() = &quot;&quot; Then Exit Sub
	
	Dim oViewCursor	As Object	: oViewCursor	= oDocControl.getViewCursor()
&apos;	&apos; проверка - выделение - цифра(ы) верхнего индекса?
&apos;	If oViewCursor.CharEscapementHeight &lt;&gt; 58 And oViewCursor.CharEscapement &lt;&gt; 101 Then Exit Sub
	
	Dim oLB		As Object : oLB		= oFUI.getControl( &quot;lboxFNLTrans&quot; )
	Dim sLeft	As String : sLeft	= GetStringLeft( oLB )
	Dim sRight	As String : sRight	= GetStringRight( oLB )
	Dim sText	As String : sText	= oViewCursor.getString()
	
	With oViewCursor
		.CharEscapementHeight	= 0
		.CharEscapement			= 0
		.setString( sLeft &amp; sText &amp; sRight )
		&apos; снимаем выделение - вправо
		.collapseToEnd()
	End With
	
	&apos; продолжение поиска, если включена опция
	If oFUI.GetControl( &quot;chBoxFindNext&quot; ).State = 1 Then FUIFind()
End Sub

&apos;***************************************************************************
&apos; преобразование цифр в верхнем индексе по шаблону для номеров сносок в списке примечаний
Sub UpIndexTransformToFootNoteListTemplate()
	&apos; проверка на выделение
	Dim oSels As Object : oSels = ThisComponent.getCurrentSelection() &apos; все выделения текста
	If oSels.getCount() &gt; 1 Then Exit Sub
	Dim oSel As Object : oSel = oSels.getByIndex( 0 )
	If oSel.getString() = &quot;&quot; Then Exit Sub
	
	Dim oViewCursor	As Object	: oViewCursor	= oDocControl.getViewCursor()
&apos;	&apos; проверка - выделение - цифра(ы) верхнего индекса?
&apos;	If oViewCursor.CharEscapementHeight &lt;&gt; 58 And oViewCursor.CharEscapement &lt;&gt; 101 Then Exit Sub
	
	Dim oLB		As Object : oLB		= oFUI.getControl( &quot;lboxFNInListTrans&quot; )
	Dim sLeft	As String : sLeft	= GetStringNFNInListForLeft( oLB )
	Dim sRight	As String : sRight	= GetStringNFNInListForRight( oLB )
	Dim sText	As String : sText	= oViewCursor.getString()
	
	With oViewCursor
		.CharEscapementHeight	= 0
		.CharEscapement			= 0
		.setString( sLeft &amp; sText &amp; sRight )
		&apos; снимаем выделение - вправо
		.collapseToEnd()
	End With
	&apos; продолжение поиска, если включена опция
	If oFUI.GetControl( &quot;chBoxFindNext&quot; ).State = 1 Then FUIFind()
End Sub

&apos;***************************************************************************
&apos; для режима преобразования - левая часть
Function GetStringLeft( oLB As Object ) As String
	Select Case oLB.SelectedItemPos
		Case 0 &apos; ... текст (x)
			GetStringLeft = &quot;(&quot;
		Case 1 &apos; ... текст [x]
			GetStringLeft = &quot;[&quot;
		Case 2 &apos; ... текст {x}
			GetStringLeft = &quot;{&quot;
		Case 3 &apos; ... текст &lt;x&gt;
			GetStringLeft = &quot;&lt;&quot;
		Case 4 &apos; ... текст /x/
			GetStringLeft = &quot;/&quot;
		Case 5 &apos; ... текст \x\
			GetStringLeft = &quot;\&quot;
		Case 6 &apos; ... текст ((x))
			GetStringLeft = &quot;((&quot;
		Case 7 &apos; ... текст (((x)))
			GetStringLeft = &quot;(((&quot;
		Case 8 &apos; ... текст {{x}}
			GetStringLeft = &quot;{{&quot;
		Case 9 &apos; ... текст {{{x}}}
			GetStringLeft = &quot;{{{&quot;
		Case 10 &apos; ... текст [[x]]
			GetStringLeft = &quot;[[&quot;
		Case 11 &apos; ... текст [[[x]]]
			GetStringLeft = &quot;[[[&quot;
		Case 12 &apos; ... текст {(x)}
			GetStringLeft = &quot;{(&quot;
		Case Else
			GetStringLeft = &quot;(&quot;
	End Select
End Function

&apos;***************************************************************************
&apos; для режима преобразования - правая часть
Function GetStringRight( oLB As Object ) As String
	Select Case oLB.SelectedItemPos
		Case 0 &apos; ... текст (x)
			GetStringRight = &quot;)&quot;
		Case 1 &apos; ... текст [x]
			GetStringRight = &quot;]&quot;
		Case 2 &apos; ... текст {x}
			GetStringRight = &quot;}&quot;
		Case 3 &apos; ... текст &lt;x&gt;
			GetStringRight = &quot;&gt;&quot;
		Case 4 &apos; ... текст /x/
			GetStringRight = &quot;/&quot;
		Case 5 &apos; ... текст \x\
			GetStringRight = &quot;\&quot;
		Case 6 &apos; ... текст ((x))
			GetStringRight = &quot;))&quot;
		Case 7 &apos; ... текст (((x)))
			GetStringRight = &quot;)))&quot;
		Case 8 &apos; ... текст {{x}}
			GetStringRight = &quot;}}&quot;
		Case 9 &apos; ... текст {{{x}}}
			GetStringRight = &quot;}}}&quot;
		Case 10 &apos; ... текст [[x]]
			GetStringRight = &quot;]]&quot;
		Case 11 &apos; ... текст [[[x]]]
			GetStringRight = &quot;]]]&quot;
		Case 12 &apos; ... текст {(x)}
			GetStringRight = &quot;)}&quot;
		Case Else
			GetStringRight = &quot;)&quot;
	End Select
End Function

&apos;***************************************************************************
&apos; символы слева от номера сноски в списке примечаний
Function GetStringNFNInListForLeft( oLB As Object ) As String
	Select Case oLB.SelectedItemPos
		Case 0 &apos; x Текст ...
			GetStringNFNInListForLeft = &quot;&quot;
		Case 1 &apos; x. Текст ...
			GetStringNFNInListForLeft = &quot;&quot;
		Case 2 &apos; (x) Текст ...
			GetStringNFNInListForLeft = &quot;(&quot;
		Case 3 &apos; (x). Текст ...
			GetStringNFNInListForLeft = &quot;(&quot;
		Case 4 &apos; [x] Текст ...
			GetStringNFNInListForLeft = &quot;[&quot;
		Case 5 &apos; [x]. Текст ...
			GetStringNFNInListForLeft = &quot;[&quot;
		Case 6 &apos; {x} Текст ...
			GetStringNFNInListForLeft = &quot;{&quot;
		Case 7 &apos; {x}. Текст ...
			GetStringNFNInListForLeft = &quot;{&quot;
		Case 8 &apos; &lt;x&gt; Текст ...
			GetStringNFNInListForLeft = &quot;&lt;&quot;
		Case 9 &apos; &lt;x&gt;. Текст ...
			GetStringNFNInListForLeft = &quot;&lt;&quot;
		Case 10 &apos; /x/ Текст ...
			GetStringNFNInListForLeft = &quot;/&quot;
		Case 11 &apos; /x/. Текст ...
			GetStringNFNInListForLeft = &quot;/&quot;
		Case 12 &apos; \x\ Текст ...
			GetStringNFNInListForLeft = &quot;\&quot;
		Case 13 &apos; \x\. Текст ...
			GetStringNFNInListForLeft = &quot;\&quot;
		Case Else
			GetStringNFNInListForLeft = &quot;&quot;
	End Select
End Function

&apos;***************************************************************************
&apos; символы справа от номера сноски в списке примечаний
Function GetStringNFNInListForRight( oLB As Object ) As String
	Select Case oLB.SelectedItemPos
		Case 0 &apos; x Текст ...
			GetStringNFNInListForRight = &quot;&quot;
		Case 1 &apos; x. Текст ...
			GetStringNFNInListForRight = &quot;.&quot;
		Case 2 &apos; (x) Текст ...
			GetStringNFNInListForRight = &quot;)&quot;
		Case 3 &apos; (x). Текст ...
			GetStringNFNInListForRight = &quot;).&quot;
		Case 4 &apos; [x] Текст ...
			GetStringNFNInListForRight = &quot;]&quot;
		Case 5 &apos; [x]. Текст ...
			GetStringNFNInListForRight = &quot;].&quot;
		Case 6 &apos; {x} Текст ...
			GetStringNFNInListForRight = &quot;}&quot;
		Case 7 &apos; {x}. Текст ...
			GetStringNFNInListForRight = &quot;}.&quot;
		Case 8 &apos; &lt;x&gt; Текст ...
			GetStringNFNInListForRight = &quot;&gt;&quot;
		Case 9 &apos; &lt;x&gt;. Текст ...
			GetStringNFNInListForRight = &quot;&gt;.&quot;
		Case 10 &apos; /x/ Текст ...
			GetStringNFNInListForRight = &quot;/&quot;
		Case 11 &apos; /x/. Текст ...
			GetStringNFNInListForRight = &quot;/.&quot;
		Case 12 &apos; \x\ Текст ...
			GetStringNFNInListForRight = &quot;\&quot;
		Case 13 &apos; \x\. Текст ...
			GetStringNFNInListForRight = &quot;\.&quot;
		Case Else
			GetStringNFNInListForRight = &quot;.&quot;
	End Select
End Function

&apos; ==================================================================================================
&apos; 								локализация работы со сносками
&apos; ==================================================================================================
&apos; для хранения сообщений для работы со сносками
Type tFindUpIndexData
	sToContinueSearch			As String &apos; Достигнут конец документа. Следущее слово не найдено. Продолжить поиск с начала?
	sImpossibleToFind	As String &apos; Невозможно найти слово в выделенном объекте.
	sText				As String &apos; текст
	sSText				As String &apos; Текст
	sTitle				As String &apos; Интерактивное преобразование № примечаний в верхнем индексе по шаблону
End Type

Public sFUID As tFindUpIndexData

&apos; ***********************************************************************************************
&apos; инициализация сообщений работы со сносками в зависимости от локали
Sub InitFindUpIndexDataMessage()
	If getOOoLocal() = &quot;ru&quot; OR getOOoLocal() = &quot;uk&quot; Then
		With sFUID
			.sToContinueSearch	= &quot;Достигнут конец документа.&quot; &amp; chr(10) &amp; &quot;Ничего не найдено.&quot; &amp; chr(10) &amp; chr(10) &amp; _
									&quot;Продолжить поиск с начала?&quot;
			.sImpossibleToFind	= &quot;Невозможно найти слово в выделенном объекте.&quot;
			.sText				= &quot;текст&quot;
			.sSText				= &quot;Текст&quot;
			.sTitle				= &quot;Интерактивное преобразование № примечаний в верхнем индексе по шаблону&quot;
		End With
	Else
		With sFUID
			.sToContinueSearch	= &quot;The end of the document is reached. &quot; &amp; chr (10) &amp; &quot;Up Index is not found.&quot; &amp; chr (10) &amp; chr (10) &amp; _
									&quot;To continue search from the beginning?&quot;
			.sImpossibleToFind	= &quot;It is impossible to find a Word in the allocated Object.&quot;
			.sText				= &quot;the text&quot;
			.sSText				= &quot;the Text&quot;
			.sTitle				= &quot;Interactive Transformation № Notes in the top Index on a Pattern&quot;
		End With
	End If
End Sub

&apos; ***********************************************************************************************
&apos; инициализация диалога преобразования номеров примечаний в верхнем индексе по шаблону в зависимости от локали
Sub InitFindUpIndexDlg()
	&apos; инициализация сообщений диалога преобразования номеров примечаний в верхнем индексе по шаблону в зависимости от локали
	InitFindUpIndexDataMessage()
	
	oFUI.getModel.Title	= sFUID.sTitle
	
	If getOOoLocal() = &quot;ru&quot; OR getOOoLocal() = &quot;uk&quot; Then
		With oFUI.getModel
			.lblPatternTransformationNumberNotes.Label			= &quot;1. Шаблон для № примечания в тексте:&quot;
			.lblPatternTransformationNumberInListNotes.Label	= &quot;2. Шаблон для № примечания в списке:&quot;
			.cmdBtnFind.Label		= &quot;Найти&quot;
			.cmdBtnWork.Label		= &quot;Преобразовать для 1.&quot;
			.cmdBtnWorkList.Label	= &quot;Преобразовать для 2.&quot;
			.chBoxFindNext.Label	= &quot;Искать далее после обработки найденного&quot;
			.obtnOnlyNumbers.Label	= &quot;Только цифры&quot;
			.obtnAnySymbols.Label	= &quot;Любые символы&quot;
			.fcSearchMode.Label		= &quot;Режим поиска символов&quot;
			.obtnOnlyUpIndex.Label	= &quot;Только в верхнем индексе&quot;
			.obtnOnlyDonwIndex.Label= &quot;Только в нижнем индексе&quot;
			.obtnAllIndex.Label		= &quot;И в верхнем и в нижнем индексе&quot;
		End With
	Else
		With oFUI.getModel
			.lblPatternTransformationNumberNotes.Label			= &quot;1. the Pattern for № Notes in the Text:&quot;
			.lblPatternTransformationNumberInListNotes.Label	= &quot;2. the Pattern for № Notes in the List:&quot;
			.cmdBtnFind.Label		= &quot;Find&quot;
			.cmdBtnWork.Label		= &quot;Transform for 1.&quot;
			.cmdBtnWorkList.Label	= &quot;Transform for 2.&quot;
			.chBoxFindNext.Label	= &quot;Search following after processing found&quot;
			.obtnOnlyNumbers.Label	= &quot;Only Numbers&quot;
			.obtnAnySymbols.Label	= &quot;Any Symbols&quot;
			.fcSearchMode.Label		= &quot;Mode of searching for symbol&quot;
			.obtnOnlyUpIndex.Label	= &quot;Only in upper index&quot;
			.obtnOnlyDonwIndex.Label= &quot;Only in lower index&quot;
			.obtnAllIndex.Label		= &quot;And in upper and in lower index&quot;
		End With
	End If
End Sub

</script:module>