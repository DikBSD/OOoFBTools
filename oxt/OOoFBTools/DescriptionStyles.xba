<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="DescriptionStyles" script:language="StarBasic">REM  *****  BASIC  *****

Const sConstDescGenre	As String = &quot;/OOoFBTools/DescGenre.txt&quot;
Const sConstDescLang	As String = &quot;/OOoFBTools/DescLange.txt&quot;

Private oTCurs &apos; текстовый курсор
Private oDGDlg As Object
Private oDLDlg As Object

&apos; создание абзаца заданного абзацевого стиля с текстом и выделенными заданными симольными стилями словами
Sub InsertDataAndStyle( sParaStyle, sDataPara, sData1Name, sData2Name, sData1NameStyle, sData2NameStyle )
	&apos; очистка стиля исходного абзаца - на всякий случай
	ClearParaStyle()
	
	Dim oText, oVCurs
	oText = ThisComponent.getText()
	oVCurs = ThisComponent.CurrentController.getViewCursor()
	oTCurs = oText.createTextCursorByRange(oVCurs.getStart())
&apos;	oText.insertControlCharacter(oTCurs, com.sun.star.text.ControlCharacter.PARAGRAPH_BREAK, False)
	If Not SetParagraphStyle( sParaStyle ) Then Exit Sub
	oText.insertString(oTCurs, sDataPara, FALSE)
	
	&apos; ищем данные и помечаем его &quot;его&quot; стилем
	If Not SetSymbolStyle( oTCurs, sData1Name, sData1NameStyle ) Then Exit Sub
	If sData2Name &lt;&gt; &quot;&quot; Then
		If Not SetSymbolStyle( oTCurs, sData2Name, sData2NameStyle ) Then Exit Sub
	End If

	&apos; вставка нового &quot;пустого&quot; абзаца
	oTCurs.gotoEndOfParagraph(False)
	oText.insertControlCharacter(oTCurs, com.sun.star.text.ControlCharacter.PARAGRAPH_BREAK, False)

	&apos; переход на новый абзац - снимаем выделение
	oVCurs = ThisComponent.getCurrentController().getViewCursor()
	oVCurs.gotoEndOfLine(False)
	oVCurs.goRight(0, False)

	&apos; очистка стиля абзаца
	ClearParaStyle()
End Sub

&apos; задание абзацу стиля
Function SetParagraphStyle( sParaStyle As String ) As Boolean
	SetParagraphStyle = False
On Error GoTo Errorhandler
	Dim oSels As Object, oSel As Object, oText As Object
	oText = ThisComponent.Text
	oSels = ThisComponent.getCurrentSelection()
	oSel = oSels.getByIndex(0)
	oSel.ParaStyleName = sParaStyle
	SetParagraphStyle = True
	Exit Function
Errorhandler:
	MsgBox sDSD.sGenreParaStyle &amp; &quot;: &quot; &amp; sParaStyle &amp; chr(10) &amp; sDSD.sNotExistsUserParaStyleList, 64, sDSD.sDescriptionStyle
	SetParagraphStyle = False
End Function

&apos; придание заданным словам символьного стиля
Function SetSymbolStyle( oCursor, sName, sStyle )
	SetSymbolStyle = False
On Error GoTo Errorhandler
	Dim oDocControl : oDocControl = ThisComponent.getCurrentController()
	oCursor.gotoStartOfParagraph(False)
	
	&apos; инициализация позиции курсора
	oTCurs = oCursor.Text.createTextCursor() 
	oTCurs.gotoStartOfParagraph(False)
	oTCurs.gotoRange(oTCurs.getStart(), False)

	&apos; ищем заданное слово
	oTCurs = oCursor.Text.createTextCursorByRange(oCursor)
	&apos; поиск и обработка искомого слова
	If FindNextWordInText( sName ) Then &apos; еще не дошли до конца документа
		oDocControl.Select( oTCurs ) &apos; выделяем найденное
		Dim oSel, oSels
		oSels = ThisComponent.getCurrentSelection()
		oSel = oSels.getByIndex(0)
		oSel.CharStyleName = sStyle
		SetSymbolStyle = True
		Exit Function
	End If
Errorhandler:
	MsgBox sDSD.sGenreSymbolStyle &amp; &quot;: &quot; &amp; sStyle &amp; chr(10) &amp; sDSD.sNotExistsUserSymbolStyleList, 64, sDSD.sDescriptionStyle
	SetSymbolStyle = False
End Function

&apos; поиск следующего заданного слова в абзаце
Function FindNextWordInText( sFind ) As Boolean
	Dim oDesc, Found
	oDesc = ThisComponent.createSearchDescriptor()
	oDesc.SearchRegularExpression = False
	oDesc.SearchString = sFind
	
	oTCurs.collapseToEnd
	Found = ThisComponent.findNext(oTCurs.getStart(), oDesc)
	
	if IsNull(Found) Then &apos; ничего не нашли
		FindNextWordInText = False
		Exit Function
	End If

	oTCurs = Found.Text.createTextCursor()
	oTCurs.gotorange(Found.getStart(), False)
	oTCurs.gotorange(Found.getEnd(), True)

	FindNextWordInText = True &apos; нашли 
End Function

&apos; ////////////////////////////// контролы /////////////////////////

&apos; //////////////// вставка Языка в Служебную область ///////////////////
&apos; запуск диалога работы со списком выбранных жанров для книги
Sub ViewDescGenreDlg()
	DialogLibraries.LoadLibrary(&quot;OOoFBTools&quot;)
	oDGDlg = CreateUnoDialog( DialogLibraries.OOoFBTools.DescGenreDlg )
	
	&apos; инициализация формы вставки Жанров Книги в Служебную области Текста
	InitDescGenreDlg()
	
	If oDGDlg.Model.obDGFB21.State = 1 Then
		InitDEFB21() &apos; Инициализация жанрами схемы FictionBook 2.1
	Else
		InitDEFB22() &apos; Инициализация жанрами схемы FictionBook 2.2
	End If
	
	With oDGDlg.Model
		.Height	= 130
		.Width	= 265
		.numMatch.Value = &quot;&quot;
		.lbGenres.StringItemList = sGLN()
	End With
	&apos; считаем положение диалога из файла настроек
	Dim nX As Integer, nY As Integer
	ReadXYFormPos( getUserPath() &amp; sConstDescGenre, nX, nY )
	oDGDlg.setPosSize( nX, nY, 130, 265, com.sun.star.awt.PosSize.POS )

	oDGDlg.execute()
End Sub

Sub InitDEFB21()
	&apos; Инициализация диалога работы со списком Избранных Жанров  жанрами схемы FictionBook 2.1
	GenreFB21()

	With oDGDlg.Model
		.Title = sDSD.sInsertGenresToDescriptionZone &amp; &quot; - &quot; &amp; sGD.sSchemeFB21
		.lbGenres.StringItemList = sGLN()
	End With

End Sub

Sub InitDEFB22()
	&apos; Инициализация диалога работы со списком Избранных Жанров жанрами схемы FictionBook 2.2
	GenreFB22()

	With oDGDlg.Model
		.Title = sDSD.sInsertGenresToDescriptionZone &amp; &quot; - &quot; &amp; sGD.sSchemeFB22
		.lbGenres.StringItemList = sGLN()
	End With
	
End Sub

&apos; Добавить жанр в список Избранного
Sub DGAdd()
	Dim sGenreName As String, i As Integer, aArray() As String
	Dim sTitle As String : sTitle = sDSD.sGenreAddToList
	Dim sGenre As String : sGenre = &quot;&quot;
	For i=0 To UBound(sGLN())
		If sGLN(i) = oDGDlg.getControl(&quot;lbGenres&quot;).SelectedItem Then
			sGenreName = oDGDlg.getControl(&quot;lbGenres&quot;).SelectedItem
			sGenre = sGLC(i)
			Exit For
		End If
	Next i

	&apos; ищем выделенный жанр в списке
	aArray = oDGDlg.Model.lbSelectedGenres.StringItemList
	For i=0 To UBound(aArray())
		If aArray(i) = sGenreName Then
			MsgBox sGD.sGenreEliteSelected &amp; &quot; &quot;  &amp; &quot;&quot;&quot;&quot; &amp; sGenreName &amp; &quot;&quot;&quot;&quot; &amp; chr(10) &amp; _
					sDSD.sGenreIsExists &amp; chr(10) &amp; _
					sGD.sGenreEliteSelectOther, 64, sTitle
			oDGDlg.getControl(&quot;lbGenres&quot;).SetFocus()		
			Exit Sub
		End If
	Next i
	
	If sGenre = &quot;?&quot; Then
		MsgBox sGD.sGenreGroup, 64, sTitle
	ElseIf sGenreName &lt;&gt; &quot;&quot; Then
		Dim sMatch As String
		If oDGDlg.Model.numMatch.Value = &quot;&quot; Then
			sMatch = &quot;&quot;
		Else
			sMatch = oDGDlg.Model.numMatch.Value
		End If
		oDGDlg.Model.numMatch.Value = &quot;&quot;

		sGenreName = sGenreName &amp; &quot; -&gt; &quot; &amp; sMatch
		oDGDlg.getControl(&quot;lbSelectedGenres&quot;).AddItem(sGenreName, oDGDlg.getControl(&quot;lbSelectedGenres&quot;).ItemCount) &apos; в конец списка
		oDGDlg.getControl(&quot;lbSelectedGenres&quot;).selectItem(sGenreName, True)
	Else
		MsgBox sGD.sGenreEliteSelectFromList, 64, sTitle
	End If
	oDGDlg.getControl(&quot;lbGenres&quot;).SetFocus()
	
End Sub

Sub DGRemove()
	&apos; Удалить жанр из списка Избранного
	Dim oLB As Object, aArray() As String
	Dim sTitle As String : sTitle = sDSD.sGenreRemove
	oLB = oDGDlg.getControl(&quot;lbSelectedGenres&quot;)
	If oLB.SelectedItem = &quot;&quot; Then
		MsgBox sDSD.sGenreSelectForRemove, 64, sTitle
		Exit Sub
	End If
	
	If	MsgBox( sDSD.sGenreQuestionRemove &amp;  chr(10) &amp; &quot;&quot;&quot;&quot; &amp; oLB.SelectedItem &amp; &quot;&quot;&quot;?&quot;, 32 + 4 + 256, sTitle ) = 6 Then
		Dim sItem As String, i As Integer
		If (oLB.SelectedItemPos &gt;= 0) AND (oLB.SelectedItemPos &lt; oLB.ItemCount-1) Then
			i = oLB.SelectedItemPos+1
		ElseIf oLB.SelectedItemPos = oLB.ItemCount-1 Then
			i = oLB.ItemCount-2
		End If
		If oLB.ItemCount &gt; 1 Then
			sItem = oLB.getItem(i)
			oLB.RemoveItems(oLB.SelectedItemPos,1)
			oLB.selectItem(sItem, True)
		Else
			oLB.RemoveItems(oLB.SelectedItemPos,1)
		End If
	End If
End Sub

Sub InsertDescGenre()
	Dim aArray() As String
	aArray = oDGDlg.Model.lbSelectedGenres.StringItemList
	If UBound( aArray() ) = -1 Then
		MsgBox sDSD.sGenreInsertNotExists, 64, sDSD.sInsertGenresToDescriptionZone
		Exit Sub
	End If
	
	&apos; записываем настройки диалога
	SaveSettings( getUserPath() &amp; sConstDescGenre, oDGDlg )
	&apos; инициализация Пользовательских Стилей по-умолчанию в зависимости от локали
	SetDefaultStylesLocalInVars()
	&apos; читаем стили из файла и заносим их в переменные
	ReadStyles( getUserPath() &amp; sConstStyles, False )
	
	Dim i As Integer
	Dim sGenreName As String, sGenreMath As String, sGanrePara As String, sItem As String
	For i=0 To UBound( aArray() )
		&apos; определяем Название Жанра и его Match
		sItem = aArray(i)
		sGenreName = Trim( Mid( sItem, 1, InStr( sItem, &quot; -&gt; &quot; ) ) )
		sGenreMath = Trim( Mid( sItem, InStr( sItem, &quot; -&gt; &quot; )+4, Len( sItem ) ) )
		sGanrePara = &quot;Genre of Book: &quot; &amp; sGenreName &amp; &quot;, Match: &quot; &amp; sGenreMath
		InsertDataAndStyle( sStyle_Genre, sGanrePara, sGenreName, sGenreMath, sStyle_GenreName, sStyle_GenreMatch  )
	Next i
	oDGDlg.endExecute()
End Sub

Sub DescGenreElite_Focus()
	Dim aArray() As String
	ReadFileInArray( aArray(), getUserPath() &amp; sConstMyGenre )
	oDGDlg.Model.lbDescGenreElite.StringItemList = aArray
End Sub

&apos; вставка Избранного Жанра в основной бокс Жанров
Sub InsertGEToDescGenreBox( oEvent )
	&apos; убираем chr(10) изназвания жанра - строки листбокса
	Dim sCR As String : sCR = oEvent.source.getSelectedItem
	If InStr(sCR, chr(10)) &gt; 0 Then
		sCR = ReplaceInString( sCR, chr(10), &quot;&quot;, False )
	End If
	oDGDlg.getControl(&quot;lbGenres&quot;).selectItem( sCR, True )
End Sub


&apos; //////////////// вставка Языка в Служебную область ///////////////////
&apos; запуск диалога работы с языками книги
Sub ViewDescLangDlg()
	DialogLibraries.LoadLibrary(&quot;OOoFBTools&quot;)
	oDLDlg = CreateUnoDialog(DialogLibraries.OOoFBTools.DescLangDlg)
	
	&apos; инициализация формы вставки Языка Книги в Служебную области Текста
	InitDescLangDlg()

	MakeLangList( sLangList() )
	With oDLDlg.Model
		.Height	= 46
		.Width	= 159
		.lbLangBook.StringItemList		= sLangList()
		.lbLangOriginal.StringItemList	= sLangList()
	End With
	oDLDlg.getControl( &quot;lbLangBook&quot;).selectItem(&quot;ru&quot;, True )
	oDLDlg.getControl( &quot;lbLangOriginal&quot; ).AddItem( &quot; &quot;, 0 )
	
	&apos; считаем положение диалога из файла настроек
	Dim nX As Integer, nY As Integer
	ReadDlgSettings( getUserPath() &amp; sConstDescLang, oDLDlg, nX, nY )
	oDLDlg.setPosSize( nX, nY, 49, 159, com.sun.star.awt.PosSize.POS )
	
	oDLDlg.execute()
End Sub

Sub InsertDescLang()
	&apos; читаем стили из файла и заносим их в переменные
	&apos; записываем настройки диалога
	SaveSettings( getUserPath() &amp; sConstDescLang, oDLDlg )
	&apos; инициализация Пользовательских Стилей по-умолчанию в зависимости от локали
	SetDefaultStylesLocalInVars()&apos; инициализация Пользовательских Стилей по-умолчанию в зависимости от локали
	SetDefaultStylesLocalInVars()&apos; инициализация Пользовательских Стилей по-умолчанию в зависимости от локали
	SetDefaultStylesLocalInVars()
	ReadStyles( getUserPath() &amp; sConstStyles, False )

	Dim sLangBook As String, sLangOriginal As String, sLangPara As String
	sLangBook = oDLDlg.getControl( &quot;lbLangBook&quot; ).SelectedItem
	sLangOriginal = oDLDlg.getControl( &quot;lbLangOriginal&quot; ).SelectedItem
	sLangPara = &quot;Language of Book: &quot; &amp; sLangBook
	If Trim( sLangOriginal ) &lt;&gt; &quot;&quot; Then
		sLangPara = sLangPara &amp; &quot;, Original: &quot; &amp; sLangOriginal
	End If
	InsertDataAndStyle( sStyle_Lang, sLangPara, sLangBook, sLangOriginal, sStyle_LangBook, sStyle_LangOriginal  )
	oDLDlg.endExecute()
End Sub

</script:module>