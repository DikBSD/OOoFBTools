<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="ExportToFB21" script:language="StarBasic">
&apos; ===========================================================================================================================
&apos; 											модуль формирования элементов fb2 структуры
&apos; ===========================================================================================================================
Option Explicit

Public Const sConvertorName						As String = &quot;ExportToFB2.1&quot;						&apos; название конвертера
Public Const sConstFB2ConverterDialogSettings	As String = &quot;FB2ConverterDialogSettings.txt&quot;	&apos; файл настроек диалога Конвертера

Public oExportToFB21Dlg	As Object
Public oProgressBar		As Object

Public sCurDocFile			As String &apos; обрабатываемый документ
Public oTextOutputStream	As Object
Public sBodyParagraphs()	As String &apos; массив хранит &quot;обработанные&quot; абзацы Книги

Public lCurrentElement As Long &apos; номер текущего элемента структуры - для создания текста документа

Public bELForStartAnnot As Boolean
Public asFNPars() As String &apos; массив абзацев сноски с ее &quot;аттрибутами&quot; (для печати)

Public sBookAnnotation() As String &apos; массив хранит &quot;обработанную&quot; Аннотацию на Книгу
Private saTranslitLetters(66)	As String &apos; для транслитерации

&apos; ===========================================================================================================================
&apos; 												Работа контролов и формы Конвертера
&apos; ===========================================================================================================================
&apos; перезапуск документа (возвращает oDoc)
Function ReOpenDoc( oDoc As Object ) As Object
&apos;	SaveDocIsModified( oDoc )
	Dim sUrl As String : sUrl = oDoc.getURL()
	CloseDoc( oDoc )
	ReOpenDoc = LoadDocFromUrl( sUrl )
End Function

&apos; Запуск конвертертирования документа в fb2 формат
Sub ExportToFB21DlgExec()
	&apos; инициализация сообщений основной формы конвертера в зависимости от локали
	InitExportToFB21DlgMessage()
	
	Dim oDoc As Object : oDoc = ThisComponent
	&apos; проверка на наличие вложенных таблиц в ячейки других таблиц
	If isInnerTableExsist( oDoc ) = True Then
		Dim Ret As Integer
		Ret = MsgBox( sETFB2DD.sFB2ExportInnerTable, MB_YESNOCANCEL + MB_DEFBUTTON1 + MB_ICONQUESTION, sConvertorName )
		If Ret = IDYES Then
			&apos; прервать конвертацию и запустить инструмент преобразования вложенных таблиц в текст
			InnerTableToTextStart()
		ElseIf Ret = IDNO Then
			&apos; продолжаем конвертацию
			ExportToFB21Dlg( oDoc )
		ElseIf Ret = IDCANCEL Then
			&apos; прервать конвертацию и вернуться к тексту документа
			Exit Sub		
		End If
	Else
		&apos; продолжаем конвертацию
		ExportToFB21Dlg( oDoc )
	End If
End Sub

&apos; Запуск Формы конвертера
Sub ExportToFB21Dlg( oDoc As Object )
	&apos; Задаем настройки в переменные по умолчанию
&apos;	SetDefaultSettingsToVars()
&apos;	&apos; считываем настройки из файла в переменные
&apos;	LoadSettingsToVars()
		
	&apos; Предварительная обработка текста: удаление неиспользуемых закладок (на них ничто не ссылается) во всем Документе (текст, Врезки, таблицы)
	If bNotUsedBookmarks Then
		&apos; Предварительная обработка текста: удаление неиспользуемых закладок (на них ничто не ссылается) во всем Документе (текст, Врезки, таблицы)
		DeleteNotUsedBookmarksInDocument()
	End If
	
	&apos; основные проверки
	If oDoc.hasLocation() Then
		sCurDocFile = oDoc.getURL()
	Else
		MsgBox sETFB2DD.sFB2ExportSaveMessage, 64, sConvertorName
		Exit Sub
	End If
	
	SaveDocIsModified( oDoc )
	If DocRasterGraphicsCount() &gt; 0 Then &apos; количество растровой графики в документе
		&apos; перезапуск документа
		oDoc = ReOpenDoc( oDoc )
	End If
	
	oProgressBar = oDoc.CurrentController.StatusIndicator
	oProgressBar.start( sETFB2DD.sFB2ExportProgressBarCreateDialog + &quot;, &quot; + sETFB2DD.sFB2ExportProgressBarInit, 5 )
	oProgressBar.setValue(0)
	
	&apos; Создание формы
&apos;	DialogLibraries.LoadLibrary( &quot;OOoFBTools&quot; )
	If Not GlobalScope.DialogLibraries.isLibraryLoaded( &quot;OOoFBTools&quot; ) Then
    	GlobalScope.DialogLibraries.LoadLibrary( &quot;OOoFBTools&quot; )
	End If
	oExportToFB21Dlg = CreateUnoDialog( GlobalScope.DialogLibraries.OOoFBTools.ExportToFB21Dlg )
	oProgressBar.setValue(1)
	
	&apos; меняем расширение на fb2
	Dim sFile() As String, i As Long
	sFile = Split(sCurDocFile, &quot;.&quot;)
	If UBound(sFile) &gt; 0 Then
		For i = 0 To UBound(sFile)
			sFile(UBound(sFile)) = &quot;fb2&quot;
		Next i
		sCurDocFile = Join(sFile, &quot;.&quot;)
	Else &apos; файл без точки расширения
		sCurDocFile = sCurDocFile &amp; &quot;.fb2&quot;
	End If
	
	&apos; инициализация основной формы конвертера в зависимости от локали
	InitExportToFB21Dlg()
	
	&apos; считаем положение диалога из файла настроек
	LoadExportToFB21DlgSettings()
	oExportToFB21Dlg.Model.fb2PathTextField.Text = ConvertFromUrl( sCurDocFile )
	oProgressBar.setValue(2)

	&apos; загружаем стили в переменные
	SetFB2LocalStylesToVars()
	&apos; инициализация по-умолчанию названий
	InitServiceDlgMessage()
	&apos; Задаем настройки в переменные по умолчанию
	SetDefaultSettingsToVars()
	oProgressBar.setValue(3)
	&apos; только теперь считываем настройки из файла в переменные
	LoadSettingsToVars()
	oProgressBar.setValue(4)
	&apos; инициализация массива транслитерации
	MakeTranslitLettersList( saTranslitLetters() )
	oProgressBar.setValue(5)
	
	oProgressBar.end
	
	If GetOS() = &quot;UNIX&quot; Then &apos; для Unix
		&apos; проверка на наличие утилит в Unix системе
		If _xmlPath = &quot;&quot; Then
			_xmlPath = UnixXmllintPath()
		End If
		Dim oProgressLabel As Object : oProgressLabel = oExportToFB21Dlg.getControl(&quot;exportLabel&quot;)
		If _xmlPath = &quot;&quot; Then
			oProgressLabel.Text = oProgressLabel.Text &amp; sNYMD.sNoXmllint &amp; chr(10)
		End If
	End If
	
	oExportToFB21Dlg.execute()
End Sub

&apos;**************************************************************************
&apos; запуск экспорта документа в fb2 формат
Sub ExportDoc()
	Dim oDoc As Object : oDoc = ThisComponent
	Dim nVar As Long
	&apos; нужно ли задавать данные описания книги по умолчанию?
	If bDefaultDescription Then
		SetDefaultBookDescription()
		SaveDocIsModified( oDoc )
	End If
	
	&apos; Есть ли хоть одно fb2 свойство в документе?
	If Not IsFB2NotFlagPropertyIsExsist() Then
		nVar = MsgBox( sETFB2DD.sFB2ExportFB2NotFB2Property &amp; chr(10) &amp; sETFB2DD.sFB2ExportFB2StartFB2PropEditor, _
    					16 + 1 + 128, sConvertorName )
    	If nVar = 1 Then
    		oExportToFB21Dlg.endExecute()
    		FB2PropertiesEditorDlgExec()
    	End If
    	Exit Sub
	End If
	
	&apos; все ли обязательные fb2-свойства документа заполнены?
	Dim sErrorMess As String : sErrorMess = IsFB2BindingPropertiesCorrect()
	If sErrorMess &lt;&gt; &quot;&quot; Then
    	nVar = MsgBox( sETFB2DD.sFB2ExportRequiredPropNotFound &amp; chr(10) &amp; sErrorMess &amp; chr(10) &amp; sETFB2DD.sFB2ExportFB2StartFB2PropEditor, _
    					16 + 1 + 128, sConvertorName )
    	If nVar = 1 Then
    		oExportToFB21Dlg.endExecute()
    		FB2PropertiesEditorDlgExec()
    	End If
    	Exit Sub
    End If
    
	&apos; задан ли путь к fb2-файлу?
	If Trim( oExportToFB21Dlg.getControl(&quot;fb2PathTextField&quot;).Text ) = &quot;&quot; Then
    	MsgBox sETFB2DD.sFB2ExportFB2PathNotFound, 64, sConvertorName
    	oExportToFB21Dlg.getControl(&quot;fb2PathTextField&quot;).setFocus()
    	Exit Sub
    Else
    	&apos; перезапись существующего fb2 файла без подтверждения
    	If oExportToFB21Dlg.getControl(&quot;ReplaceExistFB2CheckBox&quot;).State = 1 Then
    		If FileExists( ConvertToUrl( oExportToFB21Dlg.Model.fb2PathTextField.Text ) ) Then
    			Kill ConvertToUrl( oExportToFB21Dlg.Model.fb2PathTextField.Text )
    		End If
    	Else
   			If FileExists( ConvertToUrl( oExportToFB21Dlg.Model.fb2PathTextField.Text ) ) Then
	    		MsgBox sETFB2DD.sFB2ExportEnterAnotherFB2Path, 64, sConvertorName
    			oExportToFB21Dlg.getControl(&quot;fb2PathTextField&quot;).setFocus()
    			Exit Sub
    		End If
    	End If 
    End If
    
    With oExportToFB21Dlg
		.getControl(&quot;fb2PathTextField&quot;).Enable = False
		.getControl(&quot;fb2PathSaveAsCmdBtn&quot;).Enable = False
		.getControl(&quot;cmdbtnExportToFB21&quot;).Enable = False
		.getControl(&quot;cmdbtnCancel&quot;).Enable = False
		.getControl(&quot;ReplaceExistFB2CheckBox&quot;).Enable = False
		.getControl(&quot;ZipFB2CheckBox&quot;).Enable = False
		.getControl(&quot;fb2ZipOptionButton&quot;).Enable = False
		.getControl(&quot;fbzOptionButton&quot;).Enable = False
	End With
    
	&apos; записываем расположение на экране диалога Конвертера в файл настроек
	SaveExportToFB21DlgSettings()

	&apos; создаем OOoFBToolsTemp папку
	If Dir( getOOoFBToolsTempPath(), 16 ) = &quot;&quot; Then
		MkDir getOOoFBToolsTempPath()
	End If

	oProgressBar.start( sETFB2DD.sFB2ExportProgressBarAnalysis, oDoc.ParagraphCount + 50 )
&apos;	oProgressBar.start( sETFB2DD.sFB2ExportProgressBarAnalysis, oDoc.ParagraphCount )
	oProgressBar.setValue( 0 )
	
	Dim oProgress As Object : oProgress = oExportToFB21Dlg.getControl(&quot;exportProgressBar&quot;)
	If bFENoteSeparately = True Then
		oProgress.setRange(0, 7)
	Else
		oProgress.setRange(0, 6)
	End If
	oProgress.setValue(0)
	
	Dim oProgressLabel As Object : oProgressLabel = oExportToFB21Dlg.getControl(&quot;exportLabel&quot;)	
	oProgressLabel.Text = &quot;1. &quot; &amp; sETFB2DD.sFB2ExportProgressBarCovers &amp; &quot; … &quot;
	
	&apos; если есть картинки (ДО абзаца со стилем Названия Книги), то сначала формируем тэги обложек
	Dim CoverCount As Long : CoverCount = -1
	If IsStyleExists( sStyleBookTitle ) And ( oDoc.getGraphicObjects().Count &gt; 0 Or oDoc.getDrawPage().Count &gt; 0) Then
		CoverCount = MakeCoverParser()
	End If
	If CoverCount = -1 Then
		oProgressLabel.Text = oProgressLabel.Text &amp; sETFB2DD.sFB2ExportProgressNotFound &amp; &quot;.&quot; &amp; chr(10)
	Else
		oProgressLabel.Text = oProgressLabel.Text &amp; sETFB2DD.sFB2ExportProgressFound &amp; CoverCount+1 &amp; &quot;.&quot; &amp; chr(10)
	End If
	oProgress.setValue(1)
	
	oProgressLabel.Text = oProgressLabel.Text &amp; &quot;2. &quot; &amp; sETFB2DD.sFB2ExportProgressBarAnalysis &amp; &quot; … &quot;
	
&apos;	oExportToFB21Dlg.endExecute()
	
	&apos; запускаем парсинг всего текста
	DocumentParser()
	oProgressLabel.Text = oProgressLabel.Text &amp; sETFB2DD.sFB2ExportProgressDone &amp; chr(10)
	
	oProgress.setValue(2)
	oProgressLabel.Text = oProgressLabel.Text &amp; &quot;3. &quot; &amp; sETFB2DD.sFB2ExportProgressBarCreate &amp; &quot; … &quot; &amp; chr(10)
	
	&apos; ================== Создание fb2 файла ===========================
	Dim oFileAccess As Object : oFileAccess = CreateUnoService(&quot;com.sun.star.ucb.SimpleFileAccess&quot;)
	oTextOutputStream = CreateUnoService(&quot;com.sun.star.io.TextOutputStream&quot;)
	Dim oOutputStream As Object : oOutputStream = oFileAccess.openFileWrite( ConvertToUrl( oExportToFB21Dlg.Model.fb2PathTextField.Text ) )
	oOutputStream.truncate()
	oTextOutputStream.setOutputStream( oOutputStream )

	Dim sFB2Encoding As String : sFB2Encoding = GetEncodingFromProperty()
	&apos; если в тексте есть маркерные списки, то экспортируем fb2-файл в UTF-8
	If bSaveUTF8 And bMarker Then sFB2Encoding = &quot;utf-8&quot;
	&apos; если в тексте есть хоть один неразрывный дефис или юникодный маркер, то экспортируем в utf-8
	If IsNoBreakDefExsist() OR IsUnicodeMarkerExistsInText() Then sFB2Encoding = &quot;utf-8&quot;
	&apos; если в документе были проставлены ударения над русскими гласными (в свойстве _fb2_AccentMark занесено True )
	If GetStringProperty( _fb2_AccentMark ) &lt;&gt; &quot;&quot; Then sFB2Encoding = &quot;utf-8&quot;
	oTextOutputStream.setEncoding( sFB2Encoding )
	
	&apos; создание fb2 файла
	oProgressBar.start( sETFB2DD.sFB2ExportProgressBarCreate, UBound( sBodyParagraphs() ) )
	oProgressBar.setValue(0)
	&apos; печатаем данные из &lt;description&gt;
	SaveDescription( sFB2Encoding, False )
	oProgress.setValue(3)
	
	&apos; печатаем данные из &lt;body&gt;
	oTextOutputStream.writeString(&quot;&lt;body&gt;&quot; &amp; chr(10))
	SaveBody()
	oProgress.setValue(4)
	oTextOutputStream.writeString(&quot;&lt;/body&gt;&quot; &amp; chr(10))
	
	&apos; сохранение сносок
	If bFENoteSeparately = True Then &apos; в разные блоки
		&apos; сохранение блока сносок (примечания)
		oProgressLabel.Text = oProgressLabel.Text &amp; &quot;4. &quot; &amp; sETFB2DD.sFB2ExportProgressBarFootnote &amp; &quot; … &quot;
		Dim imaxProgress As Long
		If UBound( vFootnoteText() ) &lt;&gt; -1 Then imaxProgress = UBound( vFootnoteText() )
		oProgressBar.start( sETFB2DD.sFB2ExportProgressBarFootnote, imaxProgress )
		oProgressBar.setValue(0)
		If SaveNotes( True ) &gt; 0 Then
			oProgressLabel.Text = oProgressLabel.Text &amp; sETFB2DD.sFB2ExportProgressFound &amp; UBound( vFootnoteText() )+1 &amp; &quot;.&quot;
		Else
			oProgressLabel.Text = oProgressLabel.Text &amp; sETFB2DD.sFB2ExportProgressNotFound &amp; &quot;.&quot;
		End If
		oProgressLabel.Text = oProgressLabel.Text &amp; chr(10)
		oProgress.setValue(5)
	
		&apos; сохранение блока концевых сносок (комментарии)
		oProgressLabel.Text = oProgressLabel.Text &amp; &quot;5. &quot; &amp; sETFB2DD.sFB2ExportProgressBarEndnote &amp; &quot; … &quot;
		If UBound( vEndnoteText() ) &lt;&gt; -1 Then imaxProgress = UBound( vEndnoteText() )
		oProgressBar.start( sETFB2DD.sFB2ExportProgressBarEndnote, imaxProgress )
		oProgressBar.setValue(0)
		If SaveNotes( False ) &gt; 0 Then
			oProgressLabel.Text = oProgressLabel.Text &amp; sETFB2DD.sFB2ExportProgressFound &amp; UBound( vEndnoteText() )+1 &amp; &quot;.&quot;
		Else
			oProgressLabel.Text = oProgressLabel.Text &amp; sETFB2DD.sFB2ExportProgressNotFound &amp; &quot;.&quot;
		End If
		oProgressLabel.Text = oProgressLabel.Text &amp; chr(10)
	Else
		oProgressLabel.Text = oProgressLabel.Text &amp; &quot;4. &quot; &amp; sETFB2DD.sFB2ExportProgressBarFootEndnote &amp; &quot; … &quot;
		If SaveNotesToComonBlock() &gt; 0 Then
			oProgressLabel.Text = oProgressLabel.Text &amp; sETFB2DD.sFB2ExportProgressFound &amp; UBound( vFootnoteText() )+1 &amp; &quot;.&quot; &amp; chr(10)
		Else
			oProgressLabel.Text = oProgressLabel.Text &amp; sETFB2DD.sFB2ExportProgressNotFound &amp; &quot;.&quot; &amp; chr(10)
		End If
	End If
	
	&apos; печатаем коды картинок, если они есть
	If bFENoteSeparately = True Then
		oProgress.setValue(6)
		oProgressLabel.Text = oProgressLabel.Text &amp; &quot;6. &quot; &amp; sETFB2DD.sFB2ExportProgressBarGraphics &amp; &quot; … &quot;
	Else
		oProgress.setValue(5)
		oProgressLabel.Text = oProgressLabel.Text &amp; &quot;5. &quot; &amp; sETFB2DD.sFB2ExportProgressBarGraphics &amp; &quot; … &quot;
	End if
	If UBound(Images()) &lt;&gt; -1 Then
		oProgressBar.start( sETFB2DD.sFB2ExportProgressBarGraphics, UBound( Images() ) )
		oProgressBar.setValue(0)
		SaveImages()
		oProgressLabel.Text = oProgressLabel.Text &amp; sETFB2DD.sFB2ExportProgressFound &amp; UBound( Images() )+1 &amp; &quot;.&quot; &amp; chr(10)
	Else
		oProgressLabel.Text = oProgressLabel.Text &amp; sETFB2DD.sFB2ExportProgressNotFound &amp; &quot;.&quot; &amp; chr(10)
	End If
	If bFENoteSeparately = True Then
		oProgress.setValue(7)
	Else
		oProgress.setValue(6)
	End If
	
	oTextOutputStream.writeString(&quot;&lt;/FictionBook&gt;&quot; &amp; chr(10))
	oTextOutputStream.closeOutput()
	oProgressBar.End
	
	&apos; запустить полученный файл на валидацию, если нужно
	Dim sFB2File	As String : sFB2File	= oExportToFB21Dlg.Model.fb2PathTextField.Text
	Dim sEndMessage	As String : sEndMessage	= sETFB2DD.sFB2ExportEnd
	Dim sMess		As String : sMess		= sEndMessage &amp; chr(10) &amp; chr(10)
	
	Dim sValidateResult As String
	If bValidate Then
		sValidateResult = Validate( sFB2File, GetWorkFB2Schema() ) &apos;валидация результата
	End If
	
	Dim FB2Zip	As String : FB2Zip	= &quot;&quot;
	Dim Ext		As String : Ext		= &quot;&quot;
	&apos; сжатие fb2 файла в zip
	If oExportToFB21Dlg.getControl(&quot;ZipFB2CheckBox&quot;).State = 1 Then
    	If FileExists( sFB2File ) Then
        	Dim Log As String : Log = getOOoFBToolsTempPath() &amp; NativeSeparator() &amp; &quot;log_zip.txt&quot;
            If FileExists( Log ) Then
            	Kill Log
            End If
        	        	        
        	If oExportToFB21Dlg.getControl(&quot;fb2ZipOptionButton&quot;).State = True Then
        		Ext = &quot;.fb2.zip&quot;
        	Else
        		Ext	= &quot;.fbz&quot;
        	End If
        	        	        
        	&apos; транслитерация строки (только для русских букв)
        	Dim FB2Name As String : FB2Name = getFileName( sFB2File )
        	Dim TranlitFB2Name As String : TranlitFB2Name = RusTransliterationString( saTranslitLetters(), FB2Name )
        	Dim NewTranslatedPath As String : NewTranslatedPath = getPathDir(sFB2File) &amp; NativeSeparator() &amp; TranlitFB2Name
        	        	        
        	&apos; была ли произведена транслитерация
        	Dim IsTransliteration As Boolean : IsTransliteration = False
        	If sFB2File = NewTranslatedPath Then
        		IsTransliteration = False
        	Else
        		IsTransliteration = True
        	End If
        	
        	&apos;транслитерация ИМЕНИ файла
        	If IsTransliteration = True Then
        		If FileExists( NewTranslatedPath ) Then
        			Kill NewTranslatedPath
        	    End If
        	    Name sFB2File As NewTranslatedPath
        	End If
        	        	        
        	FB2Zip = FilePathWithoutExt( NewTranslatedPath ) &amp; Ext
        	Dim Script As String
        	If GetOS() = &quot;WIN&quot; Then &apos; Для Windows
        		&apos;Script = WindowsZipPath() &amp; &quot; a -tzip -mx7 &quot; &amp; &quot;&quot;&quot;&quot; &amp; FB2Zip &amp; &quot;&quot;&quot;&quot; &amp; &quot; &quot; &amp; &quot;&quot;&quot;&quot; &amp; NewTranslatedPath &amp; &quot;&quot;&quot;&quot;
				Script = &quot;zip -j -9&quot; &amp; &quot; &quot; &amp; &quot;&quot;&quot;&quot; &amp; FB2Zip &amp; &quot;&quot;&quot;&quot; &amp; &quot; &quot; &amp; &quot;&quot;&quot;&quot; &amp; NewTranslatedPath &amp; &quot;&quot;&quot;&quot;
        	    Shell( Script, 2, &quot;&quot;, true ) &apos; 2 - окно консоли &quot;свернуто&quot;
        	ElseIf GetOS() = &quot;UNIX&quot; Then &apos; для Nix систем
        		Script = &quot;#!/bin/sh&quot; &amp; chr(10) &amp; &quot;/usr/bin/python -c &quot;&quot;import zipfile; import zlib; z = zipfile.ZipFile(&apos;&quot; &amp; FB2Zip &amp; &quot;&apos;, &apos;w&apos;, zipfile.ZIP_DEFLATED, zlib.Z_BEST_COMPRESSION); z.write(&apos;&quot; &amp; NewTranslatedPath &amp; &quot;&apos;, &apos;&quot; &amp; TranlitFB2Name &amp; &quot;&apos;); z.close()&quot;&quot;&quot;
        	    Dim ScriptPath As String : ScriptPath = getOOoFBToolsTempPath() &amp; &quot;/fb2_zip.sh&quot; 
        	    SaveText( ScriptPath, Script, &quot;utf-8&quot; )
        	    Shell( &quot;/bin/sh&quot;, 1, ScriptPath, true )
        	End If
        	If FileExists( FB2Zip ) Then
        		oProgressLabel.Text = oProgressLabel.Text &amp; sETFB2DD.sZipOk
        	    Kill NewTranslatedPath
        	End If

        	Dim LangNameToBack As String
        	If IsTransliteration = True Then
        		&apos; переименовывание архива обратно в язык локали
        	    Dim FB2ZipWithoutExt As String
        	    FB2ZipWithoutExt = FilePathWithoutExt( FB2Zip )
        	    FB2ZipWithoutExt = FilePathWithoutExt( FB2ZipWithoutExt )
        	    LangNameToBack = FilePathWithoutExt( sFB2File ) &amp; Ext
        	    If FileExists( LangNameToBack ) Then
        	    	Kill LangNameToBack
        	    End If
        	    Name FB2Zip As LangNameToBack
			Else
        		LangNameToBack = FB2Zip
        	End If
        
        	oProgressLabel.Text = oProgressLabel.Text &amp; chr(10)
        	oProgressLabel.Text = oProgressLabel.Text &amp; sETFB2DD.sFB2ExportEnd &amp; chr(10)
        	End If
        End If

        If Ext = &quot;.fb2.zip&quot; OR Ext = &quot;.fbz&quot; Then
        	sValidateResult = ReplaceInString( sValidateResult, sFB2File, LangNameToBack, False )
   	    End If

        If bFB2Execute = True Then
        	&apos; запустить полученный файл на просмотр, если нужно
        	FileExecute( ConvertToUrl( sFB2File ) )
        	MsgBox sMess &amp; sValidateResult &amp; sETFB2DD.sFB2ExportReportGeneratedFB2File &amp; chr(10) &amp; _
        	sFB2File &amp; chr(10) &amp; sETFB2DD.sFB2ExportReportStartToPreview, 64, sConvertorName
        Else
        	MsgBox sMess &amp; sValidateResult, 64, sConvertorName
        End If
        oExportToFB21Dlg.endExecute()
        
        &apos; удаляем временные файлы (всю папку OOoFBtoolsTemp)
        If Dir( getOOoFBToolsTempPath(), 16 ) &lt;&gt; &quot;&quot; Then
        	RmDir getOOoFBToolsTempPath()
        End If
End Sub

&apos;***************************************************************************
&apos; отмена экспорта
Sub ExportToFB21DlgCanceled()
	oExportToFB21Dlg.endExecute()
End Sub

&apos;***************************************************************************
&apos;Доступность выбора расширения архива, если включен режим архивации
Sub ZipFB2CheckBoxStateChange()
	If oExportToFB21Dlg.getControl(&quot;ZipFB2CheckBox&quot;).State = 1 Then
		With oExportToFB21Dlg
			.getControl(&quot;fb2ZipOptionButton&quot;).Enable = True
			.getControl(&quot;fbzOptionButton&quot;).Enable = True
		End With
	Else
		With oExportToFB21Dlg
			.getControl(&quot;fb2ZipOptionButton&quot;).Enable = False
			.getControl(&quot;fbzOptionButton&quot;).Enable = False
		End With
	End If
End Sub

&apos;***************************************************************************
&apos; определяем. какая схема жанров использовалась для конвертации
Function GetWorkFB2Schema() As String
	On Error Resume Next
	Dim sFB21 As String, sFB2LibRusEc As String, sFB2Flibusta As String, sFBUnion As String
	sFB21 = &quot;0&quot; : sFB2LibRusEc = &quot;0&quot; : sFB2Flibusta = &quot;0&quot; : sFBUnion = &quot;0&quot;
	Dim sFileName As String : sFileName = getOOoFBToolsSettingsDir() &amp; sConstFB2PropEditorSettings
	Dim nX As Long, nY As Long
	
	GetWorkFB2Schema = NativeSeparator() &amp; &quot;fb2-schema&quot; &amp; NativeSeparator() &amp; &quot;FictionBook.xsd&quot;
	
	If FileExists( sFileName ) Then
		Dim sLine As String
		Dim oSFA As Object, oFS As Object, oTIS As Object
		
		oSFA = createUnoService ( &quot;com.sun.star.ucb.SimpleFileAccess&quot; )
		oFS = oSFA.openFileRead ( ConvertToURL ( sFileName ) )
		oTIS = createUnoService ( &quot;com.sun.star.io.TextInputStream&quot; )
		oTIS.setInputStream (oFS)
		Do While ( NOT oTIS.isEOF() )
			sLine = oTIS.readLine()
			If sLine &lt;&gt; &quot;&quot; Then
				&apos; Устанавливаем данные
				Dim sSetting() As String : sSetting = Split(sLine, &quot;=&quot;)
				If sSetting(0) = &quot;obtnFB21&quot; Then
					sFB21 = sSetting(1)
				ElseIf sSetting(0) = &quot;obtnFB2LibRusEc&quot; Then
					sFB2LibRusEc = sSetting(1)
				ElseIf sSetting(0) = &quot;obtnFB2Flibusta&quot; Then
					sFB2Flibusta = sSetting(1)
				ElseIf sSetting(0) = &quot;obtnFB2Union&quot; Then
					sFBUnion = sSetting(1)
				End If
			End If
		Loop
		oTIS.closeInput()
		
		If sFB21 = 1 Then
			GetWorkFB2Schema = NativeSeparator() &amp; &quot;fb2-schema&quot; &amp; NativeSeparator() &amp; &quot;FictionBook.xsd&quot;
		ElseIf sFB2LibRusEc = 1 Then
			GetWorkFB2Schema = NativeSeparator() &amp; &quot;fb2-librusec-schem&quot; &amp; NativeSeparator() &amp; &quot;FictionBook.xsd&quot;
		ElseIf sFB2Flibusta = 1 Then
			GetWorkFB2Schema = NativeSeparator() &amp; &quot;fb2-flibusta-schema&quot; &amp; NativeSeparator() &amp; &quot;FictionBook.xsd&quot;
		ElseIf sFBUnion = 1 Then
			GetWorkFB2Schema = NativeSeparator() &amp; &quot;fb2-union-schema&quot; &amp; NativeSeparator() &amp; &quot;FictionBook.xsd&quot;
		End If
	End If
End Function


&apos;***************************************************************************
&apos; проверка, все ли обязательные fb2-свойства документа заполнены
Function IsFB2BindingPropertiesCorrect() As String
	IsFB2BindingPropertiesCorrect = &quot;&quot;
	&apos; жанр, язык, Название, версия, ID
	Dim sErrorMess As String
    Dim UserDefProperties	As Object : UserDefProperties	= ThisComponent.DocumentProperties.getUserDefinedProperties()
    Dim PropertyValues		As Object : PropertyValues		= UserDefProperties.getPropertyValues()
    Dim PropertyValue		As new com.sun.star.beans.PropertyValue
    
    PropertyValue = GetUserProperty(_fb2_di_ID)
    MakeErrorMessage(PropertyValue, sErrorMess, &quot;ID&quot;)
    
    PropertyValue = GetUserProperty(_fb2_di_Version)
    MakeErrorMessage(PropertyValue, sErrorMess, &quot;Version&quot;)
    
    PropertyValue = GetUserProperty(_fb2_ti_BookTitle)
    MakeErrorMessage(PropertyValue, sErrorMess, &quot;BookTitle&quot;)

    PropertyValue = GetUserProperty(_fb2_ti_Lang)
    MakeErrorMessage(PropertyValue, sErrorMess, &quot;Lang&quot;)
    
    Dim i As Long
    Dim bGenre As Boolean : bGenre = False
    For i = 0 To uBound(PropertyValues) 
        If InStr( PropertyValues(i).Name, _fb2_ti_GenreCM ) = 1 Then
        	bGenre = True : Exit For
		End If
    Next i
    If Not bGenre Then MakeErrorMessage(PropertyValue, sErrorMess, &quot;Genre&quot;)

    IsFB2BindingPropertiesCorrect = sErrorMess
End Function

&apos;***************************************************************************
&apos; вызов диалога сохнанения fb2 файла
Sub SaveFB2FileAs()
	Dim oFileDlg As Object
	Dim sArg() As String
	Dim sDir As String
	Dim sFName As String
	
	If (Not GlobalScope.BasicLibraries.isLibraryLoaded(&quot;Tools&quot;)) Then
		GlobalScope.BasicLibraries.LoadLibrary(&quot;Tools&quot;)
	End If
	
	sDir = DirectoryNameOutOfPath(sCurDocFile, &quot;/&quot;)
	sFName = ConvertFromUrl( FilenameOutOfPath(sCurDocFile, &quot;/&quot;) )
	
	oFileDlg = CreateUnoService(&quot;com.sun.star.ui.dialogs.FilePicker&quot;)
	sArg() = Array(com.sun.star.ui.dialogs.TemplateDescription.FILESAVE_AUTOEXTENSION)
	
	With oFileDlg
		.initialize(sArg())
		.appendFilter(&quot;Fictionbook (.fb2)&quot;, &quot;*.fb2;*.FB2&quot;)
		.setTitle( sFB2PED.sFileDlgSaveAs )
		.setDisplayDirectory(sDir)
		.setDefaultName(sFName)
	End With
	If oFileDlg.execute() Then
		Dim sFile As String
		sFile = ConvertFromUrl(oFileDlg.Files(0))
		IF (InStr(sFile,&quot;.fb2&quot;) = 0) Then
			sFile = sFile + &quot;.fb2&quot;
		End If
		oExportToFB21Dlg.Model.fb2PathTextField.Text = sFile
	End If
	oFileDlg.Dispose()
End Sub

&apos;***************************************************************************
&apos; Читаем настройки и задаем значения контролам основной формы
Function LoadExportToFB21DlgSettings() As Boolean
	On Error Resume Next
	Dim sFileName As String : sFileName = getOOoFBToolsSettingsDir() &amp; sConstFB2ConverterDialogSettings
	If FileExists( sFileName ) Then
		Dim nX As Long, nY As Long
		Dim sLine As String
		Dim oSFA As Object, oFS As Object, oTIS As Object
		
		oSFA = createUnoService ( &quot;com.sun.star.ucb.SimpleFileAccess&quot; )
		oFS = oSFA.openFileRead ( ConvertToURL ( sFileName ) )
		oTIS = createUnoService ( &quot;com.sun.star.io.TextInputStream&quot; )
		oTIS.setInputStream (oFS)
		Do While ( NOT oTIS.isEOF() )
			sLine = oTIS.readLine()
			If sLine &lt;&gt; &quot;&quot; Then
				&apos; Устанавливаем данные
				Dim sSetting() As String : sSetting = Split(sLine, &quot;=&quot;)
				If sSetting(0) = &quot;fb2ZipOptionButton&quot; Or sSetting(0) = &quot;fbzOptionButton&quot; Then
					oExportToFB21Dlg.getControl( sSetting(0) ).setState( sSetting(1) )
				ElseIf sSetting(0) = &quot;ReplaceExistFB2CheckBox&quot; Or sSetting(0) = &quot;ZipFB2CheckBox&quot; Then
					oExportToFB21Dlg.getControl( sSetting(0) ).setState( sSetting(1) )
				ElseIf sSetting(0) = &quot;X&quot; Then
					nX = sSetting(1)
				ElseIf sSetting(0) = &quot;Y&quot; Then
					nY = sSetting(1)
				End If
			End If
		Loop
		oTIS.closeInput()
		oExportToFB21Dlg.setPosSize( nX, nY, 107, 242, com.sun.star.awt.PosSize.POS )
		LoadExportToFB21DlgSettings = True
	Else
		LoadExportToFB21DlgSettings = False
	End If
	&apos;Доступность выбора расширения архива, если включен режим архивации
	ZipFB2CheckBoxStateChange()
End Function

&apos;***************************************************************************
&apos; записываем расположение на экране диалога Конвертера в файл настроек
Sub SaveExportToFB21DlgSettings()
	Dim oOS As Object, oFA As Object, oTOS As Object
	oFA = CreateUnoService(&quot;com.sun.star.ucb.SimpleFileAccess&quot;)
	oTOS = CreateUnoService(&quot;com.sun.star.io.TextOutputStream&quot;)
	
	oOS = oFA.openFileWrite(  getOOoFBToolsSettingsDir() &amp; sConstFB2ConverterDialogSettings )
	oOS.truncate()
	oTOS.setOutputStream( oOS )
	oTOS.setEncoding( &quot;utf-8&quot; )
	
	Dim ctrl As Object, i As Long
	ctrl = oExportToFB21Dlg.getControls()
	For i = LBound(ctrl) To UBound(ctrl)
		If ctrl(i).getImplementationName() = &quot;stardiv.Toolkit.UnoRadioButtonControl&quot; Then
			If ctrl(i).Model.Name = &quot;fb2ZipOptionButton&quot; Or ctrl(i).Model.Name = &quot;fbzOptionButton&quot; Then
				oTOS.writeString(ctrl(i).Model.Name &amp; &quot;=&quot; &amp; ctrl(i).Model.State &amp; chr(10))
			End If
		ElseIf ctrl(i).getImplementationName() = &quot;stardiv.Toolkit.UnoCheckBoxControl&quot; Then
			If ctrl(i).Model.Name = &quot;ReplaceExistFB2CheckBox&quot; Or ctrl(i).Model.Name = &quot;ZipFB2CheckBox&quot; Then
				oTOS.writeString(ctrl(i).Model.Name &amp; &quot;=&quot; &amp; ctrl(i).Model.State &amp; chr(10))
			End If
		End If
	Next i
	oTOS.writeString(&quot;X=&quot; &amp; oExportToFB21Dlg.PosSize.X &amp; chr(10))
	oTOS.writeString(&quot;Y=&quot; &amp; oExportToFB21Dlg.PosSize.Y &amp; chr(10))
	oTOS.writeString(&quot;end of file&quot; &amp; chr(10))
	oTOS.closeOutput()
End Sub

&apos; ===========================================================================================================================
&apos; 												Функции экспорта
&apos; ===========================================================================================================================
Function SaveFBCorrectText(sStr As String, bCHR10 As Boolean)
	Dim count As Long : count = 0
	&apos; до тех пор, пока не останется ни одной &quot;пустышки&quot;.
	Do
		count = RemoveSuperfluous(sStr)
		count = count + RemoveSuperfluousLR(sStr)
		count = count + ClearStyleSpace(sStr)
	Loop While count &gt; 0

	If bCHR10 = True Then
		oTextOutputStream.writeString(sStr &amp; chr(10))
	Else
		oTextOutputStream.writeString(sStr)
	End If
End Function

Function MakeBookTitle() As String
	&apos; формируем заглавие книги
	If lBATIndex &gt; -1 Then
		lCurrentElement = lBATIndex &apos; если есть автор или название книги, то все, что &quot;выше&quot; - игнорируем - служебная зона
		Dim sBT As String, l As Long, sBookTag As String
		sBT = &quot;&lt;title&gt;&quot; &amp; chr(10)
		For l = lCurrentElement To UBound( sBodyParagraphs() )
			If sBodyParagraphs(l,1) = sStyleBookTitle Then
				If bDocLinks = True Then
					&apos; обработка ссылок внутри документа
					Dim sID As String : sID = FindBookmarkForID(l, True)
					If sID &lt;&gt; &quot;&quot; Then &apos; нашли закладку (ссылку) для текущего элемента
						sBookTag = &quot;&lt;p &quot; &amp; &quot;id=&quot;&quot;&quot; &amp; sID &amp; &quot;&quot;&quot;&gt;&quot;
					Else &apos; для текущего элемента нет ни одной закладки (и ссылки, соответственно)
						sBookTag = &quot;&lt;p&gt;&quot; &apos; нет ни одной закладки
					End If
				Else
					sBookTag = &quot;&lt;p&gt;&quot;
				End If
				sBT = sBT &amp; sBookTag &amp; sBodyParagraphs(l,0) &amp; &quot;&lt;/p&gt;&quot; &amp; chr(10)
				oProgressBar.setValue(l) &apos; Статусбар
			Else Exit For
			End If
		Next l
		lCurrentElement = l
		MakeBookTitle = sBT &amp; &quot;&lt;/title&gt;&quot; &amp; chr(10)
	End If
End Function

Function MakePoemTitle(sArray As String, bBody As Boolean) As String
	Dim l As Long, sPTag As String, sID As String
	Dim sPoemTitle As String
	sPoemTitle = &quot;&quot;
	If bMergePoemTitle = True Then &apos; собираем Заголовки стиха, идущие один за другим в одну строку
		Dim nCount As Long, nCountTag As String &apos; число заголовков с закладками
		nCount = 0
		nCountTag = 0
		For l = lCurrentElement To UBound(sArray)
			If sArray(l,1) = sStylePoemTitle Then
				If bDocLinks = True Then
					&apos; обработка ссылок внутри документа
					sID = FindBookmarkForID(l, bBody)
					If sID &lt;&gt; &quot;&quot; Then &apos; нашли закладку (ссылку) для текущего элемента
						sPTag = &quot;&lt;p &quot; &amp; &quot;id=&quot;&quot;&quot; &amp; sID &amp; &quot;&quot;&quot;&gt;&quot;
						nCount = nCount + 1 &apos;счетчик закладок
					Else &apos; для текущего элемента нет ни одной закладки (и ссылки, соответственно)
						If nCount = 0 Then &apos; чтобы не &quot;затереть&quot; закладки вышестоящих заголовков
							sPTag = &quot;&lt;p&gt;&quot; &apos; нет ни одной закладки
						End If
					End If
				Else
					sPTag = &quot;&lt;p&gt;&quot;
				End If
				If nCountTag = 0 Then &apos; чтобы не добавлять и другие теги &lt;p id=&gt;
					sPoemTitle = sPoemTitle &amp; sPTag
					nCountTag = nCountTag + 1 &apos;счетчик закладок
				End If
				sPoemTitle = sPoemTitle &amp; sArray(l,0) &amp;  &quot; &quot;
				oProgressBar.setValue(l) &apos; Статусбар
			Else Exit For
			End If
		Next l
		sPoemTitle = Mid(sPoemTitle, 1, Len(sPoemTitle)-1)
		sPoemTitle = sPoemTitle &amp; &quot;&lt;/p&gt;&quot;
		lCurrentElement = l
	Else &apos; Заголовки стиха не будут собираться в одну строку, а будут один под другим
		For l = lCurrentElement To UBound(sArray)
			If sArray(l,1) = sStylePoemTitle Then
				If bDocLinks = True Then
					&apos; обработка ссылок внутри документа
					sID = FindBookmarkForID(l, bBody)
					If sID &lt;&gt; &quot;&quot; Then &apos; нашли закладку (ссылку) для текущего элемента
						sPTag = &quot;&lt;p &quot; &amp; &quot;id=&quot;&quot;&quot; &amp; sID &amp; &quot;&quot;&quot;&gt;&quot;
					Else &apos; для текущего элемента нет ни одной закладки (и ссылки, соответственно)
						sPTag = &quot;&lt;p&gt;&quot; &apos; нет ни одной закладки
					End If
				Else
					sPTag = &quot;&lt;p&gt;&quot;
				End If
				sPoemTitle = sPoemTitle &amp; sPTag &amp; sArray(l,0) &amp; &quot;&lt;/p&gt;&quot; &amp; chr(10)
				oProgressBar.setValue(l) &apos; Статусбар
			Else Exit For
			End If
		Next l
		lCurrentElement = l
	End If
	If sPoemTitle &lt;&gt; &quot;&quot; Then
		MakePoemTitle = &quot;&lt;title&gt;&quot; &amp; sPoemTitle &amp; &quot;&lt;/title&gt;&quot; &amp; chr(10)
	Else
		MakePoemTitle = &quot;&quot;
	End If
End Function

Function MakePoem(sArray As String, bBody As Boolean) As String
	Dim sPoem As String, l As Long, sID As String
	Dim sPoemTitle As String, sPoemEpigraph As String, sSwitch As String
	sPoem = &quot;&quot;
	&apos; Заголовок поэмы
	sPoemTitle = MakePoemTitle(sArray, bBody)
	If sPoemTitle &lt;&gt; &quot;&quot; Then &apos; стихи с заголовка
		sPoem = sPoem &amp; chr(10) &amp; sPoemTitle
	End If
	&apos; Эпиграф Поэмы
	If sArray(lCurrentElement,1) = sStyleEpigraph Then &apos; против зацикливания - из Поэмы в Эпиграф и обратно
		sPoemEpigraph = MakeEpigraph(sArray, sStyleEpigraph, sStyleEpigraphAuthor, bBody)
	End If

	If sPoemEpigraph &lt;&gt; &quot;&quot; Then &apos; стихи с эпиграфом
		sPoem = sPoem &amp; sPoemEpigraph
	End If
	&apos; Переключатель - Stanza или SubTitle Поэмы
	sSwitch = SwitchSubTitleStanza(sArray, bBody)
	If sSwitch &lt;&gt; &quot;&quot; Then
		sPoem = sPoem &amp; sSwitch
	End If
	
	&apos; Заглушка, на случай, если есть Заголовок и (или) Эпиграф поэмы, а обязательного Подзаголовка или Станзы - нет
&apos;	If (sPoemTitle &lt;&gt; &quot;&quot; OR sPoemEpigraph &lt;&gt; &quot;&quot;) AND sSwitch = &quot;&quot; Then
&apos;		sPoem = sPoem &amp; &quot;&lt;stanza&gt;&lt;v&gt;?&lt;/v&gt;&lt;/stanza&gt;&quot; &amp; chr(10)
&apos;	End If
	
	&apos; Авторы поэмы, если они есть
	sPoem = sPoem &amp; MakePoemAuthor(sArray, bBody)
	&apos; Дата написания поэмы, если она есть
	sPoem = sPoem &amp; MakePoemDate(sArray, bBody)

	If sPoem &lt;&gt; &quot;&quot; Then
		MakePoem = &quot;&lt;poem&gt;&quot; &amp; sPoem &amp; &quot;&lt;/poem&gt;&quot;
	Else
		MakePoem = &quot;&quot;
	End If
End Function

Function SwitchSubTitleStanza(sArray As String, bBody As Boolean) As String
	Dim l As Long, sID As String, sText As String
	sText =  &quot;&quot;
	For l = lCurrentElement To UBound(sArray)
		If sArray(l,1) = sStylePoem Then
			sText = sText &amp; MakeStanza(sArray, bBody)
		ElseIf sArray(l,1) = sStylePoemSubTitle Then &apos; чередование &lt;stanza&gt; и &lt;subtitle&gt;
		&apos;	lCurrentElement = l
			sText = sText &amp; MakeSubTitle(sArray, sStylePoemSubTitle, bMergePoemSubTitle, bBody)
		&apos;	l = lCurrentElement-1
		Else
			Exit For
		End If
		oProgressBar.setValue(l) &apos; Статусбар
	Next l
	lCurrentElement = l
	If sText &lt;&gt; &quot;&quot; Then
		SwitchSubTitleStanza = sText
	Else
		SwitchSubTitleStanza = &quot;&quot;
	End If
End Function

Function MakeStanza(sArray As String, bBody As Boolean) As String
	Dim l As Long, sStanza As String, nC As Long
	sStanza =  &quot;&quot;
	nC = 0 &apos; счетчик строк поэмы
	For l = lCurrentElement To UBound(sArray)
		If sArray(l,1) = sStylePoem Then
			If sArray(l,0) &lt;&gt; &quot;&quot; Then &apos; стих есть
				&apos; смотрим предыдущий элемент
				If l &gt; 0 Then
					If sArray(l-1,1) &lt;&gt; sStylePoem Then &apos; не стих - открываем stanza
						sStanza = sStanza &amp; &quot;&lt;stanza&gt;&quot; &amp; chr(10)
					End If
				ElseIf l = 0 Then
					If sArray(0,1) = sStylePoem Then &apos; стих - открываем stanza
						sStanza = sStanza &amp; &quot;&lt;stanza&gt;&quot; &amp; chr(10)
					End If
				End If
				If bDocLinks = True Then &apos; обработка ссылок внутри документа
					Dim sID As String : sID = FindBookmarkForID(l, bBody)
					If sID &lt;&gt; &quot;&quot; Then &apos; нашли закладку (ссылку) для текущего элемента
						sStanza = sStanza &amp; &quot;&lt;v &quot; &amp; &quot;id=&quot;&quot;&quot; &amp; sID &amp; &quot;&quot;&quot;&gt;&quot; &amp; sArray(l,0) &amp; &quot;&lt;/v&gt;&quot; &amp; chr(10)
					Else &apos; для текущего элемента нет ни одной закладки (и ссылки, соответственно)
						sStanza = sStanza &amp; &quot;&lt;v&gt;&quot; &amp; sArray(l,0) &amp; &quot;&lt;/v&gt;&quot; &amp; chr(10)
					End If
				Else
					sStanza = sStanza &amp; &quot;&lt;v&gt;&quot; &amp; sArray(l,0) &amp; &quot;&lt;/v&gt;&quot; &amp; chr(10)
				End If
				&apos; смотрим следующий элемент
				If l &lt; UBound(sArray) Then
					If sArray(l + 1,1) &lt;&gt; sStylePoem Then &apos; не стих - закрываем stanza
						sStanza = sStanza &amp; &quot;&lt;/stanza&gt;&quot; &amp; chr(10)
					End If
				End If
			Else &apos; пустой абзац-стих - закрываем stanza
				If nC &gt; 0 Then &apos; защита, если 1-я строка Поэму - &quot;пустая строка&quot; - НЕ ПО СХЕМЕ fb2!!!
					sStanza = sStanza &amp; &quot;&lt;/stanza&gt;&quot; &amp; chr(10)
				End If
				&apos; смотрим следующий элемент
				If l &lt; UBound(sArray) Then
					If sArray(l+1,1) = sStylePoem Then &apos; стих - открываем stanza
						sStanza = sStanza &amp; &quot;&lt;stanza&gt;&quot; &amp; chr(10)
					End If
				End If
			End If
			nC = nC + 1
		Else Exit For
		End If
	Next l
	lCurrentElement = l
	If sStanza &lt;&gt; &quot;&quot; Then
		MakeStanza = sStanza
	Else
		MakeStanza = &quot;&quot;
	End If
End Function

Function MakePoemAuthor(sArray As String, bBody As Boolean) As String
	&apos; Авторы поэмы
	Dim sPoem As String, l As Long, sID As String
	l = lCurrentElement
	If lCurrentElement &gt; UBound( sArray() ) Then Exit Function
	If sArray(lCurrentElement,1) = sStylePoemAuthor Then
		If bMergePoemAuthors = True Then &apos; собираем Авторов стиха, идущих один за другим в одну строку
			Dim nCount As Long, nCountTag As Long &apos; число авторов поэмы с закладками
			nCount = 0
			nCountTag = 0
			Dim sAPTag As String
			For l = lCurrentElement To UBound(sArray)
				If sArray(l,1) = sStylePoemAuthor Then
					If bDocLinks = True Then
						&apos; обработка ссылок внутри документа
						sID = FindBookmarkForID(l, bBody)
						If sID &lt;&gt; &quot;&quot; Then &apos; нашли закладку (ссылку) для текущего элемента
							sAPTag = &quot;&lt;text-author &quot; &amp; &quot;id=&quot;&quot;&quot; &amp; sID &amp; &quot;&quot;&quot;&gt;&quot;
							nCount = nCount+1 &apos;счетчик закладок
						Else &apos; для текущего элемента нет ни одной закладки (и ссылки, соответственно)
							If nCount = 0 Then &apos; чтобы не &quot;затереть&quot; закладки вышестоящих авторов
								sAPTag = &quot;&lt;text-author&gt;&quot; &apos; нет ни одной закладки
							End If
						End If
					Else
						sAPTag = &quot;&lt;text-author&gt;&quot;
					End If
					If nCountTag = 0 Then &apos; чтобы не добавлять и другие теги &lt;text-author id=&gt;
						sPoem = sPoem &amp; sAPTag
						nCountTag = nCountTag+1 &apos;счетчик закладок
					End If
					sPoem = sPoem &amp; sArray(l,0) &amp; &quot;, &quot;
					oProgressBar.setValue(l) &apos; Статусбар
				Else Exit For
				End If
			Next l
			sPoem = Mid(sPoem, 1, Len(sPoem)-2)
			sPoem = sPoem &amp; &quot;&lt;/text-author&gt;&quot;
			lCurrentElement = l
		Else &apos; Авторы стиха не будут собираться в одну строку, а будут один под другим
			For l = lCurrentElement To UBound(sArray)
				If sArray(l,1) = sStylePoemAuthor Then
					If bDocLinks = True Then
						&apos; обработка ссылок внутри документа
						sID = FindBookmarkForID(l, bBody)
						If sID &lt;&gt; &quot;&quot; Then &apos; нашли закладку (ссылку) для текущего элемента
							sPoem = sPoem &amp; &quot;&lt;text-author &quot; &amp; &quot;id=&quot;&quot;&quot; &amp; sID &amp; &quot;&quot;&quot;&gt;&quot; &amp; sArray(l,0) &amp; &quot;&lt;/text-author&gt;&quot; &amp; chr(10)
						Else &apos; для текущего элемента нет ни одной закладки (и ссылки, соответственно)
							sPoem = sPoem &amp; &quot;&lt;text-author&gt;&quot; &amp; sArray(l,0) &amp; &quot;&lt;/text-author&gt;&quot; &amp; chr(10)
						End If
					Else
						sPoem = sPoem &amp; &quot;&lt;text-author&gt;&quot; &amp; sArray(l,0) &amp; &quot;&lt;/text-author&gt;&quot; &amp; chr(10)
					End If
					oProgressBar.setValue(l) &apos; Статусбар
				Else Exit For
				End If
			Next l
			lCurrentElement = l
		End If
	End If
	lCurrentElement = l
	MakePoemAuthor = sPoem
End Function

Function MakePoemDate(sArray As String) As String
	Dim sSTR As String
	sSTR = &quot;&quot;
	&apos; Дата написания поэмы - согласно схемы допускается только одна дата.
	&apos; Если есть еще одна строка с датой, то она будет просто текстом (&lt;p&gt;XXX&lt;/p&gt;)
	If lCurrentElement &lt;= UBound( sArray() ) Then
		If sArray(lCurrentElement,1) = sStylePoemDate Then
			sSTR = sSTR &amp; &quot;&lt;date&gt;&quot; &amp; sArray(lCurrentElement,0) &amp; &quot;&lt;/date&gt;&quot; &amp; chr(10)
			oProgressBar.setValue(lCurrentElement) &apos; Статусбар
			lCurrentElement = lCurrentElement + 1
		End If
	End If
	MakePoemDate = sSTR
End Function

Function MakeEpigraph(sArray As String, sStyle_Epigraph, sStyle_EpigraphAuthor, bBody As Boolean) As String
	Dim sEpig As String, l As Long
	sEpig = &quot;&quot;
	For l = lCurrentElement To UBound(sArray)
		If sArray(l,1) = sStyle_Epigraph AND sArray(l,0) &lt;&gt; &quot;&quot; Then
			&apos; Просто абзацы цитаты или пустая строка
			If bDocLinks = True Then
				&apos; обработка ссылок внутри документа
				Dim sID As String : sID = FindBookmarkForID(l, bBody)
				If sID &lt;&gt; &quot;&quot; Then &apos; нашли закладку (ссылку) для текущего элемента
					sEpig = sEpig &amp; &quot;&lt;p &quot; &amp; &quot;id=&quot;&quot;&quot; &amp; sID &amp; &quot;&quot;&quot;&gt;&quot; &amp; sArray(l,0) &amp; &quot;&lt;/p&gt;&quot; &amp; chr(10)
				Else &apos; для текущего элемента нет ни одной закладки (и ссылки, соответственно)
					sEpig = sEpig &amp; &quot;&lt;p&gt;&quot; &amp; sArray(l,0) &amp; &quot;&lt;/p&gt;&quot; &amp; chr(10)
				End If
			Else
				sEpig = sEpig &amp; &quot;&lt;p&gt;&quot; &amp; sArray(l,0) &amp; &quot;&lt;/p&gt;&quot; &amp; chr(10)
			End If
			oProgressBar.setValue(l) &apos; Статусбар
		ElseIf sArray(l,1) = sStyle_Epigraph AND sArray(l,0) = &quot;&quot; Then
			&apos; пустые строки
			sEpig = sEpig &amp; &quot;&lt;empty-line/&gt;&quot; &amp; chr(10)
		ElseIf sArray(l,1) = sStylePoem OR sArray(l,1) = sStylePoemTitle OR _
				sArray(l,1) = sStylePoemSubTitle Then
			lCurrentElement = l
			sEpig = sEpig &amp; MakePoem(sArray, bBody)
			l = lCurrentElement-1
		ElseIf sArray(l,1) = sStyleCite OR sArray(l,1) = sStyleCiteSubTitle Then
			&apos; цитаты внутри аннотации
			lCurrentElement = l
			sEpig = sEpig &amp; MakeCite(sArray, bBody)
			l = lCurrentElement-1
		Else Exit For
		End If
	Next l
	lCurrentElement = l
	
	&apos; Авторы цитаты, если они есть
	sEpig = sEpig &amp; MakeEpigraphAuthor(sArray, sStyle_EpigraphAuthor, bBody)
	
	IF sEpig &lt;&gt; &quot;&quot; Then
		MakeEpigraph = &quot;&lt;epigraph&gt;&quot; &amp; chr(10) &amp; sEpig &amp; &quot;&lt;/epigraph&gt;&quot;
	Else
		MakeEpigraph = &quot;&quot;
	End If
End Function

Function MakeEpigraphAuthor(sArray As String, sStyle_EpigraphAuthor As String, bBody As Boolean) As String
	&apos; Авторы эпиграфа
	Dim sEpig As String, l As Long, sID As String
	l = lCurrentElement
	If lCurrentElement &gt; UBound( sArray() ) Then Exit Function
	If sArray(lCurrentElement,1) = sStyle_EpigraphAuthor Then
		If bMergeEpigraphAuthors = True Then &apos; собираем Авторов епиграфа, идущих один за другим в одну строку
			Dim nCount As Long, nCountTag As Long &apos; число авторов эпиграфа с закладками
			nCount = 0
			nCountTag = 0
			Dim sAETag As String
			For l = lCurrentElement To UBound(sArray)
				If sArray(l,1) = sStyle_EpigraphAuthor Then
					If bDocLinks = True Then
						&apos; обработка ссылок внутри документа
						sID = FindBookmarkForID(l, bBody)
						If sID &lt;&gt; &quot;&quot; Then &apos; нашли закладку (ссылку) для текущего элемента
							sAETag = &quot;&lt;text-author &quot; &amp; &quot;id=&quot;&quot;&quot; &amp; sID &amp; &quot;&quot;&quot;&gt;&quot;
							nCount = nCount+1 &apos;счетчик закладок
						Else &apos; для текущего элемента нет ни одной закладки (и ссылки, соответственно)
							If nCount = 0 Then &apos; чтобы не &quot;затереть&quot; закладки вышестоящих авторов
								sAETag = &quot;&lt;text-author&gt;&quot; &apos; нет ни одной закладки
							End If
						End If
					Else
						sAETag = &quot;&lt;text-author&gt;&quot;
					End If
					If nCountTag = 0 Then &apos; чтобы не добавлять и другие теги &lt;text-author id=&gt;
						sEpig = sEpig &amp; sAETag
						nCountTag = nCountTag+1 &apos;счетчик закладок
					End If
					sEpig = sEpig &amp; sArray(l,0) &amp; &quot;, &quot;
					oProgressBar.setValue(l) &apos; Статусбар
				Else Exit For
				End If
			Next l
			sEpig = Mid(sEpig, 1, Len(sEpig)-2)
			sEpig = sEpig &amp; &quot;&lt;/text-author&gt;&quot; &amp; chr(10)
			lCurrentElement = l
		Else &apos; Авторы епиграфа не будут собираться в одну строку, а будут один под другим
			For l = lCurrentElement To UBound(sArray)
				If sArray(l,1) = sStyle_EpigraphAuthor Then
					If bDocLinks = True Then
						&apos; обработка ссылок внутри документа
						sID = FindBookmarkForID(l, bBody)
						If sID &lt;&gt; &quot;&quot; Then &apos; нашли закладку (ссылку) для текущего элемента
							sEpig = sEpig &amp; &quot;&lt;text-author &quot; &amp; &quot;id=&quot;&quot;&quot; &amp; sID &amp; &quot;&quot;&quot;&gt;&quot; &amp; sArray(l,0) &amp; &quot;&lt;/text-author&gt;&quot; &amp; chr(10)
						Else &apos; для текущего элемента нет ни одной закладки (и ссылки, соответственно)
							sEpig = sEpig &amp; &quot;&lt;text-author&gt;&quot; &amp; sArray(l,0) &amp; &quot;&lt;/text-author&gt;&quot; &amp; chr(10)
						End If
					Else
						sEpig = sEpig &amp; &quot;&lt;text-author&gt;&quot; &amp; sArray(l,0) &amp; &quot;&lt;/text-author&gt;&quot; &amp; chr(10)
					End If
					oProgressBar.setValue(l) &apos; Статусбар
				Else Exit For
				End If
			Next l
			lCurrentElement = l
		End If
	End If
	lCurrentElement = l
	MakeEpigraphAuthor = sEpig
End Function

Function MakeAnnotation(sArray As String, bBody As Boolean) As String
	Dim sAnnot As String, l As Long, sAnnotTag As String
	sAnnot = &quot;&lt;annotation&gt;&quot; &amp; chr(10)
	For l = lCurrentElement To UBound(sArray)
		If sArray(l,1) = sStyleAnnotation AND sArray(l,0) &lt;&gt; &quot;&quot; Then
			If bDocLinks = True Then
				&apos; обработка ссылок внутри документа
				Dim  sID As String : sID = FindBookmarkForID(l, bBody)
				If sID &lt;&gt; &quot;&quot; Then &apos; нашли закладку (ссылку) для текущего элемента
					sAnnotTag = &quot;&lt;p &quot; &amp; &quot;id=&quot;&quot;&quot; &amp; sID &amp; &quot;&quot;&quot;&gt;&quot;
				Else &apos; для текущего элемента нет ни одной закладки (и ссылки, соответственно)
					sAnnotTag = &quot;&lt;p&gt;&quot; &apos; нет ни одной закладки
				End If
			Else
				sAnnotTag = &quot;&lt;p&gt;&quot;
			End If
			sAnnot = sAnnot &amp; sAnnotTag &amp; sArray(l,0) &amp; &quot;&lt;/p&gt;&quot; &amp; chr(10)
			oProgressBar.setValue(l) &apos; Статусбар
		ElseIf sArray(l,1) = sStyleAnnotation AND sArray(l,0) = &quot;&quot; Then
			&apos; пустые строки
			sAnnot = sAnnot &amp; &quot;&lt;empty-line/&gt;&quot; &amp; chr(10)
		ElseIf sArray(l,1) = sStyleAnnotationSubTitle Then
			&apos; подзаголовки
			lCurrentElement = l
			sAnnot = sAnnot &amp; MakeSubTitle(sArray, sStyleAnnotationSubTitle, bMergeAnnotationSubTitle, bBody)
			l = lCurrentElement-1
		ElseIf sArray(l,1) = sStylePoem OR sArray(l,1) = sStylePoemTitle OR _
				sArray(l,1) = sStylePoemSubTitle Then
			&apos; поэмы внутри аннотации
			lCurrentElement = l
			sAnnot = sAnnot &amp; MakePoem(sArray, bBody)
			l = lCurrentElement-1
		ElseIf sArray(l,1) = sStyleCite OR sArray(l,1) = sStyleCiteSubTitle Then
			&apos; цитаты внутри аннотации
			lCurrentElement = l
			sAnnot = sAnnot &amp; MakeCite(sArray, bBody)
			l = lCurrentElement-1
		ElseIf sArray(l,1) = &quot;Table&quot; Then
			&apos; таблица в аннотации
			sAnnot = sAnnot &amp; sArray(l,0) &amp; chr(10)
		Else
			Exit For
		End If
	Next l
	lCurrentElement = l
	sAnnot = sAnnot &amp; &quot;&lt;/annotation&gt;&quot; &amp; chr(10)
	If bELForStartAnnot = True Then
		&apos; &quot;защита&quot; - если после аннотации идет сразу Уровень, то вставляем между ними пустую строку для валидности
		sAnnot = sAnnot &amp; &quot;&lt;empty-line/&gt;&quot;
		bELForStartAnnot = False &apos; Для всех других аннотаций - не надо!!!
	End If
	MakeAnnotation = sAnnot 
End Function

Function MakeCite(sArray As String, bBody As Boolean) As String
	Dim sCite As String, l As Long
	sCite = &quot;&quot;
	For l = lCurrentElement To UBound(sArray)
		&apos; Просто абзацы цитаты или пустая строка
		If sArray(l,1) = sStyleCite AND sArray(l,0) &lt;&gt; &quot;&quot; Then
			If bDocLinks = True Then
				&apos; обработка ссылок внутри документа
				Dim sID As String : sID = FindBookmarkForID(l, bBody)
				If sID &lt;&gt; &quot;&quot; Then &apos; нашли закладку (ссылку) для текущего элемента
					sCite = sCite &amp; &quot;&lt;p &quot; &amp; &quot;id=&quot;&quot;&quot; &amp; sID &amp; &quot;&quot;&quot;&gt;&quot; &amp; sArray(l,0) &amp; &quot;&lt;/p&gt;&quot; &amp; chr(10)
				Else &apos; для текущего элемента нет ни одной закладки (и ссылки, соответственно)
					sCite = sCite &amp; &quot;&lt;p&gt;&quot; &amp; sArray(l,0) &amp; &quot;&lt;/p&gt;&quot; &amp; chr(10)
				End If
			Else
				sCite = sCite &amp; &quot;&lt;p&gt;&quot; &amp; sArray(l,0) &amp; &quot;&lt;/p&gt;&quot; &amp; chr(10)
			End If
			oProgressBar.setValue(l) &apos; Статусбар
		ElseIf sArray(l,1) = sStyleCite AND sArray(l,0) = &quot;&quot; Then
			&apos; пустые строки
			sCite = sCite &amp; &quot;&lt;empty-line/&gt;&quot; &amp; chr(10)
		ElseIf sArray(l,1) = sStyleCiteSubTitle Then
			&apos; подзаголовки
			lCurrentElement = l
			sCite = sCite &amp; MakeSubTitle(sArray, sStyleCiteSubTitle, bMergeCiteSubTitle, bBody)
			l = lCurrentElement-1
		ElseIf sArray(l,1) = sStylePoem OR sArray(l,1) = sStylePoemTitle OR _
				sArray(l,1) = sStylePoemSubTitle Then
			lCurrentElement = l
			sCite = sCite &amp; MakePoem(sArray, bBody)
			l = lCurrentElement-1
		ElseIf sArray(l,1) = &quot;Table&quot; Then
			&apos; таблица в цитате
			sCite = sCite &amp; sArray(l,0) &amp; chr(10)
		Else
			Exit For
		End If
	Next l
	lCurrentElement = l
	
	&apos; Авторы цитаты, если они есть
	sCite = sCite &amp; MakeCiteAuthor(sArray, bBody)
	
	IF sCite &lt;&gt; &quot;&quot; Then
		MakeCite = &quot;&lt;cite&gt;&quot; &amp; chr(10) &amp; sCite &amp; &quot;&lt;/cite&gt;&quot;
	Else
		MakeCite = &quot;&quot;
	End If
End Function

Function MakeCiteAuthor(sArray As String, bBody As Boolean) As String
	&apos; Авторы цитаты
	Dim sCite As String, l As Long, sID As String
	l = lCurrentElement
	If lCurrentElement &gt; UBound( sArray() ) Then Exit Function
	If sArray(lCurrentElement,1) = sStyleCiteAuthor Then
		If bMergeCiteAuthors = True Then &apos; собираем Авторов цитаты, идущих один за другим в одну строку
			Dim nCount As Long, nCountTag As Long &apos; число авторов цитаты с закладками
			nCount = 0
			nCountTag = 0
			Dim sACTag As String
			For l = lCurrentElement To UBound(sArray)
				If sArray(l,1) = sStyleCiteAuthor Then
					If bDocLinks = True Then
						&apos; обработка ссылок внутри документа
						sID = FindBookmarkForID(l, bBody)
						If sID &lt;&gt; &quot;&quot; Then &apos; нашли закладку (ссылку) для текущего элемента
							sACTag = &quot;&lt;text-author &quot; &amp; &quot;id=&quot;&quot;&quot; &amp; sID &amp; &quot;&quot;&quot;&gt;&quot;
							nCount = nCount+1 &apos;счетчик закладок
						Else &apos; для текущего элемента нет ни одной закладки (и ссылки, соответственно)
							If nCount = 0 Then &apos; чтобы не &quot;затереть&quot; закладки вышестоящих авторов
								sACTag = &quot;&lt;text-author&gt;&quot; &apos; нет ни одной закладки
							End If
						End If
					Else
						sACTag = &quot;&lt;text-author&gt;&quot;
					End If
					If nCountTag = 0 Then &apos; чтобы не добавлять и другие теги &lt;text-author id=&gt;
						sCite = sCite &amp; sACTag
						nCountTag = nCountTag+1 &apos;счетчик закладок
					End If
					sCite = sCite &amp; sArray(l,0) &amp; &quot;, &quot;
					oProgressBar.setValue(l) &apos; Статусбар
				Else Exit For
				End If
			Next l
			sCite = Mid(sCite, 1, Len(sCite)-2)
			sCite = sCite &amp; &quot;&lt;/text-author&gt;&quot;
			lCurrentElement = l
		Else &apos; Авторы цитаты не будут собираться в одну строку, а будут один под другим
			For l = lCurrentElement To UBound(sArray)
				If sArray(l,1) = sStyleCiteAuthor Then
					If bDocLinks = True Then
						&apos; обработка ссылок внутри документа
						sID = FindBookmarkForID(l, bBody)
						If sID &lt;&gt; &quot;&quot; Then &apos; нашли закладку (ссылку) для текущего элемента
							sCite = sCite &amp; &quot;&lt;text-author &quot; &amp; &quot;id=&quot;&quot;&quot; &amp; sID &amp; &quot;&quot;&quot;&gt;&quot; &amp; sArray(l,0) &amp; &quot;&lt;/text-author&gt;&quot; &amp; chr(10)
						Else &apos; для текущего элемента нет ни одной закладки (и ссылки, соответственно)
							sCite = sCite &amp; &quot;&lt;text-author&gt;&quot; &amp; sArray(l,0) &amp; &quot;&lt;/text-author&gt;&quot; &amp; chr(10)
						End If
					Else
						sCite = sCite &amp; &quot;&lt;text-author&gt;&quot; &amp; sArray(l,0) &amp; &quot;&lt;/text-author&gt;&quot; &amp; chr(10)
					End If
					oProgressBar.setValue(l) &apos; Статусбар
				Else Exit For
				End If
			Next l
			lCurrentElement = l
		End If
	End If
	lCurrentElement = l
	MakeCiteAuthor = sCite
End Function	

Function MakeSubtitle(sArray As String, sStyle_SubTitle As String, bMerge_SubTitle As String, bBody As Boolean) As String
	Dim sSubtitle As String, l As Long, sSubTag As String, sID As String
	If bMerge_SubTitle = True Then &apos; собираем подзаголовки, идущие один за другим в одну строку
		Dim nCount As Long &apos; число подзаголовков с закладками
		nCount = 0
		For l = lCurrentElement To UBound(sArray)
			If sArray(l,1) = sStyle_SubTitle Then
				If bDocLinks = True Then
					&apos; обработка ссылок внутри документа
					sID = FindBookmarkForID(l, bBody)
					If sID &lt;&gt; &quot;&quot; Then &apos; нашли закладку (ссылку) для текущего элемента
						sSubTag = &quot;&lt;subtitle &quot; &amp; &quot;id=&quot;&quot;&quot; &amp; sID &amp; &quot;&quot;&quot;&gt;&quot;
						nCount = nCount+1 &apos;счетчик закладок
					Else &apos; для текущего элемента нет ни одной закладки (и ссылки, соответственно)
						If nCount = 0 Then &apos; чтобы не &quot;затереть&quot; закладки вышестоящих подзаголовков
							sSubTag = &quot;&lt;subtitle&gt;&quot; &apos; нет ни одной закладки
						End If
					End If
				Else
					sSubTag = &quot;&lt;subtitle&gt;&quot;
				End If
				sSubtitle = sSubtitle &amp; sArray(l,0) &amp; &quot; &quot;
				oProgressBar.setValue(l) &apos; Статусбар
			Else Exit For
			End If
		Next l
		lCurrentElement = l
		If sSubTag &lt;&gt; &quot;&quot; AND sSubtitle &lt;&gt; &quot;&quot; Then
			sSubtitle = sSubTag &amp; Trim(sSubtitle) &amp; &quot;&lt;/subtitle&gt;&quot; &amp; chr(10)
		End If
	Else &apos; подзаголовки не будут собираться в одну строку, а будут один под другим
		For l = lCurrentElement To UBound(sArray)
			If sArray(l,1) = sStyle_SubTitle Then
				If bDocLinks = True Then
					&apos; обработка ссылок внутри документа
					sID = FindBookmarkForID(l, bBody)
					If sID &lt;&gt; &quot;&quot; Then &apos; нашли закладку (ссылку) для текущего элемента
						sSubtitle = sSubtitle &amp; &quot;&lt;subtitle &quot; &amp; &quot;id=&quot;&quot;&quot; &amp; sID &amp; &quot;&quot;&quot;&gt;&quot; &amp; sArray(l,0) &amp; &quot;&lt;/subtitle&gt;&quot; &amp; chr(10)
					Else &apos; для текущего элемента нет ни одной закладки (и ссылки, соответственно)
						sSubtitle = sSubtitle &amp; &quot;&lt;subtitle&gt;&quot; &amp; sArray(l,0) &amp; &quot;&lt;/subtitle&gt;&quot; &amp; chr(10)
					End If
				Else
					sSubtitle = sSubtitle &amp; &quot;&lt;subtitle&gt;&quot; &amp; sArray(l,0) &amp; &quot;&lt;/subtitle&gt;&quot; &amp; chr(10)
				End If
				oProgressBar.setValue(l)
			Else Exit For
			End If
		Next l
		lCurrentElement = l
	End If
	MakeSubtitle = sSubtitle
End Function

Function MakeSection( sArray() As String, bBody As Boolean ) As String
	Dim sSectionTag As String : sSectionTag = &quot;&lt;section&gt;&quot; &amp; chr(10) &amp; &quot;&lt;title&gt;&quot; &amp; chr(10)
	Dim pItem As String : pItem = sArray( lCurrentElement, 0 )
	
	&apos; задание id для тэгов &lt;p&gt; в секциях, если на них установлены закладки...
	Dim sSection As String, sID As String
	If bDocLinks = True Then
		&apos; обработка ссылок внутри документа
		sID = FindBookmarkForID( lCurrentElement, bBody )
		If sID &lt;&gt; &quot;&quot; Then &apos; нашли закладку (ссылку) для текущего элемента
			If InStr( pItem, &quot;&lt;p&gt;&quot; ) = 1 Then
				pItem = MakeParaWithID( sArray(), lCurrentElement, sID )
			Else
				pItem = &quot;&lt;p id=&quot;&quot;&quot; &amp; sID &amp; &quot;&quot;&quot;&gt;&quot; &amp; pItem &amp; &quot;&lt;/p&gt;&quot;
			End If
		Else
			If InStr( pItem, &quot;&lt;p&gt;&quot; ) &lt;&gt; 1 Then
				pItem = &quot;&lt;p&gt;&quot; &amp; pItem &amp; &quot;&lt;/p&gt;&quot;
			End If
		End If
	End If
	
	sSection = sSectionTag &amp; pItem &amp; chr(10) &amp; &quot;&lt;/title&gt;&quot;

	oProgressBar.setValue( lCurrentElement )
	lCurrentElement = lCurrentElement + 1
	MakeSection = sSection
End Function

&apos; вставка ID, если они есть, для тэгов &lt;p&gt; в строке, объединенной chr(10)
&apos; требуется для собранных воедино абзацев Заголовков одного уровня
&apos; lCurrentElement - текущий объединенный абзац для обработки
&apos; sID - строка объединенных названий закладок
Function MakeParaWithID( sArray() As String, lCurrentElement As Long, sID As String ) As String
	Dim sPara		As String : sPara	= sArray( lCurrentElement, 0 )
	Dim aParas()	As String : aParas	= Split( sPara, chr(10) )
	Dim aIDs()		As String : aIDs	= Split( sID, &quot;|&quot; )
	Dim i As Long
	Dim l As Long : l = 0
	For i = LBound( aIDs() ) To UBound( aIDs() )
		If aIDs(i) &lt;&gt; &quot;&quot; Then
			Dim sIDi As String : sIDi = aIDs(i)
			If sIDi &lt;&gt; &quot;&quot; Then
				aParas(l) = &quot;&lt;p id=&quot;&quot;&quot; &amp; sIDi &amp; &quot;&quot;&quot;&gt;&quot; &amp; Mid( aParas(l), 4 )
			End If
		Else
			If l &gt; 0 Then
				l = l - 1
			End If
		End If
	Next i
	MakeParaWithID = Join( aParas(), chr(10) )
End Function

&apos; Замена любых символов кроме букв в идентификаторе на _
Function CorrectID( sID As String ) As String
	Dim l As Long
	For l = 1 To Len( sID )
		If Not IsLetter( Mid( sID, l, 1 ) ) Then
			If Not IsNumber( Mid( sID, l, 1 ) ) Then
				sID = Mid( sID, 1, l - 1 ) &amp; &quot;_&quot; &amp; Mid( sID, l + 1 )
			End If
		End If
	Next l
	CorrectID = sID
End Function

&apos; поиск названия закладки для текущего lCurElement элемента
&apos; если в абзаце несколько закладок - возвращаем первую, а также все после &quot;|&quot; (для собранных абзацев в один - для Заголовков)
&apos; для основного текста - из массива sBodyParagraphs(),
&apos; для сносок - из массива asFNPars()
&apos; bBody = True - основная часть книги; bBody = False - сноска
Function FindBookmarkForID( lCurElement As Long, bBody As Boolean ) As String
	Dim sID As String : sID = &quot;&quot;
	If bBody = True Then &apos; для основной части книги
		sID = sBodyParagraphs( lCurElement, 2 )
	Else &apos; для сносок
		If asFNPars( lCurElement, 2 ) &lt;&gt; &quot;&quot;  Then
			sID = CorrectBMLink( asFNPars( lCurElement, 2 ) )
		End If
	End If
	FindBookmarkForID = _FindBookmarkForID( sID )
End Function

Function _FindBookmarkForID( sID As String ) As String
	_FindBookmarkForID = &quot;&quot;
	If sID &lt;&gt; &quot;&quot; Then
		Dim indQ As Long : indQ = InStr( sID, &quot;?&quot; )
		Dim indR As Long : indR = InStr( sID, &quot;|&quot; )
		If indQ &lt;&gt; 0 AND indR &lt;&gt; 0 Then &apos; есть несколько закладок в одном абзаце и сборка абзацев с закладками
			sID = Mid( sID, 1, indQ-1 ) &amp; Mid( sID, indR )
			_FindBookmarkForID = CorrectID( CorrectBMLink( sID ) )
		ElseIf indQ = 0 AND indR = 0 Then &apos; нет несколько закладок в одном абзаце и нет сборки абзацев с закладками
			_FindBookmarkForID = CorrectID( CorrectBMLink( sID ) )
		ElseIf indQ &lt;&gt; 0 AND indR = 0 Then &apos; есть несколько закладок в одном абзаце и нет сборки абзацев с закладками
			sID = Mid( sID, 1, indQ-1 )
			_FindBookmarkForID = CorrectID( CorrectBMLink( sID ) )
		Else &apos; нет несколько закладок в одном абзаце и есть сборка абзацев с закладками (indQ = 0 AND indR &lt;&gt; 0)
			sID = Mid( sID, 1, indQ-1 )
			_FindBookmarkForID = CorrectID( CorrectBMLink( sID ) )
		End If
	End If
End Function

&apos;////////////////////////////////////////////////////////////

Function IsLevel( sStyle As String ) As Boolean
	&apos; Если аргумент sStyle - это Уровень, то возвращается True, иначе - False
	If sStyle = sStyleLevel1 Or sStyle = sStyleLevel2 Or sStyle = sStyleLevel3 Or sStyle = sStyleLevel4 Or sStyle = sStyleLevel5 Or _
		 sStyle = sStyleLevel6 Or sStyle = sStyleLevel7 Or sStyle = sStyleLevel8 Or sStyle = sStyleLevel9 Or sStyle = sStyleLevel10 Then
		 IsLevel = True
	Else &apos; это не Уровень
		IsLevel = False
	End If
End Function

Function IndexOfBookTitle( sArray() As String ) As Long
	&apos; индекс Названия Книги
	IndexOfBookTitle = -1
	Dim i As Long
	For i = 0 To UBound( sArray() )
		If sArray(i, 1) = sStyleBookTitle Then
			IndexOfBookTitle = i
			Exit Function
		End If
	Next i
End Function

Function IndexOf1Section( sArray() As String, lStartIndex As Long ) As Long
	&apos; индекс 1-й секции
	IndexOf1Section = -1
	If lStartIndex &gt; UBound( sArray() ) Or lStartIndex &lt; 0 Then Exit Function
	
	Dim i As Long
	For i = lStartIndex To UBound( sArray() )
		If IsLevel( sArray(i, 1) ) = True Then
			IndexOf1Section = i
			Exit Function
		End If
	Next i
End Function

Function IndexOfEndSection( sArray() As String ) As Long
	&apos; индекс последней секции
	IndexOfEndSection = -1
	Dim i As Long
	For i = UBound( sArray() ) To 0 Step -1 
		If  IsLevel(sArray(i, 1)) = True Then
			IndexOfEndSection = i
			Exit Function
		End If
	Next i
End Function

Function GetIndexOfNextLevel( sArray() As String, lIndexOfCurrentLevel As Long ) As Long
	GetIndexOfNextLevel = -1 &apos; следующего уровня нет
	Dim i As Long, sInput As String
	&apos; Ищем следующий индекс уровня после LevelCurrent
	If lIndexOfCurrentLevel = UBound( sArray() ) Then
		GetIndexOfNextLevel = lIndexOfCurrentLevel
		Exit Function
	End If
	For i = lIndexOfCurrentLevel + 1 To UBound(sArray)
		sInput = sArray(i, 1)
		If IsLevel(sInput) = True Then
			GetIndexOfNextLevel = i
			Exit For
		End If
	Next i
End Function

Function GetIndexOfPrevLevel( sArray() As String, lIndexOfCurrentLevel As Long ) As Long
	GetIndexOfPrevLevel = -1 &apos; предыдущего уровня нет
	Dim i As Long, sInput As String
	&apos; Ищем предыдущий индекс уровня до LevelCurrent
	If lIndexOfCurrentLevel &gt;= UBound( sArray ) Then
		GetIndexOfPrevLevel = lIndexOfCurrentLevel
		Exit Function
	End If
	For i = lIndexOfCurrentLevel - 1 To 0 Step -1
		sInput = sArray( i, 1 )
		If  IsLevel( sInput ) = True Then
			GetIndexOfPrevLevel = i
			Exit For
		End If
	Next i
End Function

Function IsAdjacentCurrentLevelsOfNextLevel( sArray() As String, lIndexOfCurrentLevel As Long ) As Long
	&apos; данные о текущем и следующем уровне (по возрастанию);
	&apos; шаг - разница текущего и следующего уровней (current и next, напр: 1 и 2)
	&apos; знак (+ или -) показывает переход вправо с большего на меньший (напр: 5 и 2) уровень (-) или с меньшего на больший (напр: 1 и 2) уровень (+)
	&apos; 10 - если lIndexOfCurrentLevel вышел за правую границу массива (все уже обработали)
	&apos;  5 - нет следующего уровня, есть только текущий (либо в книге всего 1 Заголовок, либо текущий - последний Заголовок)
	&apos;  0 - текущий и следующий уровни - одного ранга, шаг = 0 (напр. 3 и 3)
	&apos;  1 - текущий и следующий уровни - смежные, шаг = -1 (напр. 1 и 2)
	&apos; -1 - текущий и следующий уровни - смежные, шаг = 1 (напр. 2 и 1)
	&apos;  2 - текущий и следующий уровни - не смежные, шаг &lt; -1 (напр. 1 и 4 - шаг=-3)
	&apos; -2 - текущий и следующий уровни - не смежные, шаг &gt; 1 (напр. 4 и 1 - шаг=3)
	
	If lIndexOfCurrentLevel &gt;= UBound( sArray() ) Then
		IsAdjacentCurrentLevelsOfNextLevel = 10 : Exit Function
	End If
	
	Dim lIndexOfNextLevel : lIndexOfNextLevel = GetIndexOfNextLevel( sArray(), lIndexOfCurrentLevel,1 )
	Dim nStep As Long
	If lIndexOfNextLevel = -1 Then &apos; нет следующего уровня, есть только текущий (либо в книге всего 1 Заголовок, либо текущий - последний Заголовок)
		IsAdjacentCurrentLevelsOfNextLevel = 5
		Exit Function
	Else &apos; следующий Уровень есть
		nStep = GetLevelNumber( sArray( lIndexOfCurrentLevel, 1 ) ) - GetLevelNumber( sArray( lIndexOfNextLevel,1 ) )
	End If
	
	If nStep = 0 Then &apos; текущий и следующий уровни - одного ранга, шаг = 0 (напр. 3 и 3)
		IsAdjacentCurrentLevelsOfNextLevel = 0
	ElseIf nStep = -1 Then &apos; текущий и следующий уровни - смежные, шаг = -1 (напр. 1 и 2)
		IsAdjacentCurrentLevelsOfNextLevel = 1
	ElseIf nStep = 1 Then &apos; текущий и следующий уровни - смежные, шаг = 1 (напр. 2 и 1)
		IsAdjacentCurrentLevelsOfNextLevel = -1
	ElseIf nStep &lt; -1 Then &apos; текущий и следующий уровни - не смежные, шаг &lt; -1 (напр. 1 и 4 - шаг=-3)
		IsAdjacentCurrentLevelsOfNextLevel = 2
	ElseIf nStep &gt; 1 Then &apos; текущий и следующий уровни - не смежные, шаг &gt; 1 (напр. 4 и 1 - шаг=3) - надо закрывать секцию
		IsAdjacentCurrentLevelsOfNextLevel = -2
	End If
End Function

Function IsAdjacentCurrentLevelsOfPrevLevel( sArray() As String, lIndexOfCurrentLevel As Long ) As Long
	&apos; данные о текущем и предыдущем уровне (по убыванию);
	&apos; шаг - разница текущего и предыдущего уровней (prev и current, напр: 1 и 2)
	&apos; знак (+ или -) показывает переход влево с большего на меньший (напр: 2 и 5) уровень (-) или с меньшего на больший (напр: 2 и 1) уровень (+)
	&apos; 10 - если lIndexOfCurrentLevel вышел за правую границу массива (все уже обработали)
	&apos;  5 - нет предыдущего уровня, есть только текущий (либо в книге всего 1 Заголовок, либо текущий - самый 1-й Заголовок)
	&apos;  0 - текущий и предыдущий уровни - одного ранга, шаг = 0 (напр. 3 и 3)
	&apos; -1 - текущий и предыдущий уровни - смежные, шаг = 1 (напр. 1 и 2)
	&apos;  1 - текущий и предыдущий уровни - смежные, шаг = -1 (напр. 2 и 1)
	&apos; -2 - текущий и предыдущий уровни - не смежные, шаг &gt; 1 (напр. 1 и 4 - шаг=3)
	&apos;  2 - текущий и предыдущий уровни - не смежные, шаг &lt; 1 (напр. 4 и 1 - шаг=-3)
	If lIndexOfCurrentLevel &gt;= UBound( sArray() ) Then
		IsAdjacentCurrentLevelsOfPrevLevel = 10 : Exit Function
	End If
	
	Dim lIndexOfPrevLevel : lIndexOfPrevLevel = GetIndexOfPrevLevel( sArray(), lIndexOfCurrentLevel,1 )
	Dim nStep As Long
	If lIndexOfPrevLevel = -1 Then &apos; нет предыдущего уровня, есть только текущий (либо в книге всего 1 Заголовок, либо текущий - самый 1-й Заголовок)
		IsAdjacentCurrentLevelsOfPrevLevel = -1 
		Exit Function
	Else &apos; предыдущий Уровень есть
		nStep = GetLevelNumber( sArray( lIndexOfCurrentLevel,1 ) ) - GetLevelNumber( sArray( lIndexOfPrevLevel,1 ) )
	End If
	
	If nStep = 0 Then &apos; текущий и предыдущий уровни - одного ранга, шаг = 0 (напр. 3 и 3
		IsAdjacentCurrentLevelsOfPrevLevel = 0
	ElseIf nStep = 1 Then &apos; текущий и предыдущий уровни - смежные, шаг = 1 (напр. 1 и 2)
		IsAdjacentCurrentLevelsOfPrevLevel = -1
	ElseIf nStep = -1 Then &apos; текущий и предыдущий уровни - смежные, шаг = -1 (напр. 2 и 1)
		IsAdjacentCurrentLevelsOfPrevLevel = 1
	ElseIf nStep &gt; 1 Then &apos;  текущий и предыдущий уровни - не смежные, шаг &gt; 1 (напр. 1 и 4 - шаг=3)
		IsAdjacentCurrentLevelsOfPrevLevel = -2
	ElseIf nStep &lt; 1 Then &apos; текущий и предыдущий уровни - не смежные, шаг &lt; 1 (напр. 4 и 1 - шаг=-3)
		IsAdjacentCurrentLevelsOfPrevLevel = 2
	End If
End Function

Function GetLevelNumber(Level As String) As Long
	&apos; Возвращает номер уровня (число) из строки уровня
	Select Case Level
		Case sStyleLevel1
			GetLevelNumber = 1
		Case sStyleLevel2
			GetLevelNumber = 2
		Case sStyleLevel3
			GetLevelNumber = 3
		Case sStyleLevel4
			GetLevelNumber = 4
		Case sStyleLevel5
			GetLevelNumber = 5
		Case sStyleLevel6
			GetLevelNumber = 6
		Case sStyleLevel7
			GetLevelNumber = 7
		Case sStyleLevel8
			GetLevelNumber = 8
		Case sStyleLevel9
			GetLevelNumber = 9
		Case sStyleLevel10
			GetLevelNumber = 10
	End Select
End Function

&apos; ///////////////////////////////////////////////////////////////

&apos;==================================================================================================================
&apos; 						формирование разделов &lt;body&gt; fb2 файла
&apos;==================================================================================================================

Function IsAECP( sStyle As String ) As Boolean
	&apos; Если sStyle - это Эпиграф, Цитата или Поэма - то возвращается True, иначе - False
	Select Case sStyle
			Case sStylePoem
				IsAECP = True
			Case sStylePoemTitle
				IsAECP = True
			Case sStylePoemSubTitle
				IsAECP = True
			Case sStylePoemAuthor
				IsAECP = True
			Case sStylePoemDate
				IsAECP = True
			Case sStyleCite
				IsAECP = True
			Case sStyleCiteSubTitle
				IsAECP = True
			Case sStyleCiteAuthor
				IsAECP = True
			Case sStyleEpigraph
				IsAECP = True
			Case sStyleEpigraphAuthor
				IsAECP = True
			Case sStyleAnnotationSubTitle
				IsAECP = True
			Case Else
				IsAECP = False
	End Select
End Function

Sub SaveBody()
	If  IsLevel( sBodyParagraphs( UBound( sBodyParagraphs ), 1) ) = True OR _
		IsAECP( sBodyParagraphs( UBound( sBodyParagraphs ), 1) ) = True Then
		&apos; Защита от &quot;вылетания&quot; конвертора, на случай, если последний абзац - 
		&apos; Уровень (в нарушение схемы), Эпиграф (в нарушение схемы), Поэма, Цитата
	 	&apos; значительно упрощаются функции создания сложных Поэм, Цитата и т.д. -
	 	&apos; Убирается масса проверок на верхний граничный индекс - увеличивается быстродействие конвертора!
		AddLevelToBodyArray( sBodyParagraphs(), &quot;&lt;empty-line/&gt;&quot;, &quot;&quot;, &quot;&quot;, False )
	End If

	lCurrentElement = 0
	oTextOutputStream.writeString( MakeBookTitle )
	
	MakeBody( sBodyParagraphs(), True )
End Sub

Function Save1OpenSectionForCandidate( sArray() As String, lCurrentElement As Long, bTextSmSection As Boolean )
	Save1OpenSectionForCandidate = False
	&apos; печать 1 открывающей секции для кандидатов в обрамление &lt;section&gt;...&lt;/section&gt; для уровней, вида 1,текст,2; 1,текст,5
	If IsCandidateToSections( sArray(), lCurrentElement ) Then
		&apos; возможные кандидаты на обрамление &lt;sections&gt;...&lt;/sections&gt; для уровней, вида 1,текст,2; 1,текст,5
		If bTextSmSection = False Then
			oTextOutputStream.writeString(&quot;&lt;section&gt;&quot; &amp; chr(10))
			bTextSmSection = True
			Save1OpenSectionForCandidate = True
		End If
	End If
End Function

&apos; печать заданного числа открывающих &lt;section&gt;
Sub SaveNOpenSections( N As Long )
	If N &gt; 0 Then
		Dim i As Long
		For i = 0 To N - 1
			oTextOutputStream.writeString( &quot;&lt;section&gt;&quot; &amp; chr(10) )
		Next i
	End If
End Sub

Function IsCandidateToSections( sArray() As String, lCurrentElement As Long )
	&apos; возможные кандидаты на обрамление &lt;sections&gt;...&lt;/sections&gt; для уровней, вида 1,текст,2; 1,текст,5
	IsCandidateToSections = False
	Dim sElement As String : sElement = sArray(lCurrentElement,1)
	If sElement=&quot;Para&quot; OR sElement=&quot;ParaCenter&quot; OR sElement=&quot;ParaRight&quot; _
		OR sElement = sStylePoem Or sElement = sStylePoemTitle Or sElement = sStylePoemSubTitle Or sElement = sStylePoemAuthor _
		OR sElement = sStyleCite Or sElement = sStyleCiteSubTitle Or sElement = sStyleCiteAuthor _
		OR sElement = sStyleSubTitle OR sElement = &quot;Image&quot; OR sElement = &quot;Table&quot; OR sElement = &quot;&quot; _
		 Then
			IsCandidateToSections = True
	End If
End Function

&apos; экспорт сносок и концевых сносок в разные блоки
Function SaveNotes( IsFootNotes As Boolean ) As Long
	SaveNotes = 0
	lCurrentElement = 0
	Dim oFootNotes	: oFootNotes	= ThisComponent.getFootnotes()
	Dim oEndNotes	: oEndNotes		= ThisComponent.getEndnotes()
	Dim lCount		As Long
	Dim vaFNPara()	As Variant
	
	If IsFootNotes Then
		&apos; сноски
		If oFootNotes.getCount() &gt; 0 Then
			&apos; сохраняем сноски
			oTextOutputStream.writeString(&quot;&lt;body name=&quot;&quot;notes&quot;&quot;&gt;&quot; &amp; chr(10))
			oTextOutputStream.writeString(&quot;&lt;title&gt;&quot; &amp; chr(10) &amp; &quot;&lt;p&gt;&quot; &amp; sFootnoteTitle &amp; &quot;&lt;/p&gt;&quot; &amp; chr(10) &amp; &quot;&lt;/title&gt;&quot; &amp; chr(10))
			For lCount = 0 To UBound( vFootnoteText() )
				vaFNPara() = vFootnoteText( lCount ) : vaFNPara() = vaFNPara(0)
				If vaFNPara(0,3) = &quot;FootNote&quot; Then SaveNote( &quot;n&quot;, vaFNPara(), lCount )
			Next lCount
			oTextOutputStream.writeString(&quot;&lt;/body&gt;&quot; &amp; chr(10))
		End If
	Else
		&apos; концевые сноски
		If oEndNotes.getCount() &gt; 0 Then
			&apos; сохраняем концевые сноски
			oTextOutputStream.writeString(&quot;&lt;body name=&quot;&quot;comments&quot;&quot;&gt;&quot; &amp; chr(10))
			oTextOutputStream.writeString(&quot;&lt;title&gt;&quot; &amp; chr(10) &amp; &quot;&lt;p&gt;&quot; &amp; sENTitle &amp; &quot;&lt;/p&gt;&quot; &amp; chr(10) &amp; &quot;&lt;/title&gt;&quot; &amp; chr(10))
			For lCount = 0 To UBound(vEndnoteText())
				vaFNPara() = vEndnoteText( lCount ) : vaFNPara() = vaFNPara(0)
				If vaFNPara(0,3) = &quot;EndNote&quot; Then SaveNote( &quot;c&quot;, vaFNPara(), lCount )
			Next lCount
			oTextOutputStream.writeString(&quot;&lt;/body&gt;&quot; &amp; chr(10))
		End If
	End If
	SaveNotes = lCount
End Function

&apos; экспорт сносок и концевых сносок в общий блок
Function SaveNotesToComonBlock() As Long
	SaveNotesToComonBlock = 0
	lCurrentElement = 0
	Dim lCount As Long : lCount = 0
	If UBound( vFootnoteText() ) &lt;&gt; -1 Then
		Dim vaFNPara()	As Variant
		oTextOutputStream.writeString(&quot;&lt;body name=&quot;&quot;notes&quot;&quot;&gt;&quot; &amp; chr(10))
		oTextOutputStream.writeString(&quot;&lt;title&gt;&quot; &amp; chr(10) &amp; &quot;&lt;p&gt;&quot; &amp; sFootnoteTitle &amp; &quot;&lt;/p&gt;&quot; &amp; chr(10) &amp; &quot;&lt;/title&gt;&quot; &amp; chr(10))
		For lCount = 0 To UBound( vFootnoteText() )
			vaFNPara() = vFootnoteText( lCount ) : vaFNPara() = vaFNPara(0)
			SaveNote( &quot;n&quot;, vaFNPara(), lCount )
		Next lCount
		oTextOutputStream.writeString(&quot;&lt;/body&gt;&quot; &amp; chr(10))
	End If
	SaveNotesToComonBlock = lCount
End Function

Sub SaveNote( idSymbol As String, ByRef vaFNPara() As Variant, lCount As Long )
	Dim sNote As String, sType As String, sBookMark As String, sFNType As String
	oTextOutputStream.writeString(&quot;&lt;section id=&quot;&quot;&quot; &amp; idSymbol &amp; &quot;&quot; &amp; lCount + 1 &amp; &quot;&quot;&quot;&gt;&quot; &amp; chr(10))
&apos;	oTextOutputStream.writeString(&quot;&lt;section id=&quot;&quot;n&quot; &amp; lCount + 1 &amp; &quot;&quot;&quot;&gt;&quot; &amp; chr(10))
	oTextOutputStream.writeString(&quot;&lt;title&gt;&quot; &amp; chr(10) &amp; &quot;&lt;p&gt;&quot; &amp; lCount + 1 &amp; &quot;&lt;/p&gt;&quot; &amp; chr(10) &amp; &quot;&lt;/title&gt;&quot; &amp; chr(10))
	&apos; по всем абзацам каждой сноски
	Redim asFNPars() As String
	Dim lParaCount As Long
	For lParaCount = 0 To UBound( vaFNPara() )
		sNote		= vaFNPara( lParaCount, 0 )
		sType		= vaFNPara( lParaCount, 1 )
		sBookMark	= vaFNPara( lParaCount, 2 )
		sFNType		= vaFNPara( lParaCount, 3 )
		AddNewItemToArray4( asFNPars(), sNote, sType, sBookMark, sFNType )
	Next lParaCount
	lCurrentElement = 0
	&apos; Защита от &quot;вылетания&quot; конвертора, на случай, если последний абзац - Уровень, Эпиграф, Поэма, Цитата (в нарушение схемы)
	&apos; значительно упрощаются функции создания сложных Поэм, Цитата и т.д. -
 	&apos; Убирается масса проверок на верхний граничный индекс - увеличивается быстродействие конвертора!
	AddNewItemToArray4( asFNPars(), &quot;&quot;, &quot;end-fn&quot;, &quot;&quot;, &quot;&quot;) &apos; иначе тип последней строки сноски определяется неверно
	MakeBody( asFNPars(), False )

	oTextOutputStream.writeString(&quot;&lt;/section&gt;&quot; &amp; chr(10))
	oProgressBar.setValue(lCount)
End Sub

&apos; печатаем коды картинок
Function SaveImages() As Long
	If( UBound( Images() ) &gt;= 0 ) Then
		Dim i As Long, j As Long
		j = 0
		For i = 0 To UBound( Images() )
			Dim sMimeFile As String : sMimeFile = getOOoFBToolsTempPath() &amp; &quot;/base64image&quot; &amp; i &amp; &quot;.txt&quot;
			If FileExists( sMimeFile ) Then
				&apos; для jpg-файлов приводим mime-тип к правильному значению
				Dim sExt As String : sExt = Images(i)
				Dim sFileExt As String : sFileExt = Images(i)
				sFileExt = Images(i)
				If LCase(sExt) = &quot;jpg&quot; Then
					sFileExt = &quot;jpeg&quot;
				End If

				&apos; считываем код картинки из файла		
				Dim sLine As String
				Dim oSFA As Object, oFS As Object, oTIS As Object
				oSFA = createUnoService (&quot;com.sun.star.ucb.SimpleFileAccess&quot;)
				oFS = oSFA.openFileRead ( ConvertToURL ( sMimeFile ) )
				oTIS = createUnoService (&quot;com.sun.star.io.TextInputStream&quot;)
				oTIS.setInputStream (oFS)
				If Not IsFileEmpty( sMimeFile ) Then
					&apos; открываем тэг
					oTextOutputStream.writeString( &quot;&lt;binary id=&quot;&quot;img_&quot; &amp; i &amp; &quot;.&quot; &amp; sExt &amp; &quot;&quot;&quot; content-type=&quot;&quot;image/&quot; &amp; sFileExt &amp; &quot;&quot;&quot;&gt;&quot; &amp; chr(10) )
					Do While ( NOT oTIS.isEOF() )
						sLine = oTIS.readLine()
						If sLine &lt;&gt; chr(10) Then
							If sLine &lt;&gt; &quot;&quot; Then
								oTextOutputStream.writeString( sLine &amp; chr(10) )
							End If
						End If
					Loop
					oTIS.closeInput()
					&apos; закрываем тэг
					oTextOutputStream.writeString( &quot;&lt;/binary&gt;&quot; &amp; chr(10) )
					j = j + 1
				End If
			End If
			oProgressBar.setValue(i)
		Next i
	End If
	SaveImages = j
End Function

Function IsNeededELForAnnot( sArray() As String, ByVal lCurrentElement As Long ) As Boolean
	&apos; &quot;защита&quot; - если после аннотации идет сразу Уровень, то вставляем между ними пустую строку для валидности
	Dim l As Long, lPointer As Long
	lPointer = lCurrentElement
	For l=0 To UBound(sArray())
		If sArray(lPointer, 1) &lt;&gt; sStyleAnnotation Then
			If sArray( lPointer, 1 ) = &quot;&quot; Then &apos; пустая строка после стартовой аннотации уже есть
				If bDelEL = True Then &apos; не удаляем пустую строку, даже при включенной опции удаления
					IsNeededELForAnnot = True				
				Else
					IsNeededELForAnnot = False
				End If
				Exit Function
			ElseIf IsLevel( sArray(lPointer, 1) ) = True Then
				IsNeededELForAnnot = True
				Exit Function
			Else
				IsNeededELForAnnot = False
				Exit Function
			End If
		End If
		lPointer = lPointer+1
	Next l
	IsNeededELForAnnot = False
End Function

&apos; переадресация гиперссылки (&lt;a l:href=), если в одном абзаце вставлено несколько закладок
Sub RelinkHREF( sArray() As String, lCurrentIter As Long, IsBody As Boolean )
	Dim sOldHREF As String, sNewHREF As String, lIter As Long
	Dim a() As String : a() = Split( sArray( lCurrentIter, 0 ), &quot;&lt;/a&gt;&quot; )
	For lIter = LBound( a() ) To UBound( a() )
		Dim str As String : str = a( lIter )
		Dim index As Long : index = InStr( str, &quot;type=&quot;&quot;note&quot;&quot;&quot; )
		If index = 0 Then &apos; только для гиперссылок (ссылки на сноски не обрабатываем)
			Dim sTagA	As String	: sTagA		= &quot;&lt;a l:href=&quot;
			Dim indTagA	As Long	: indTagA	= InStr( str, sTagA )
			If indTagA &lt;&gt; 0 Then
				Dim sStart		As String : sStart		= Mid( str, 1, indTagA + Len( sTagA ) + 1 )
				Dim sMiddleTemp	As String : sMiddleTemp	= Mid( str, Len( sStart ) + 1 )
				Dim sEnd		As String : sEnd		= Mid( sMiddleTemp, InStr( sMiddleTemp, &quot;&gt;&quot; ) + 1 )
				sOldHREF = Mid( sMiddleTemp, 1, InStr( sMiddleTemp, &quot;&gt;&quot; ) - 2 )
				sNewHREF = RelinkBookMark( sOldHREF, IsBody )
				a( lIter ) = sStart &amp; sNewHREF &amp; &quot;&quot;&quot;&gt;&quot; &amp; sEnd
			End If
		End If
	Next lIter
	sArray( lCurrentIter, 0 ) = Join( a(), &quot;&lt;/a&gt;&quot; )
End Sub

&apos; переадресация гиперссылки, если в одном абзаце вставлено несколько закладок
Function RelinkBookMark( ByRef BookMarkName As String, IsBody As Boolean ) As String
	RelinkBookMark = BookMarkName
	
	If IsBody Then
		RelinkBookMark = _RelinkBookMark( sLinksTo(), BookMarkName )
	Else
		RelinkBookMark = _RelinkBookMark( sFNLinksTo(), BookMarkName )
	End If
End Function

&apos; переадресация гиперссылки, если в одном абзаце вставлено несколько закладок
Function _RelinkBookMark( ByRef aArray() As String, ByRef BookMarkName As String ) As String
	_RelinkBookMark = BookMarkName
	
	Dim newBookMarkName As String : newBookMarkName = BookMarkName
	If UBound( aArray() )	&gt; -1 Then
		&apos; по названию закладки находим номер &quot;ее&quot; абзаца
		Dim bmNPara As Long : bmNPara = -1	&apos; номер абзаца для обрабатываемой закладки
		Dim bmIndex As Long : bmIndex = 0	&apos; индекс массива для обрабатываемой закладки
		Dim l As Long
		For l = 0 To UBound( aArray() )
&apos;			If BookMarkName = Mid( aArray(l,1), 2 ) Then
			If BookMarkName = aArray(l, 1) Then
				bmNPara = aArray(l, 0)
				bmIndex = l
				Exit For
			End If
		Next l
		
		&apos; есть ли такая закладка в массиве закладок?
		Dim IsWorkingBookMark As Boolean : IsWorkingBookMark = False
		For l = LBound( aArray() ) To UBound( aArray() )
			If BookMarkName = aArray(l, 1) Then
				IsWorkingBookMark = True
				Exit For
			End If
		Next l
		
		&apos; только для закладок, на которые ссылаются гиперссылки
		If IsWorkingBookMark Then
			&apos; формируем закладки по группе (по одному и тому же номеру &quot;их&quot; абзаца - bmNPara)
			Dim bmLIndex As Long : bmLIndex = bmIndex
			If bmIndex = 0 Then &apos; bmIndex = 0 (первый элемент массива)
				bmLIndex = 0
			ElseIf bmIndex &gt; 0 Then
				For l = bmIndex - 1 To 0 Step -1
					If aArray(l,0) &lt; bmNPara Then &apos; уже другая группа закладок
						bmLIndex = l + 1
						Exit For
					ElseIf aArray(l, 0) = bmNPara Then
						bmLIndex = 0
					End If
				Next l
			End If
			newBookMarkName = aArray(bmLIndex, 1)
		End If
	End If
	_RelinkBookMark = newBookMarkName
End Function

Sub MakeBody( sArray() As String, IsBody As Boolean )
	&apos; 1. Печать абзацев, находящихся до 1-й секции (если они есть)
	&apos; Проверка на наличие Annotation, Cite, Poem Title, Poem, Para, &quot;&quot; (&lt;empty-line&gt;).
	&apos; Если есть, то до них ставим &lt;section&gt;, а перед 1-й секцией &lt;/section&gt;. Epigraph - без &lt;section&gt;...&lt;/section&gt;
	Dim lParaCount			As Long		: lParaCount			= UBound( sArray() )
	Dim lIndexOfBookTitle	As Long		: lIndexOfBookTitle		= IndexOfBookTitle( sArray() )
	&apos; ищем 1-й Заголовой любого Уровня только тот, который после Названия Книги!!!
	Dim lIndexOf1Section	As Long
	If lIndexOfBookTitle &lt;&gt; -1 Then &apos; если в тексте нет стиля Book Title
		lIndexOf1Section = IndexOf1Section( sArray(), lIndexOfBookTitle )
	Else							&apos; если стиль Book Title в тексте есть
		lIndexOf1Section = IndexOf1Section( sArray(), 0 )
	End If
	Dim lIndexOfEndSection	As Long		: lIndexOfEndSection	= IndexOfEndSection( sArray() )
	Dim bText				As Boolean	: bText					= False
	Dim bTextSmSection		As Boolean	: bTextSmSection		= False
	
	If lIndexOf1Section = -1 Then &apos; нет ни одной секции
		While sArray( lCurrentElement, 1 ) = sStyleEpigraph
			&apos; Если 1-е элементы - епиграф, то его не берем в &lt;section&gt;, хотя если взять - документ все равно валидный будет
			SaveElements( sArray, sArray(lCurrentElement, 1), sArray(lCurrentElement, 0), IsBody )
			If IsBody Then oProgressBar.setValue(lCurrentElement)
&apos;			If lCurrentElement &gt; UBound( sArray() ) Then Exit Function
		Wend
		&apos; Все остальные элементы обрамляем &lt;section&gt;
		If IsBody = True Then &apos; только для body книги (не для сносок - лишняя секция)
			oTextOutputStream.writeString(&quot;&lt;section&gt;&quot; &amp; chr(10))
		End If
		While lCurrentElement &lt;= UBound(sArray)
			SaveElements(sArray, sArray(lCurrentElement, 1), sArray(lCurrentElement, 0), IsBody)
			If IsBody Then oProgressBar.setValue(lCurrentElement)
		Wend
		If IsBody = True Then &apos; только для body книги (не для сносок - лишняя секция)
			oTextOutputStream.writeString(&quot;&lt;/section&gt;&quot; &amp; chr(10))
		End If
	Else &apos;секции есть
		If lIndexOf1Section &gt; 0 Then &apos; что-то есть - записываем до 1-й секции
			While lCurrentElement &lt; lIndexOf1Section
				If sArray(lCurrentElement, 1) = &quot;Para&quot; OR sArray(lCurrentElement, 1) = &quot;ParaCenter&quot; OR sArray(lCurrentElement, 1) = &quot;ParaRight&quot; OR _
					sArray(lCurrentElement, 1) = sStylePoemTitle OR sArray(lCurrentElement, 1) = sStylePoem OR sArray(lCurrentElement, 1) = sStylePoemSubTitle OR _
					sArray(lCurrentElement, 1) = sStyleCiteSubTitle OR sArray(lCurrentElement, 1) = sStyleCite OR _
					sArray(lCurrentElement, 1) = sStyleSubTitle OR sArray(lCurrentElement, 1) = &quot;&quot; OR _
					sArray(lCurrentElement, 1) = &quot;Image&quot; OR sArray(lCurrentElement, 1) = &quot;Table&quot; OR _
					sArray(lCurrentElement, 1) = sStyleAnnotation Then
					If bText = False Then
						oTextOutputStream.writeString(&quot;&lt;section&gt;&quot; &amp; chr(10))
						bText = True
						&apos; &quot;защита&quot; - если после аннотации идет сразу Уровень, то вставляем между ними пустую строку для валидности
						If sArray(lCurrentElement, 1) = sStyleAnnotation Then
							bELForStartAnnot = IsNeededELForAnnot( sArray(), lCurrentElement )
						End If
					End If
					SaveElements(sArray, sArray(lCurrentElement, 1), sArray(lCurrentElement, 0), IsBody)
					If IsBody Then oProgressBar.setValue(lCurrentElement)
				Else &apos; это явно эпиграф
					If bText = True Then
						oTextOutputStream.writeString(&quot;&lt;/section&gt;&quot; &amp; chr(10))
						SaveElements(sArray, sArray(lCurrentElement, 1), sArray(lCurrentElement, 0), IsBody)
						bText = False
					Else &apos; епиграф самый первый, как и должен 
						SaveElements(sArray, sArray(lCurrentElement, 1), sArray(lCurrentElement, 0), IsBody)
					End If
					If IsBody Then oProgressBar.setValue(lCurrentElement)
				End If
				If bText = True AND lCurrentElement = lIndexOf1Section Then
					oTextOutputStream.writeString(&quot;&lt;/section&gt;&quot; &amp; chr(10))
				End If
			Wend
		End If

		&apos; 2. Печать всех блоков секций, начиная от 1-й
		If lIndexOf1Section &lt;&gt; -1 Then &apos; секция есть
			&apos; 2.1 Печать блока секции для 1-го Заголовка (Уровня)
			Dim nH1Index As Long : nH1Index = lCurrentElement
			Dim nH2Index As Long : nH2Index = GetIndexOfNextLevel(sArray, lCurrentElement)
			Dim nH1Level As Long : nH1Level = GetLevelNumber( sArray(nH1Index,1) )
			Dim nH2Level As Long
			If nH2Index = -1 Then
				nH2Level = 0
			Else
				nH2Level = GetLevelNumber( sArray(nH2Index, 1) )
			End If
			
			Dim nOpenSections : nOpenSections = nH1Level &apos; число открывающих &lt;section&gt;
			
			If nH2Level &lt;&gt; 0 Then &apos; если есть 2-й Заголовок
				If nH1Level &lt; nH2Level Then
					&apos; Уровень 1-го Заголовка &lt; Уровня 2-го (например: 1 и 2; 1 и 3; 2 и 4)
					SaveNOpenSections( nOpenSections - 1 ) &apos; печать заданного числа открывающих &lt;section&gt;
					SaveElements(sArray, sArray(lCurrentElement, 1), sArray(lCurrentElement, 0), IsBody) &apos; печатаем Заголовок
					&apos; есть ли текст между этими Заголовками?
					If IsTextBetween2Levels( sArray(), nH1Index, nH2Index ) = True Then
						&apos; между ними есть текст - печатаем этот текст
						While lCurrentElement &lt; nH2Index
							&apos; печать 1 открывающей секции для кандидатов в обрамление &lt;section&gt;...&lt;/section&gt; для уровней, вида 1,текст,2; 1,текст,5, если кандидаты есть
							Save1OpenSectionForCandidate( sArray(), lCurrentElement, bTextSmSection )
							SaveElements(sArray, sArray(lCurrentElement, 1), sArray(lCurrentElement, 0), IsBody)
						Wend
						&apos; закрываем секцию для кандидатов, если они есть
						If bTextSmSection = True Then SaveCloseSection(1)
					End If
					Dim nStep : nStep = nH2Level - nH1Level &apos; шаг между Уровнями 2-х первых Заголовков
					SaveNOpenSections( nStep - 1 ) &apos; печать заданного числа открывающих &lt;section&gt;
				ElseIf nH1Level &gt; nH2Level Then
					&apos; Уровень 1-го Заголовка &gt; Уровня 2-го (например: 2 и 1; 6 и 2)
					SaveNOpenSections( nOpenSections - 1 ) &apos; печать заданного числа открывающих &lt;section&gt;
					SaveElements(sArray, sArray(lCurrentElement, 1), sArray(lCurrentElement, 0), IsBody) &apos; печатаем Заголовок
					&apos; есть ли текст между этими Заголовками?
					If IsTextBetween2Levels( sArray(), nH1Index, nH2Index ) = False Then
						&apos; между ними нет текста - печатаем пустую строку
						oTextOutputStream.writeString(&quot;&lt;empty-line/&gt;&quot; &amp; chr(10)) &apos; иначе - не валидность
					Else
						&apos; между ними есть текст - печатаем этот текст
						While lCurrentElement &lt; nH2Index
							SaveElements(sArray, sArray(lCurrentElement, 1), sArray(lCurrentElement, 0), IsBody)
						Wend
					End If
					SaveCloseSection( nOpenSections ) &apos; закрываем &lt;/section&gt;
					&apos; для 2-го Заголовка печатаем недостающие открывающие &lt;section&gt;
					SaveNOpenSections( nH2Level - 1 ) &apos; печать заданного числа открывающих &lt;section&gt;
				Else
					&apos; Уровень 1-го Заголовка = Уровню 2-го (например: 3 и 3; 1 и 1)
					SaveNOpenSections( nOpenSections - 1 ) &apos; печать заданного числа открывающих &lt;section&gt;
					SaveElements(sArray, sArray(lCurrentElement, 1), sArray(lCurrentElement, 0), IsBody) &apos; печатаем Заголовок
					&apos; есть ли текст между этими Заголовками?
					If IsTextBetween2Levels( sArray(), nH1Index, nH2Index ) = True Then
						While lCurrentElement &lt; nH2Index
							SaveElements(sArray, sArray(lCurrentElement, 1), sArray(lCurrentElement, 0), IsBody)
						Wend
					End If
					SaveCloseSection( 1 ) &apos; закрываем &lt;/section&gt;
				End If
			Else
				&apos; в книге только 1 Заголовок
				SaveNOpenSections( nOpenSections - 1 ) &apos; печать заданного числа открывающих &lt;section&gt;
				SaveElements(sArray, sArray(lCurrentElement, 1), sArray(lCurrentElement, 0), IsBody) &apos; печатаем Заголовок
				If IsTextBetween2Levels( sArray(), nH1Index, lParaCount ) = False Then
					&apos; между 1-м Заголовком и последним абзацем нет текста - печатаем пустую строку
					oTextOutputStream.writeString(&quot;&lt;empty-line/&gt;&quot; &amp; chr(10)) &apos; иначе - не валидность
				Else
					Do
						SaveElements(sArray, sArray(lCurrentElement, 1), sArray(lCurrentElement, 0), IsBody)
					Loop While ( lCurrentElement &lt;= lParaCount )
				End If
				SaveCloseSection( nH1Level ) &apos; закрываем &lt;/section&gt;
				If IsBody Then oProgressBar.setValue(lCurrentElement)
				Exit Sub
			End If
			If IsBody Then oProgressBar.setValue(lCurrentElement)
			
			&apos; 2.2 Печать остальных блоков секций, начиная от 2-й
			Dim lIndexOfCurrentLevel As Long, lIndexOfNextLevel As Long
			Dim nCurrentLevel As Long, nNextLevel As Long			
			While lCurrentElement &lt;= lParaCount &apos; по индексам
				lIndexOfCurrentLevel	= lCurrentElement &apos; индекс текущего уровня
				lIndexOfNextLevel		= GetIndexOfNextLevel( sArray(), lCurrentElement ) &apos; индекс следующего уровня
				nCurrentLevel			= GetLevelNumber( sArray(lIndexOfCurrentLevel, 1) )
				If lIndexOfNextLevel = -1 Then
					nNextLevel = lIndexOfEndSection
				Else
					nNextLevel = GetLevelNumber( sArray(lIndexOfNextLevel, 1) )
				End If
				If lIndexOfNextLevel = -1 Then lIndexOfNextLevel = lParaCount + 1
				bTextSmSection = False &apos; для вставки &lt;section&gt; после &lt;title&gt; уровня
				While lCurrentElement &lt; lIndexOfNextLevel
					&apos; печатаем все абзацы между секциями (саму следующую секцию не включаем)
					&apos; печатаем Заголовок
					SaveElements(sArray, sArray( lIndexOfCurrentLevel, 1), sArray(lIndexOfCurrentLevel, 0), IsBody )
					Dim NN As Long : NN = IsAdjacentCurrentLevelsOfNextLevel( sArray(), lIndexOfCurrentLevel )
					&apos; NN: знак (+ или -) показывает переход вправо с большего на меньший (напр: 5 и 2) уровень (-) или с меньшего на больший (напр: 1 и 2) уровень (+)
					&apos; 10 - если lIndexOfCurrentLevel вышел за правую границу массива (все уже обработали)
					&apos;  5 - нет следующего уровня, есть только текущий (либо в книге всего 1 Заголовок, либо текущий - последний Заголовок)
					&apos;  0 - текущий и следующий уровни - одного ранга, шаг = 0 (напр. 3 и 3)
					&apos;  1 - текущий и следующий уровни - смежные, шаг = -1 (напр. 1 и 2)
					&apos; -1 - текущий и следующий уровни - смежные, шаг = 1 (напр. 2 и 1)
					&apos;  2 - текущий и следующий уровни - не смежные, шаг &lt; -1 (напр. 1 и 4 - шаг=-3)
					&apos; -2 - текущий и следующий уровни - не смежные, шаг &gt; 1 (напр. 4 и 1 - шаг=3)
					If NN = 5 Then	&apos; нет следующего уровня, есть только текущий, который и является последним Заголовком
						&apos; печатем текст (элементы структуры) до конца книги
						If IsTextBetween2Levels( sArray(), lIndexOfCurrentLevel, lIndexOfNextLevel ) = False Then
							&apos; между ними нет текста - печатаем пустую строку
							oTextOutputStream.writeString(&quot;&lt;empty-line/&gt;&quot; &amp; chr(10)) &apos; иначе - не валидность
						Else
							&apos; между ними есть текст - печатаем этот текст
							While lCurrentElement &lt; lIndexOfNextLevel
								SaveElements(sArray, sArray(lCurrentElement, 1), sArray(lCurrentElement, 0), IsBody)
							Wend
						End If
						SaveCloseSection( nCurrentLevel ) &apos; закрываем &lt;/section&gt;
					Else &apos; следующий уровень есть
						&apos; Какое направление: с меньшего на больший (1,2) или с большнго на меньший (3,1), или это - уровни одного ранга?
						If NN = 0 Then
							&apos; текущий Заголовок и следующий - уровни одного ранга (1 и 1; 5 и 5)
							&apos; есть ли текст между этими Заголовками одного ранга?
							If IsTextBetween2Levels( sArray(), lIndexOfCurrentLevel, lIndexOfNextLevel ) = True Then
								While lCurrentElement &lt; lIndexOfNextLevel
									SaveElements(sArray, sArray(lCurrentElement, 1), sArray(lCurrentElement, 0), IsBody)
								Wend
							End If
							SaveCloseSection( 1 ) &apos; закрываем &lt;/section&gt;
						ElseIf NN &gt; 0 Then	&apos; направление с меньшего к большему (1 и 2; 2 и 5)
							&apos; смежные ли эти уровни?
							If NN = 1 Then 	&apos; смежные
								&apos; есть ли текст между ними?
								If IsTextBetween2Levels( sArray(), lIndexOfCurrentLevel, lIndexOfNextLevel ) = False Then
									&apos; между смежными уровнями текста нет (1,2) - чисто смежные уровни
									&apos; печать заданного числа открывающих &lt;section&gt; для Следующего Заголовка
									SaveNOpenSections( (nNextLevel - nCurrentLevel) - 1 )
								Else &apos; текст между смежными уровнями есть (1-text-2)
									While lCurrentElement &lt; lIndexOfNextLevel
										&apos; печать 1 открывающей секции для кандидатов в обрамление &lt;section&gt;...&lt;/section&gt; для уровней, вида 1,текст,2; 1,текст,5, если кандидаты есть
										Save1OpenSectionForCandidate( sArray(), lCurrentElement, bTextSmSection )
										SaveElements( sArray(), sArray(lCurrentElement, 1), sArray(lCurrentElement, 0), IsBody )
									Wend
									&apos; закрываем секцию для кандидатов, если они есть
									If bTextSmSection = True Then SaveCloseSection(1)
									&apos; печать заданного числа открывающих &lt;section&gt; для Следующего Заголовка
									SaveNOpenSections( (nNextLevel - nCurrentLevel) - 1 )
								End If
							Else &apos; не смежные, NN = 2
								&apos; есть ли текст между ними?
								If IsTextBetween2Levels( sArray(), lIndexOfCurrentLevel, lIndexOfNextLevel ) = False Then
									&apos; между не смежными уровнями текста нет (1,4)
									SaveNOpenSections( (nNextLevel - nCurrentLevel) - 1 ) &apos; печать заданного числа открывающих &lt;section&gt; для Следующего Заголовка
								Else &apos; текст между не смежными уровнями есть (1-text-3)
									While lCurrentElement &lt; lIndexOfNextLevel
										&apos; печать 1 открывающей секции для кандидатов в обрамление &lt;section&gt;...&lt;/section&gt; для уровней, вида 1,текст,2; 1,текст,5, если кандидаты есть
										Save1OpenSectionForCandidate( sArray(), lCurrentElement, bTextSmSection )
										SaveElements( sArray(), sArray(lCurrentElement, 1), sArray(lCurrentElement, 0), IsBody )
									Wend
									&apos; закрываем секцию для кандидатов, если они есть
									If bTextSmSection = True Then SaveCloseSection(1)
									&apos; печать заданного числа открывающих &lt;section&gt; для Следующего Заголовка
									SaveNOpenSections( (nNextLevel - nCurrentLevel) - 1 )
								End If
							End If
						Else &apos; направление с большего к меньшему (2 и 1; 5 и 3) - NN &lt; 0
							&apos; есть ли текст между этими Заголовками?
							If IsTextBetween2Levels( sArray(), lIndexOfCurrentLevel, lIndexOfNextLevel ) = False Then
								&apos; между ними нет текста - печатаем пустую строку
								oTextOutputStream.writeString(&quot;&lt;empty-line/&gt;&quot; &amp; chr(10)) &apos; иначе - не валидность
							Else
								&apos; между ними есть текст - печатаем этот текст
								While lCurrentElement &lt; lIndexOfNextLevel
									SaveElements(sArray, sArray(lCurrentElement, 1), sArray(lCurrentElement, 0), IsBody)
								Wend
							End If
							SaveCloseSection( (nCurrentLevel - nNextLevel) + 1 ) &apos; закрываем &lt;/section&gt;
						End If
					End If
					If IsBody Then oProgressBar.setValue(lCurrentElement)
				Wend
			Wend
		End If
	End If
End Sub

&apos; Пояснения к алгоритму:
&apos; для уровней одного ранга (1,1; 3,3) ничего обрамлять секциями между этими уровнями не надо.
&apos; ТОЛЬКО Аннотация и (или) ТОЛЬКО Эпиграф - если они одни между уровнями одного ранга (по отдельности),
&apos; то после них обязательно ставим пустую строку!!!
Sub SaveElements( sArray() As String, sParaStyleName As String, sPara As String, IsBody As Boolean )
	&apos; переадресация гиперссылки (&lt;a l:href=), если в одном абзаце вставлено несколько закладок
	RelinkHREF( sArray(), lCurrentElement, IsBody )
	
	&apos; перебор по стилям
	Dim sStr As String, bFB2Clear As Boolean
	Select Case sParaStyleName
		Case sStylePoemTitle
			sStr = MakePoem(sArray(), IsBody)
			SaveFBCorrectText(sStr, True)
		Case sStylePoemSubTitle
			sStr = MakePoem(sArray(), IsBody)
			SaveFBCorrectText(sStr, True)
		Case sStylePoem
			sStr = MakePoem(sArray(), IsBody)
			SaveFBCorrectText(sStr, True)
		Case sStyleEpigraph
			sStr = MakeEpigraph(sArray(), sStyleEpigraph, sStyleEpigraphAuthor, IsBody)
			SaveFBCorrectText(sStr, True)
		Case sStyleCite
			sStr = MakeCite(sArray(), IsBody)
			SaveFBCorrectText(sStr, True)
		Case sStyleCiteSubTitle
			sStr = MakeCite(sArray(), IsBody)
			SaveFBCorrectText(sStr, True)
		Case sStyleCiteAuthor
			&apos; если после текста стоит Автор Цитаты (без самой цитаты) - обычно - в конце Введения книги
			sStr = MakeCiteAuthor(sArray(), IsBody)
			If sStr &lt;&gt; &quot;&quot; Then sStr = &quot;&lt;cite&gt;&quot; + sStr + &quot;&lt;/cite&gt;&quot;
			SaveFBCorrectText(sStr, True)
		Case sStyleAnnotation
			sStr = MakeAnnotation(sArray(), IsBody)
			SaveFBCorrectText(sStr, True)
		Case sStyleAnnotationSubTitle
			sStr = MakeAnnotation(sArray(), IsBody)
			SaveFBCorrectText(sStr, True)
		Case sStyleSubTitle
			sStr = MakeSubTitle(sArray(), sStyleSubTitle, bMergeSubTitle, IsBody)
			SaveFBCorrectText(sStr, True)
		Case sStyleLevel1
			sStr = MakeSection(sArray(), IsBody)
			SaveFBCorrectText(sStr, True)
		Case sStyleLevel2
			sStr = MakeSection(sArray(), IsBody)
			SaveFBCorrectText(sStr, True)
		Case sStyleLevel3
			sStr = MakeSection(sArray(), IsBody)
			SaveFBCorrectText(sStr, True)
		Case sStyleLevel4
			sStr = MakeSection(sArray(), IsBody)
			SaveFBCorrectText(sStr, True)
		Case sStyleLevel5
			sStr = MakeSection(sArray(), IsBody)
			SaveFBCorrectText(sStr, True)
		Case sStyleLevel6
			sStr = MakeSection(sArray(), IsBody)
			SaveFBCorrectText(sStr, True)
		Case sStyleLevel7
			sStr = MakeSection(sArray(), IsBody)
			SaveFBCorrectText(sStr, True)
		Case sStyleLevel8
			sStr = MakeSection(sArray(), IsBody)
			SaveFBCorrectText(sStr, True)
		Case sStyleLevel9
			sStr = MakeSection(sArray(), IsBody)
			SaveFBCorrectText(sStr, True)
		Case sStyleLevel10
			sStr = MakeSection(sArray(), IsBody)
			SaveFBCorrectText(sStr, True)

		Case &quot;&quot; &apos; &lt;empty-line/&gt;
			If bDelEL = False Then
				If bDocLinks = True Then
					&apos; обработка ссылок внутри документа
					Dim sIDEL As String : sIDEL = FindBookmarkForID( lCurrentElement, IsBody )
					If sIDEL &lt;&gt; &quot;&quot; Then &apos; нашли закладку (ссылку) для текущего элемента
						oTextOutputStream.writeString( &quot;&lt;p &quot; &amp; &quot;id=&quot;&quot;&quot; &amp; sIDEL &amp; &quot;&quot;&quot;&gt;&quot; &amp; &quot;&lt;/p&gt;&quot; &amp; chr(10) )
					Else &apos; для текущего элемента нет ни одной закладки (и ссылки, соответственно)
						oTextOutputStream.writeString( &quot;&lt;empty-line/&gt;&quot; &amp; chr(10) )
					End If
				Else
					oTextOutputStream.writeString( &quot;&lt;empty-line/&gt;&quot; &amp; chr(10) )
				End If
			Else
				If lCurrentElement &gt; 0 And lCurrentElement &lt; UBound( sArray() ) Then
					If IsLevel( sArray(lCurrentElement-1,1) ) And IsLevel( sArray( lCurrentElement + 1, 1 ) ) Then
						If sArray( lCurrentElement - 1, 1 ) = sArray( lCurrentElement + 1, 1 ) Then
							&apos; обработка смежных уровней одного ранга - если между ними только пустая строка, то ее не удаляем - иначе - невалидность fb2-файла.
							oTextOutputStream.writeString(&quot;&lt;empty-line/&gt;&quot; &amp; chr(10))
						Else
							&apos; проверка - следующая строка в массиве - уровень меньшего ранга?
							Dim sLevels(9) As String
							Dim i As Long, nPrev As Long, nNext As Long
							sLevels = Array(sStyleLevel1, sStyleLevel2, sStyleLevel3, sStyleLevel4, sStyleLevel5, _
											sStyleLevel6, sStyleLevel7, sStyleLevel8, sStyleLevel9, sStyleLevel10)
							For i = LBound( sLevels ) To UBound( sLevels )
								If sArray(lCurrentElement - 1, 1) = sLevels(i) Then
									nPrev = i
								End If
								If sArray(lCurrentElement + 1, 1) = sLevels(i) Then
									nNext = i
								End If
							Next i
							If nPrev = nNext+1 Then
								&apos; пустая строка между уровнями с большего на меньший ранг - оставляем
								oTextOutputStream.writeString(&quot;&lt;empty-line/&gt;&quot; &amp; chr(10))
							End If
						End If
					ElseIf sArray(lCurrentElement - 1, 1) = &quot;Table&quot; And sArray(lCurrentElement + 1, 1) = &quot;Table&quot; Then
						&apos; не убираем пустую строку между 2-мя таблицами - в читалке сливаются иначе...
						oTextOutputStream.writeString(&quot;&lt;empty-line/&gt;&quot; &amp; chr(10))
					End If
				Else
					If sArray(lCurrentElement, 1) = &quot;&quot; Then
						&apos; Защита от &quot;вылетания&quot; конвертора, на случай, если последний абзац -
						&apos; Уровень (в нарушение схемы), Эпиграф (в нарушение схемы), Поема, Цитата
						oTextOutputStream.writeString(&quot;&lt;empty-line/&gt;&quot; &amp; chr(10))
					End If
				End If
			End If
			lCurrentElement = lCurrentElement + 1
		Case &quot;Table&quot;
			sStr = sPara
			SaveFBCorrectText(sStr, True)
			lCurrentElement = lCurrentElement + 1
		Case &quot;Image&quot;
			oTextOutputStream.writeString( sPara &amp; chr(10) )
			Dim IndexOfPrevLevel : IndexOfPrevLevel = GetIndexOfPrevLevel( sArray(), lCurrentElement )
			Dim IndexOfNextLevel : IndexOfNextLevel = GetIndexOfNextLevel( sArray(), lCurrentElement )
			If IndexOfNextLevel - IndexOfPrevLevel = 2 Then
				oTextOutputStream.writeString( &quot;&lt;empty-line/&gt;&quot; &amp; chr(10) )
			End If
			lCurrentElement = lCurrentElement + 1
		Case &quot;end-fn&quot; &apos; только для сносок - последний &quot;ненужный&quot; элемент массива
			If IsBody = False Then &apos; еще раз убедимся, что это - сноска
				If lCurrentElement &lt;= UBound( sArray() ) Then &apos; чтобы &quot;не вылетить&quot; за границу индекса, на всякий случай
					If IsLevel( sArray( lCurrentElement - 1, 1 ) ) = True Or _
						sArray( lCurrentElement - 1, 1 ) = sStyleAnnotation Or _
						sArray( lCurrentElement - 1, 1 ) = sStyleAnnotationSubTitle Or _
						sArray( lCurrentElement - 1, 1 ) = sStyleEpigraph Or _
						sArray( lCurrentElement - 1, 1 ) = sStyleEpigraphAuthor Then
						&apos; Только для Уровней, Аннотации и Эпиграфа оставляем пустую строку
						oTextOutputStream.writeString(&quot;&lt;empty-line/&gt;&quot; &amp; chr(10))
					End If
				End If
			End If
			lCurrentElement = lCurrentElement + 1
		Case Else &apos; что-то другое или просто параграф - записываем как параграф
			If bDocLinks = True Then
				&apos; обработка ссылок внутри документа
				Dim sID As String : sID = FindBookmarkForID(lCurrentElement, IsBody)
				If sID &lt;&gt; &quot;&quot; Then &apos; нашли закладку (ссылку) для текущего элемента
					If sArray( lCurrentElement, 1 ) = &quot;ParaCenter&quot; Then
						sStr = &quot;&lt;p &quot; &amp; &quot;id=&quot;&quot;&quot; &amp; sID &amp; &quot;&quot;&quot; style=&quot;&quot;text-align:center;&quot;&quot;&gt;&quot; &amp; sPara &amp; &quot;&lt;/p&gt;&quot; &amp; chr(10)
					ElseIf sArray( lCurrentElement, 1 ) = &quot;ParaRight&quot; Then
						sStr = &quot;&lt;p &quot; &amp; &quot;id=&quot;&quot;&quot; &amp; sID &amp; &quot;&quot;&quot; style=&quot;&quot;text-align:right;&quot;&quot;&gt;&quot; &amp; sPara &amp; &quot;&lt;/p&gt;&quot; &amp; chr(10)
					Else
						sStr = &quot;&lt;p &quot; &amp; &quot;id=&quot;&quot;&quot; &amp; sID &amp; &quot;&quot;&quot;&gt;&quot; &amp; sPara &amp; &quot;&lt;/p&gt;&quot; &amp; chr(10)
					End If
				Else &apos; для текущего элемента нет ни одной закладки (и ссылки, соответственно)
					If sArray( lCurrentElement, 1 ) = &quot;ParaCenter&quot; Then
						sStr = &quot;&lt;p style=&quot;&quot;text-align:center;&quot;&quot;&gt;&quot; &amp; sPara &amp; &quot;&lt;/p&gt;&quot; &amp; chr(10)
					ElseIf sArray( lCurrentElement, 1 ) = &quot;ParaRight&quot; Then
						sStr = &quot;&lt;p style=&quot;&quot;text-align:right;&quot;&quot;&gt;&quot; &amp; sPara &amp; &quot;&lt;/p&gt;&quot; &amp; chr(10)
					Else
						sStr = &quot;&lt;p&gt;&quot; &amp; sPara &amp; &quot;&lt;/p&gt;&quot; &amp; chr(10)
					End If
				End If
			Else
				If sArray( lCurrentElement, 1 ) = &quot;ParaCenter&quot; Then
					sStr = &quot;&lt;p style=&quot;&quot;text-align:center;&quot;&quot;&gt;&quot; &amp; sPara &amp; &quot;&lt;/p&gt;&quot; &amp; chr(10)
				ElseIf sArray( lCurrentElement, 1 ) = &quot;ParaRight&quot; Then
					sStr = &quot;&lt;p style=&quot;&quot;text-align:right;&quot;&quot;&gt;&quot; &amp; sPara &amp; &quot;&lt;/p&gt;&quot; &amp; chr(10)
				Else
					sStr = &quot;&lt;p&gt;&quot; &amp; sPara &amp; &quot;&lt;/p&gt;&quot; &amp; chr(10)
				End If
			End If
			SaveFBCorrectText(sStr, False)
			lCurrentElement = lCurrentElement + 1
	End Select
End Sub

&apos; есть ли текст между 2-мя Заголовками?
Function IsTextBetween2Levels( sArray(), nCurrentLevelIndex As Long, nNextLevelIndex As Long ) As Boolean
	&apos; Возвращает: False - если текста нет; True - если текст есть
	IsTextBetween2Levels = False
	Dim nIter As Long
	For nIter = nCurrentLevelIndex To nNextLevelIndex
		If Not IsLevel( sArray( nIter,1 ) ) Then
			IsTextBetween2Levels = True : Exit Function
		End If
	Next nIter
End Function

Function SaveCloseSection(nCount As Long) As Long
	Dim i As Long
	If nCount &gt; 0 Then
		For i = 0 To nCount-1
			oTextOutputStream.writeString(&quot;&lt;/section&gt;&quot; &amp; chr(10))
		Next i
	End If
End Function


&apos;================================================================================================================
&apos; 						сохранение описания книги - секции Description
&apos;================================================================================================================

Function AddBookAnnotation( sPara As String )
	&apos; Собираем всю &quot;отформатированную&quot; Аннотацию на Книгу
	Dim l As Long : l = Ubound( sBookAnnotation() ) + 1
	ReDim Preserve sBookAnnotation(l)
	sBookAnnotation(l) = sPara
	oProgressBar.setValue( UBound( sBodyParagraphs() ), 0 &amp; UBound( sBookAnnotation() ) )
End Function

&apos;***************************************************************************
Sub SaveDescription( sFB2Encoding As String )
	oTextOutputStream.writeString(&quot;&lt;?xml version=&quot;&quot;1.0&quot;&quot; encoding=&quot;&quot;&quot; &amp; sFB2Encoding &amp; &quot;&quot;&quot; ?&gt;&quot; &amp; chr(10))
	oTextOutputStream.writeString(&quot;&lt;FictionBook xmlns=&quot;&quot;http://www.gribuser.ru/xml/fictionbook/2.0&quot;&quot; xmlns:l=&quot;&quot;http://www.w3.org/1999/xlink&quot;&quot;&gt;&quot;&amp;chr(10))
	oTextOutputStream.writeString(&quot;&lt;description&gt;&quot; &amp; chr(10))
	
	oTextOutputStream.writeString(&quot;&lt;title-info&gt;&quot; &amp; chr(10))
	
	Dim i As Long, aTemp() As String
	&apos; для Жанров Книги
	Dim sGenreArray() As Variant : sGenreArray() = GetUserPropertyArray(_fb2_ti_GenreCM)
	If UBound( sGenreArray() ) &lt;&gt; -1 Then
		For i = 0 To UBound( sGenreArray() )
			aTemp() = SplitStringToArray( sGenreArray(i).Value )
			Dim sGenreMatch As String : sGenreMatch = Trim( aTemp(1) ) : sGenreMatch = Mid( sGenreMatch, 1, Len( sGenreMatch ) - 1 )
			If sGenreMatch = &quot;0&quot; Then
				oTextOutputStream.writeString(&quot;&lt;genre&gt;&quot; &amp; GetGenreCode( aTemp(0) ) &amp; &quot;&lt;/genre&gt;&quot; &amp; chr(10))
			Else
				oTextOutputStream.writeString(&quot;&lt;genre match=&quot;&quot;&quot; &amp; sGenreMatch &amp; &quot;&quot;&quot;&gt;&quot; &amp; GetGenreCode( aTemp(0) ) &amp; &quot;&lt;/genre&gt;&quot; &amp; chr(10))
			End If
		Next i
	End If
	
	&apos; для Авторов Книги
	Dim sBookAuthorArray() As Variant : sBookAuthorArray() = GetUserPropertyArray(_fb2_ti_BookAuthor)
	If UBound( sBookAuthorArray() ) &lt;&gt; -1 Then
		For i = 0 To UBound( sBookAuthorArray() )
			aTemp() = SplitStringToArray( sBookAuthorArray(i).Value )
			SaveAuthor( Trim( aTemp(0) ), Trim( aTemp(1) ), Trim( aTemp(2) ), Trim( aTemp(3) ), Trim( aTemp(4) ), Trim( aTemp(5) ) )
		Next i
	Else
		SaveEmptyAuthor()
	End If
	
	oTextOutputStream.writeString(&quot;&lt;book-title&gt;&quot; &amp; CorrectPara( GetBookTitleFromProperty() ) &amp; &quot;&lt;/book-title&gt;&quot; &amp; chr(10))
	
	If UBound(sBookAnnotation()) &lt;&gt; -1 Then
		oTextOutputStream.writeString(&quot;&lt;annotation&gt;&quot; &amp; chr(10) )
		For i = 0 To UBound(sBookAnnotation())
			oTextOutputStream.writeString(&quot;&lt;p&gt;&quot; &amp; sBookAnnotation(i) &amp; &quot;&lt;/p&gt;&quot; &amp; chr(10))
		Next i
		oTextOutputStream.writeString(&quot;&lt;/annotation&gt;&quot; &amp; chr(10) )
	End If
	
	Dim Keywords As String : Keywords = GetKeywordsFromProperty()
	If Keywords &lt;&gt; &quot;&quot; Then oTextOutputStream.writeString(&quot;&lt;keywords&gt;&quot; &amp; CorrectPara( Keywords ) &amp; &quot;&lt;/keywords&gt;&quot; &amp; chr(10))
	
	&apos; дата написания книги
	Dim BookDateValue	As String : BookDateValue	= GetBookDateFromProperty()
	Dim BookDateText	As String : BookDateText	= GetBookDateTextFromProperty()
	If BookDateValue &lt;&gt; &quot;&quot; Then
		If BookDateText &lt;&gt; &quot;&quot; Then
			oTextOutputStream.writeString(&quot;&lt;date value=&quot;&quot;&quot; &amp; BookDateValue &amp; &quot;&quot;&quot;&gt;&quot; &amp; BookDateText &amp; &quot;&lt;/date&gt;&quot; &amp; chr(10))
		Else
			oTextOutputStream.writeString(&quot;&lt;date value=&quot;&quot;&quot; &amp; BookDateValue &amp; &quot;&quot;&quot;&gt;&quot; &amp; &quot;&lt;/date&gt;&quot; &amp; chr(10))
		End If
	Else
		If BookDateText &lt;&gt; &quot;&quot; Then
			oTextOutputStream.writeString(&quot;&lt;date&gt;&quot; &amp; BookDateText &amp; &quot;&lt;/date&gt;&quot; &amp; chr(10))
		End If
	End If
	
	&apos; обложки
	Dim s As String
	If UBound( Covers() ) &gt;= 0 Then
		s = &quot;&lt;coverpage&gt;&quot; &amp; chr(10)
		For i=0 To UBound( Covers() )
			s = s &amp; Covers(i) &amp; chr(10)
		Next i
		s = s &amp; &quot;&lt;/coverpage&gt;&quot; &amp; chr(10)
		oTextOutputStream.writeString( s )
	End If
	
	&apos; Язык Книги
	Dim Lang	As String : Lang	= GetLangFromProperty()
	Dim SrcLang	As String : SrcLang	= GetSrcLangFromProperty()
	oTextOutputStream.writeString(&quot;&lt;lang&gt;&quot; &amp; Mid( Lang, InStr( Lang, &quot;(&quot; )+1, 2 ) &amp; &quot;&lt;/lang&gt;&quot; &amp; chr(10))
	If SrcLang &lt;&gt; &quot;&quot; Then oTextOutputStream.writeString(&quot;&lt;src-lang&gt;&quot; &amp; Mid( SrcLang, InStr( SrcLang, &quot;(&quot; )+1, 2 ) &amp; &quot;&lt;/src-lang&gt;&quot; &amp; chr(10))
	
	&apos; переводчики Книги
	Dim sTranslatorArray() As Variant : sTranslatorArray() = GetUserPropertyArray(_fb2_ti_Translator)
	If UBound( sTranslatorArray() ) &lt;&gt; -1 Then
		For i = 0 To UBound( sTranslatorArray() )
			aTemp() = SplitStringToArray( sTranslatorArray(i).Value )
			SaveTranslator( Trim( aTemp(0) ), Trim( aTemp(1) ), Trim( aTemp(2) ), Trim( aTemp(3) ), Trim( aTemp(4) ), Trim( aTemp(5) ) )
		Next i
	End If
	
	&apos; серии Книги
	Dim sSequenceArray() As Variant : sSequenceArray() = GetUserPropertyArray(_fb2_ti_Sequence)
	If UBound( sSequenceArray() ) &lt;&gt; -1 Then
		For i = 0 To UBound( sSequenceArray() )
			aTemp() = SplitStringToArray( sSequenceArray(i).Value )
			s = &quot;&lt;sequence name=&quot;&quot;&quot; &amp; CorrectPara( Trim( aTemp(0) ) )
			If Trim( Trim( aTemp(1) ) ) &lt;&gt; &quot;&quot; Then
				s = s &amp; &quot;&quot;&quot; number=&quot;&quot;&quot; &amp; CorrectPara( Trim( aTemp(1) ) )
			End If
			s = s &amp; &quot;&quot;&quot;/&gt;&quot; &amp; chr(10)
			oTextOutputStream.writeString( s )
		Next i
	End If
	
	oTextOutputStream.writeString(&quot;&lt;/title-info&gt;&quot; &amp; chr(10))

	oTextOutputStream.writeString(&quot;&lt;document-info&gt;&quot; &amp; chr(10))
	&apos; Авторы fb2-файла
	Dim sFB2AuthorArray() As Variant : sFB2AuthorArray() = GetUserPropertyArray(_fb2_di_FB2Author)
	If UBound( sFB2AuthorArray() ) &lt;&gt; -1 Then
		For i = 0 To UBound( sFB2AuthorArray() )
			aTemp() = SplitStringToArray( sFB2AuthorArray(i).Value )
			SaveAuthor( Trim( aTemp(0) ), Trim( aTemp(1) ), Trim( aTemp(2) ), Trim( aTemp(3) ), Trim( aTemp(4) ), Trim( aTemp(5) ) )
		Next i
	Else
		SaveEmptyAuthor()
	End If
	
	oTextOutputStream.writeString(&quot;&lt;program-used&gt;&quot; &amp; &quot;OOoFBTools-&quot; &amp; getMyVersion( &quot;DikBSD.OOoFBTools&quot; ) &amp; &quot; &quot; &amp; &quot;(ExportToFB21)&quot; &amp; &quot;&lt;/program-used&gt;&quot; &amp; chr(10))
	
	&apos; дата создания fb2-книги
	Dim FB2Date As String : FB2Date = Year(Now) &amp; &quot;-&quot; &amp; Format(Month(Now), &quot;00&quot;) &amp; &quot;-&quot; &amp; Format(Day(Now), &quot;00&quot;)
	oTextOutputStream.writeString(&quot;&lt;date value=&quot;&quot;&quot; &amp; FB2Date &amp; &quot;&quot;&quot;&gt;&quot; &amp; Date &amp; &quot;&lt;/date&gt;&quot; &amp; chr(10))
	
	Dim SrcUrl As String : SrcUrl = GetSrcUrlFromProperty()
	If SrcUrl &lt;&gt; &quot;&quot; Then oTextOutputStream.writeString(&quot;&lt;src-url&gt;&quot; &amp; CorrectPara( SrcUrl ) &amp; &quot;&lt;/src-url&gt;&quot; &amp; chr(10))

	Dim OCR As String : OCR = GetOCRFromProperty()
	If OCR &lt;&gt; &quot;&quot; Then oTextOutputStream.writeString(&quot;&lt;src-ocr&gt;&quot; &amp; CorrectPara( OCR ) &amp; &quot;&lt;/src-ocr&gt;&quot; &amp; chr(10))
	
	oTextOutputStream.writeString(&quot;&lt;id&gt;&quot; &amp; CorrectPara( GetIDFromProperty() ) &amp; &quot;&lt;/id&gt;&quot; &amp; chr(10))
	oTextOutputStream.writeString(&quot;&lt;version&gt;&quot; &amp; CorrectPara( GetVersionFromProperty() ) &amp; &quot;&lt;/version&gt;&quot; &amp; chr(10))
	
	&apos;история
	Dim History As String : History = GetHistoryFromProperty()
	If History &lt;&gt; &quot;&quot; Then
		Dim sHistory() As String : sHistory = Split(History, chr(10))
		oTextOutputStream.writeString(&quot;&lt;history&gt;&quot; &amp; chr(10))
		For i = 0 To UBound(sHistory())
			Dim sH As String : sH = sHistory(i)
			If sH = &quot;&quot; Then
				oTextOutputStream.writeString(&quot;&lt;empty-line/&gt;&quot; &amp; chr(10))
			Else
				oTextOutputStream.writeString(&quot;&lt;p&gt;&quot; &amp; CorrectPara( sH ) &amp; &quot;&lt;/p&gt;&quot; &amp; chr(10))
			End If
		Next i
		oTextOutputStream.writeString(&quot;&lt;/history&gt;&quot; &amp; chr(10))
	End If

	oTextOutputStream.writeString(&quot;&lt;/document-info&gt;&quot; &amp; chr(10))
	SavePublisher()
	SaveCustomInfo()
	oTextOutputStream.writeString(&quot;&lt;/description&gt;&quot;&amp;chr(10))

End Sub

&apos;***************************************************************************
Sub SaveAuthor(Str1 As String, Str2 As String, Str3 As String, Str4 As String, Str5 As String, Str6 As String) 
	oTextOutputStream.writeString(&quot;&lt;author&gt;&quot; &amp; chr(10))
	oTextOutputStream.writeString(&quot;&lt;first-name&gt;&quot; &amp; CorrectPara( Str1 ) &amp; &quot;&lt;/first-name&gt;&quot; &amp; chr(10))
	oTextOutputStream.writeString(&quot;&lt;middle-name&gt;&quot; &amp; CorrectPara( Str2 ) &amp; &quot;&lt;/middle-name&gt;&quot; &amp; chr(10))
	oTextOutputStream.writeString(&quot;&lt;last-name&gt;&quot; &amp; CorrectPara( Str3 ) &amp; &quot;&lt;/last-name&gt;&quot;&amp; chr(10))
	If Str4 &lt;&gt; &quot;&quot; Then
		oTextOutputStream.writeString(&quot;&lt;nickname&gt;&quot; &amp; CorrectPara( Str4 ) &amp; &quot;&lt;/nickname&gt;&quot; &amp; chr(10))
	End IF
	If Str6 &lt;&gt; &quot;&quot; Then
		oTextOutputStream.writeString(&quot;&lt;home-page&gt;&quot; &amp; CorrectPara( Str6 ) &amp; &quot;&lt;/home-page&gt;&quot; &amp; chr(10))
	End If
	If Str5 &lt;&gt; &quot;&quot; Then
		oTextOutputStream.writeString(&quot;&lt;email&gt;&quot; &amp; CorrectPara( Str5 ) &amp; &quot;&lt;/email&gt;&quot; &amp; chr(10))
	End If
	oTextOutputStream.writeString(&quot;&lt;/author&gt;&quot;&amp; chr(10))
End Sub

&apos;***************************************************************************
Sub SaveTranslator(Str1 As String, Str2 As String, Str3 As String, Str4 As String, Str5 As String, Str6 As String)
	If Str1 = &quot;&quot; AND Str2 = &quot;&quot; AND Str3 = &quot;&quot; AND Str4 = &quot;&quot; AND Str5 = &quot;&quot; AND Str6 = &quot;&quot; Then
		Exit Sub
	End If
	oTextOutputStream.writeString(&quot;&lt;translator&gt;&quot; &amp; chr(10))
	oTextOutputStream.writeString(&quot;&lt;first-name&gt;&quot; &amp; CorrectPara( Str1 ) &amp; &quot;&lt;/first-name&gt;&quot; &amp; chr(10))
	oTextOutputStream.writeString(&quot;&lt;middle-name&gt;&quot; &amp; CorrectPara( Str2 ) &amp; &quot;&lt;/middle-name&gt;&quot; &amp; chr(10))
	oTextOutputStream.writeString(&quot;&lt;last-name&gt;&quot; &amp; CorrectPara( Str3 ) &amp; &quot;&lt;/last-name&gt;&quot;&amp; chr(10))
	If Str4 &lt;&gt; &quot;&quot; Then
		oTextOutputStream.writeString(&quot;&lt;nickname&gt;&quot; &amp; CorrectPara( Str4 ) &amp; &quot;&lt;/nickname&gt;&quot; &amp; chr(10))
	End IF
	If Str6 &lt;&gt; &quot;&quot; Then
		oTextOutputStream.writeString(&quot;&lt;home-page&gt;&quot; &amp; CorrectPara( Str6 ) &amp; &quot;&lt;/home-page&gt;&quot; &amp; chr(10))
	End If
	If Str5 &lt;&gt; &quot;&quot; Then
		oTextOutputStream.writeString(&quot;&lt;email&gt;&quot; &amp; CorrectPara( Str5 ) &amp; &quot;&lt;/email&gt;&quot; &amp; chr(10))
	End If
	oTextOutputStream.writeString(&quot;&lt;/translator&gt;&quot;&amp; chr(10))
End Sub

&apos;***************************************************************************
Sub SavePublisher()
	Dim PubBookName	As String : PubBookName = GetPubBookNameFromProperty()
	Dim Publisher	As String : Publisher	= GetPublisherFromProperty()
	Dim City		As String : City		= GetCityFromProperty()
	Dim Year		As String : Year		= GetYearFromProperty()
	Dim ISBN		As String : ISBN		= GetISBNFromProperty()
	Dim sSequenceArray()		As Variant : sSequenceArray()		= GetUserPropertyArray(_fb2_pi_Sequence)
	If PubBookName = &quot;&quot; AND Publisher = &quot;&quot; AND Year = &quot;&quot; AND City = &quot;&quot; AND ISBN = &quot;&quot; AND UBound( sSequenceArray() ) = -1 Then
		Exit Sub
	End If
	
	oTextOutputStream.writeString(&quot;&lt;publish-info&gt;&quot; &amp; chr(10))
	If PubBookName &lt;&gt; &quot;&quot; Then oTextOutputStream.writeString(&quot;&lt;book-name&gt;&quot; &amp; CorrectPara( PubBookName ) &amp; &quot;&lt;/book-name&gt;&quot; &amp; chr(10))
	If Publisher &lt;&gt; &quot;&quot; Then oTextOutputStream.writeString(&quot;&lt;publisher&gt;&quot; &amp; CorrectPara( Publisher ) &amp; &quot;&lt;/publisher&gt;&quot; &amp; chr(10))
	If City &lt;&gt; &quot;&quot; Then oTextOutputStream.writeString(&quot;&lt;city&gt;&quot; &amp; CorrectPara( City ) &amp; &quot;&lt;/city&gt;&quot; &amp; chr(10))
	If Year &lt;&gt; &quot;&quot; Then oTextOutputStream.writeString(&quot;&lt;year&gt;&quot; &amp; CorrectPara( Year ) &amp; &quot;&lt;/year&gt;&quot; &amp; chr(10))
	If ISBN &lt;&gt; &quot;&quot; Then oTextOutputStream.writeString(&quot;&lt;isbn&gt;&quot; &amp; CorrectPara( ISBN ) &amp; &quot;&lt;/isbn&gt;&quot; &amp; chr(10))
	If UBound( sSequenceArray() ) &lt;&gt; -1 Then
		Dim i As Long, s As String, aTemp() As String
		For i = 0 To UBound( sSequenceArray() )
			aTemp() = SplitStringToArray( sSequenceArray(i).Value )
			s = &quot;&lt;sequence name=&quot;&quot;&quot; &amp; CorrectPara( Trim( aTemp(0) ) )
			If Trim( Trim( aTemp(1) ) ) &lt;&gt; &quot;&quot; Then
				s = s &amp; &quot;&quot;&quot; number=&quot;&quot;&quot; &amp; CorrectPara( Trim( aTemp(1) ) )
			End If
			s = s &amp; &quot;&quot;&quot;/&gt;&quot; &amp; chr(10)
			oTextOutputStream.writeString( s )
		Next i
	End If
	oTextOutputStream.writeString(&quot;&lt;/publish-info&gt;&quot; &amp; chr(10))
End Sub

&apos;***************************************************************************
Sub SaveCustomInfo()
	Dim sCustomInfoArray() As Variant : sCustomInfoArray() = GetUserPropertyArray(_fb2_ci_CustomInfo)
	If UBound( sCustomInfoArray() ) &lt;&gt; -1 Then
		Dim i As Long, aTemp() As String
		For i = 0 To UBound( sCustomInfoArray() )
			aTemp() = SplitStringToArray( sCustomInfoArray(i).Value )
			oTextOutputStream.writeString(&quot;&lt;custom-info info-type=&quot;&quot;&quot; &amp; CorrectPara( Trim( aTemp(0) ) ) &amp; &quot;&quot;&quot;&gt;&quot; &amp; CorrectPara( Trim( aTemp(1) ) ) &amp; &quot;&lt;/custom-info&gt;&quot; &amp; chr(10))
		Next i
	End If
End Sub

&apos;***************************************************************************
Sub SaveEmptyAuthor()
	&apos; если автора нет, то записываем только пустые обязательные тэги для валидности книги
	oTextOutputStream.writeString(&quot;&lt;author&gt;&quot; &amp; chr(10))
	oTextOutputStream.writeString(&quot;&lt;first-name/&gt;&quot; &amp; chr(10))
	oTextOutputStream.writeString(&quot;&lt;last-name/&gt;&quot;&amp; chr(10))
	oTextOutputStream.writeString(&quot;&lt;/author&gt;&quot;&amp; chr(10))
End Sub

Function SplitStringToArray( Str As String ) As Array
	SplitStringToArray = Split( Str, &quot;|&quot; )
End Function

&apos; получение кода Жанра из строки: Название (кода)
Function GetGenreCode( ByRef GenreString As String ) As String
	If Trim( GenreString ) = &quot;&quot; Then
		GetGenreCode = &quot;&quot;
		Exit Function
	ElseIf InStr( GenreString, &quot;(&quot; ) = 0 Then
		GetGenreCode = &quot;?&quot;
		Exit Function
	End If
	Dim sGenre	As String	: sGenre	= Trim( GenreString )
	Dim nFrom	As Long	: nFrom		= InStr(sGenre, &quot; (&quot;) + Len(&quot; (&quot;)
	Dim nTo		As Long	: nTo		= InStr(sGenre, &quot;)&quot;)
	GetGenreCode = Trim( Mid( sGenre, nFrom, nTo - nFrom )  )
End Function

&apos; ===================================================================================
&apos; 			локализация формы Конвертера ExportToFB21
&apos; ===================================================================================
&apos; для хранения сообщений для формы Конвертера ExportToFB21
Type tExportToFB21DlgData	
	&apos; Конвертер
	sFB2ExportInnerTable				As String &apos; Наличие в ячейках таблиц вложенных таблиц
	sFB2ExportToFB21DlgTitle			As String &apos; Заголовок основной формы Конвертера
	sFB2ExportProgressBarCreateDialog	As String &apos; Создание диалога
	sFB2ExportProgressBarInit			As String &apos; Инициализация
	sFB2ExportProgressBarCovers			As String &apos; Сбор данных об Обложках
	sFB2ExportProgressBarCreate			As String &apos; Экспорт в FB2: Создание файла
	sFB2ExportProgressBarAnalysis		As String &apos; Экспорт в FB2: Анализ
	sFB2ExportProgressBarFootnote		As String &apos; Экспорт в FB2: Сохранение сносок (примечания)
	sFB2ExportProgressBarEndnote		As String &apos; Экспорт в FB2: Сохранение концевых сносок (комментарии)
	sFB2ExportProgressBarFootEndnote	As String &apos; Экспорт в FB2: Сохранение сносок и концевых сносок в один блок
	sFB2ExportProgressBarGraphics		As String &apos; Экспорт в FB2: Сохранение картинок
	sFB2ExportProgressNotFound			As String &apos; Не найдено
	sFB2ExportProgressFound				As String &apos; Найдено
	sFB2ExportProgressDone				As String &apos; Сделано
	sFB2ExportSaveMessage				As String &apos; Перед экспортом сохраните, пожалуйста, ваш ООо файл.
	sFB2ExportEnd						As String &apos; Создание книги в fb2 формате завершено!
	sFB2ExportReportGeneratedFB2File	As String &apos; Сгенерированный fb2-файл:
	sFB2ExportReportStartToPreview		As String &apos; запущен на просмотр.
	sFB2ExportRequiredPropNotFound		As String &apos; Не заданы обязательные свойства документа:
	sFB2ExportFB2PathNotFound			As String &apos; Не задан путь к создаваемому fb2 файлу.
	sFB2ExportEnterAnotherFB2Path		As String &apos; Задайте другое название fb2-файла.
	sFB2ExportFB2NotFB2Property			As String &apos; В документе нет ни одного сохраненного fb2 свойства.
	sFB2ExportFB2StartFB2PropEditor		As String &apos; Запустить Редактор FB2 свойств?
	&apos; диалог сохранения файла
	sFileDlgSaveAs						As String &apos; Сохранить как...
	sZipOk								As String &apos; Сжатие в zip архив произведено.
End Type

Public sETFB2DD	As tExportToFB21DlgData

&apos;***************************************************************************
&apos; инициализация основной формы конвертера в зависимости от локали
Sub InitExportToFB21Dlg()
	If getOOoLocal() = &quot;ru&quot; OR getOOoLocal() = &quot;uk&quot; Then
		With oExportToFB21Dlg.getModel
			.Title						= &quot;Экспорт в формат fb2.1&quot;
			.fb2Path.Label				= &quot;fb2 файл:&quot;
			.cmdbtnCancel.Label			= &quot;Отмена&quot;
			.cmdbtnExportToFB21.Label	= &quot;Экспорт&quot;
			.ReplaceExistFB2CheckBox.Label	= &quot;Заменять существующий fb2 файл без подтверждения&quot;
			.ZipFB2CheckBox.Label			= &quot;Сжать fb2 файл в zip архив&quot;
		End With
	Else
		With oExportToFB21Dlg.getModel
			.Title						= &quot;Export to fb2.1&quot;
			.fb2Path.Label				= &quot;fb2 file:&quot;
			.cmdbtnCancel.Label			= &quot;Cancel&quot;
			.cmdbtnExportToFB21.Label	= &quot;Export&quot;
			.ReplaceExistFB2CheckBox.Label = &quot;Replace the existing fb2 File without confirmation&quot;
			.ZipFB2CheckBox.Label			= &quot;Zip fb2 file&quot;
		End With
	End If
End Sub

&apos; инициализация сообщений основной формы конвертера в зависимости от локали
Sub InitExportToFB21DlgMessage()
	If getOOoLocal() = &quot;ru&quot; OR getOOoLocal() = &quot;uk&quot; Then
		With sETFB2DD
			&apos; Конвертер
			.sFB2ExportInnerTable				= &quot;В тексте есть таблицы, в ячейки которых вставлена таблица. Конвертер пока не умеет экспортировать эти вложенные таблицы, &quot; + _
				&quot;и они просто игнорируются. Чтобы данные этих вложенных таблиц не были потеряны, &quot; + _
				&quot;их можно трансформировать в текст с помощью интерактивного инструмента &quot;&quot;Преобразовать вложенные таблицы в текст&quot;&quot;.&quot; + chr(10) + chr(10) + _
				&quot;Выберите, что нужно сделать:&quot; + chr(10) + chr(10) + _
				&quot;(Да): Запустить Преобразование вложенных таблиц в текст&quot; + chr(10) + _
				&quot;(Нет): Продолжить конвертацию&quot; + chr(10) + _
				&quot;(Отменить): Прервать конвертацию&quot; + chr(10)
			.sFB2ExportProgressBarCreateDialog	= &quot;Создание диалога&quot;
			.sFB2ExportProgressBarInit			= &quot;Инициализация&quot;
			.sFB2ExportProgressBarCovers		= &quot;Сбор данных об Обложках&quot;
			.sFB2ExportProgressBarCreate		= &quot;Создание файла&quot;
			.sFB2ExportProgressBarAnalysis		= &quot;Анализ документа&quot;
			.sFB2ExportProgressBarFootnote		= &quot;Сохранение сносок (примечания)&quot;
			.sFB2ExportProgressBarEndnote		= &quot;Сохранение концевых сносок (комментарии)&quot;
			.sFB2ExportProgressBarFootEndnote	= &quot;Сохранение сносок и концевых сносок в один блок&quot;
			.sFB2ExportProgressBarGraphics		= &quot;Сохранение графики&quot;
			.sFB2ExportProgressNotFound			= &quot;Не найдено&quot;
			.sFB2ExportProgressFound			= &quot;Найдено: &quot;
			.sFB2ExportProgressDone				= &quot;Сделано.&quot;
			.sFB2ExportSaveMessage				= &quot;Перед экспортом сохраните, пожалуйста, ваш ООо файл.&quot;
			.sFB2ExportEnd						= &quot;Создание книги в fb2 формате завершено!&quot;
			.sFB2ExportReportGeneratedFB2File	= &quot;Сгенерированный fb2-файл:&quot;
			.sFB2ExportReportStartToPreview		= &quot;запущен на просмотр.&quot;
			.sFB2ExportRequiredPropNotFound		= &quot;Не заданы обязательные свойства документа: &quot;
			.sFB2ExportFB2PathNotFound			= &quot;Не задан путь к создаваемому fb2 файлу.&quot;
			.sFB2ExportEnterAnotherFB2Path		= &quot;Задайте другое название fb2-файла.&quot;
			.sFB2ExportFB2NotFB2Property		= &quot;В документе нет ни одного сохраненного fb2 свойства.&quot;
			.sFB2ExportFB2StartFB2PropEditor	= &quot;Запустить Редактор FB2 свойств?&quot;
			&apos; диалог сохранения файла
			.sFileDlgSaveAs						= &quot;Сохранить как...&quot;
			.sZipOk								= &quot;Сжатие в zip архив произведено.&quot;
		End With
	Else
		With sETFB2DD
			&apos; Converter
			.sFB2ExportInnerTable				= &quot;The text has tables with tables nested in cells. &quot; + _
				&quot;The Converter is not capable so far to export such nested tables and they are simply ignored. &quot; + _
				&quot;To preserve the data from such nested tables, they can be converted into text by using the tool of Conversion of nested tables to text.&quot; + chr(10) + chr(10) + _
				&quot;Choose what to proceed with:&quot; + chr(10) + chr(10) + _
				&quot;(YES): Launch tool for Conversion of nested tables to text&quot; + chr(10) + _
				&quot;(NO):Continue conversion&quot; + chr(10) + _
				&quot;(CANCEL): Stop conversion&quot; + chr(10)
			.sFB2ExportProgressBarCreateDialog	= &quot;Creating the Dialog&quot;
			.sFB2ExportProgressBarInit			= &quot;Initialization&quot;
			.sFB2ExportProgressBarCovers		= &quot;Data Collection Cover&quot;
			.sFB2ExportProgressBarCreate		= &quot;File creating&quot;
			.sFB2ExportProgressBarAnalysis		= &quot;Document Analysis&quot;
			.sFB2ExportProgressBarFootnote		= &quot;Export Footnotes (notes)&quot;
			.sFB2ExportProgressBarEndnote		= &quot;Export Endnotes (comments)&quot;
			.sFB2ExportProgressBarFootEndnote	= &quot;Export Footnote and Endnotes to common block&quot;
			.sFB2ExportProgressBarGraphics		= &quot;Export Graphics&quot;
			.sFB2ExportProgressNotFound			= &quot;Not Found&quot;
			.sFB2ExportProgressFound			= &quot;Found: &quot;
			.sFB2ExportProgressDone				= &quot;Done.&quot;
			.sFB2ExportSaveMessage				= &quot;Please, save yuor ООо File before export.&quot;
			.sFB2ExportEnd						= &quot;Creation of the Book in fb2 a Format is completed!&quot;
			.sFB2ExportReportGeneratedFB2File	= &quot;Generated fb2-File:&quot;
			.sFB2ExportReportStartToPreview		= &quot;It is started on viewing.&quot;
			.sFB2ExportRequiredPropNotFound		= &quot;Do not set the required properties of the document:&quot;
			.sFB2ExportFB2PathNotFound			= &quot;Do not know the path to the created fb2 file&quot;
			.sFB2ExportEnterAnotherFB2Path		= &quot;Enter another name fb2 file.&quot;
			.sFB2ExportFB2NotFB2Property		= &quot;In the document there is no saved fb2 properties.&quot;
			.sFB2ExportFB2StartFB2PropEditor	= &quot;Open the FB2 Properties Editor?&quot;
			&apos; Save As Dialog
			.sFileDlgSaveAs						= &quot;Save As...&quot;
			.sZipOk								= &quot;Compressing to zip file finished.&quot;
		End With
	End If
End Sub

&apos; ===========================================================================================
&apos; 				локализация сообщений отсутствия в системе вспомогательных утилит
&apos; ===========================================================================================
&apos; для хранения сообщений отсутствия в системе вспомогательных утилит
Type tNoToolsMessageData
	sNoZip				As String &apos; Нет zip
	sNoXmllint			As String &apos; Нет xmllint
End Type

Public sNYMD As tNoToolsMessageData

&apos; ===========================================================================================
&apos; инициализация сообщений отсутствия в системе вспомогательных утилит
Sub InitNoToolsMessage()
	If getOOoLocal() = &quot;ru&quot; OR getOOoLocal() = &quot;uk&quot; Then
		With sNYMD
			.sNoZip				= &quot;Утилита zip в системе не установлена. Архивирование fb2-файла производиться не будет. Установите утилиту zip.&quot;
			.sNoXmllint			= &quot;Утилита xmllint в системе не установлена. Валидация fb2-файла производиться не будет.  Установите утилиту xmllint.&quot;
		End With
	Else
		With sNYMD
			.sNoZip				= &quot;No zip utility is installed in the system. FB2 files won&apos;t be compressed. Install zip.&quot;
			.sNoXmllint			= &quot;No xmllint utility is installed in the system. FB2 files won&apos;t be validated. Install xmllint.&quot;
		End With
	End If
End Sub
</script:module>