<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="ExportToFB21" script:language="StarBasic">REM  *****  BASIC  *****
Option Explicit

Public Const sConvertorName						As String = &quot;ExportToFB2.1&quot;						&apos; название конвертера
Public Const sConstFB2ConverterDialogSettings	As String = &quot;FB2ConverterDialogSettings.txt&quot;	&apos; файл настроек диалога Конвертера

Public oExportToFB21Dlg	As Object
Public oProgressBar		As Object

Public sCurDocFile			As String &apos; обрабатываемый документ
Public oTextOutputStream	As Object
Public sBookAnnotation()	As String &apos; массив хранит &quot;обработанную&quot; Аннотацию на Книгу
Public sBodyParagraphs()	As String &apos; массив хранит &quot;обработанные&quot; абзацы Книги
Public sLinksTo()			As String &apos; массив ссылок КУДА и их ID

Public lCurrentElement As Long &apos; номер текущего элемента структуры - для создания текста документа

Public sIDFNPrev As String &apos; хранит имя закладки-ID

&apos; ===========================================================================================================================
&apos; 												Работа контролов и формы Конвертера
&apos; ===========================================================================================================================
&apos; перезапуск документа (возвращает oDoc)
Function ReOpenDoc( oDoc As Object ) As Object
&apos;	SaveDocIsModified( oDoc )
	Dim sUrl As String : sUrl = oDoc.getURL()
	CloseDoc( oDoc )
	ReOpenDoc = LoadDocFromUrl( sUrl )
End Function

&apos; Запуск Формы конвертера
Sub ExportToFB21DlgExec()
	&apos; инициализация сообщений основной формы конвертера в зависимости от локали
	InitExportToFB21DlgMessage()
	
	&apos; основные проверки
	Dim oDoc As Object : oDoc = ThisComponent
	If oDoc.hasLocation() Then
		sCurDocFile = oDoc.getURL()
	Else
		MsgBox sETFB2DD.sFB2ExportSaveMessage, 64, sConvertorName
		Exit Sub
	End If
	
	SaveDocIsModified( oDoc )
	If DocRasterGraphicsCount() &gt; 0 Then &apos; количество растровой графики в документе
		&apos; перезапуск документа
		oDoc = ReOpenDoc( oDoc )
	End If
	
	oProgressBar = oDoc.CurrentController.StatusIndicator
	oProgressBar.start( sETFB2DD.sFB2ExportProgressBarCreateDialog + &quot;, &quot; + sETFB2DD.sFB2ExportProgressBarInit, 5 )
	oProgressBar.setValue(0)
	
	&apos; Создание формы
&apos;	DialogLibraries.LoadLibrary( &quot;OOoFBTools&quot; )
	If Not GlobalScope.DialogLibraries.isLibraryLoaded( &quot;OOoFBTools&quot; ) Then
    	GlobalScope.DialogLibraries.LoadLibrary( &quot;OOoFBTools&quot; )
	End If
	oExportToFB21Dlg = CreateUnoDialog( GlobalScope.DialogLibraries.OOoFBTools.ExportToFB21Dlg )
	oProgressBar.setValue(1)
	
	&apos; меняем расширение на fb2
	Dim sFile() As String, i As Integer
	sFile = Split(sCurDocFile, &quot;.&quot;)
	If UBound(sFile) &gt; 0 Then
		For i=0 To UBound(sFile)
			sFile(UBound(sFile)) = &quot;fb2&quot;
		Next i
		sCurDocFile = Join(sFile, &quot;.&quot;)
	Else &apos; файл без точки расширения
		sCurDocFile = sCurDocFile &amp; &quot;.fb2&quot;
	End If
	
	&apos; инициализация основной формы конвертера в зависимости от локали
	InitExportToFB21Dlg()
	
	&apos; считаем положение диалога из файла настроек
	LoadExportToFB21DlgSettings()
	oExportToFB21Dlg.Model.fb2PathTextField.Text = ConvertFromUrl( sCurDocFile )
	oProgressBar.setValue(2)

	&apos; загружаем стили в переменные
	SetFB2LocalStylesToVars()
	&apos; инициализация по-умолчанию названий
	InitServiceDlgMessage()
	&apos; Задаем настройки в переменные по умолчанию
	SetDefaultSettingsToVars()
	oProgressBar.setValue(3)
	&apos; только теперь считываем настройки из файла в переменные
	LoadSettingsToVars()
	oProgressBar.setValue(4)
	oProgressBar.end
	
	oExportToFB21Dlg.execute()
End Sub

&apos;***************************************************************************
&apos; отмена экспорта
Sub ExportToFB21DlgCanceled()
	oExportToFB21Dlg.endExecute()
End Sub

&apos;***************************************************************************
&apos; запуск экспорта документа в fb2 формат
Sub ExportDoc()
	&apos; Есть ли хоть одно fb2 свойство в документе?
	Dim nVar As Integer
	If Not IsFB2NotFlagPropertyIsExsist() Then
		nVar = MsgBox( sETFB2DD.sFB2ExportFB2NotFB2Property &amp; chr(10) &amp; sETFB2DD.sFB2ExportFB2StartFB2PropEditor, _
    					16+1+128, sConvertorName )
    	If nVar = 1 Then
    		oExportToFB21Dlg.endExecute()
    		FB2PropertiesEditorDlgExec()
    	End If
    	Exit Sub
	End If
	
	&apos; все ли обязательные fb2-свойства документа заполнены?
	Dim sErrorMess As String : sErrorMess = IsFB2BindingPropertiesCorrect()
	If sErrorMess &lt;&gt; &quot;&quot; Then
    	nVar = MsgBox( sETFB2DD.sFB2ExportRequiredPropNotFound &amp; chr(10) &amp; sErrorMess &amp; chr(10) &amp; sETFB2DD.sFB2ExportFB2StartFB2PropEditor, _
    					16+1+128, sConvertorName )
    	If nVar = 1 Then
    		oExportToFB21Dlg.endExecute()
    		FB2PropertiesEditorDlgExec()
    	End If
    	Exit Sub
    End If
    
	&apos; задан ли путь к fb2-файлу?
	If Trim( oExportToFB21Dlg.getControl(&quot;fb2PathTextField&quot;).Text ) = &quot;&quot; Then
    	MsgBox sETFB2DD.sFB2ExportFB2PathNotFound, 64, sConvertorName
    	oExportToFB21Dlg.getControl(&quot;fb2PathTextField&quot;).setFocus()
    	Exit Sub
    Else
    	&apos; перезапись существующего fb2 файла без подтверждения
    	If oExportToFB21Dlg.getControl(&quot;ReplaceExistFB2CheckBox&quot;).State = 1 Then
    		If FileExists( ConvertToUrl( oExportToFB21Dlg.Model.fb2PathTextField.Text ) ) Then
    			Kill ConvertToUrl( oExportToFB21Dlg.Model.fb2PathTextField.Text )
    		End If
    	Else
   			If FileExists( ConvertToUrl( oExportToFB21Dlg.Model.fb2PathTextField.Text ) ) Then
	    		MsgBox sETFB2DD.sFB2ExportEnterAnotherFB2Path, 64, sConvertorName
    			oExportToFB21Dlg.getControl(&quot;fb2PathTextField&quot;).setFocus()
    			Exit Sub
    		End If
    	End If 
    End If
    
    With oExportToFB21Dlg
		.getControl(&quot;fb2PathTextField&quot;).Enable = False
		.getControl(&quot;fb2PathSaveAsCmdBtn&quot;).Enable = False
		.getControl(&quot;cmdbtnExportToFB21&quot;).Enable = False
		.getControl(&quot;cmdbtnCancel&quot;).Enable = False
		.getControl(&quot;ReplaceExistFB2CheckBox&quot;).Enable = False
	End With
    
	&apos; записываем расположение на экране диалога Конвертера в файл настроек
	SaveExportToFB21DlgSettings()

	&apos; создаем OOoFBToolsTemp папку
	If Dir( getOOoFBToolsTempPath(), 16 ) = &quot;&quot; Then
		MkDir getOOoFBToolsTempPath()
	End If

	&apos; для Windows системы копируем base64.exe из расширения в OOoFBToolsTemp папку для работы экспорта графики в портабельном режиме
	If GetOS() = 0 Then &apos; для Windows-системы
		Dim base64Path As String : base64Path = ConvertFromURL( getRootStorage( &quot;DikBSD.OOoFBTools&quot; ) ) &amp; &quot;\win32\base64.exe&quot;
		If FileExists( base64Path ) Then
			FileCopy base64Path, ConvertFromURL( getOOoFBToolsTempPath() &amp; &quot;\base64.exe&quot; )
		End If
	End If
	
	Dim oDoc As Object : oDoc = ThisComponent
	oProgressBar.start( sETFB2DD.sFB2ExportProgressBarAnalysis, oDoc.ParagraphCount + 50 )
	oProgressBar.setValue( 0 )
	
	Dim oProgress As Object
	Dim oProgressLabel As Object
	oProgress = oExportToFB21Dlg.getControl(&quot;exportProgressBar&quot;)
	oProgress.setRange(0, 6)
	oProgress.setValue(0)
	oProgressLabel = oExportToFB21Dlg.getControl(&quot;exportLabel&quot;)
	oProgressLabel.Text = &quot;1. &quot; &amp; sETFB2DD.sFB2ExportProgressBarCovers &amp; &quot; ...&quot; &amp; chr(10)
	
	&apos; если есть картинки (ДО абзаца со стилем Названия Книги), то сначала формируем тэги обложек
	If IsStyleExists( sStyleBookTitle ) And ( oDoc.getGraphicObjects().Count &gt; 0 Or oDoc.getDrawPage().Count &gt; 0) Then
		MakeCoverParser()
	End If
	oProgress.setValue(1)
	oProgressLabel.Text = oProgressLabel.Text &amp; &quot;2. &quot; &amp; sETFB2DD.sFB2ExportProgressBarAnalysis &amp; &quot; ...&quot; &amp; chr(10)
	
&apos;	oExportToFB21Dlg.endExecute()
	
	&apos; запускаем парсинг всего текста
	DocumentParser()
	oProgress.setValue(2)
	oProgressLabel.Text = oProgressLabel.Text &amp; &quot;3. &quot; &amp; sETFB2DD.sFB2ExportProgressBarCreate &amp; &quot;...&quot; &amp; chr(10)
	
	&apos; ================== Создание fb2 файла ===========================
	Dim oFileAccess As Object : oFileAccess = CreateUnoService(&quot;com.sun.star.ucb.SimpleFileAccess&quot;)
	oTextOutputStream = CreateUnoService(&quot;com.sun.star.io.TextOutputStream&quot;)
	Dim oOutputStream As Object : oOutputStream = oFileAccess.openFileWrite( ConvertToUrl( oExportToFB21Dlg.Model.fb2PathTextField.Text ) )
	oOutputStream.truncate()
	oTextOutputStream.setOutputStream( oOutputStream )

	Dim sFB2Encoding As String : sFB2Encoding = GetEncodingFromProperty()
	&apos; если в тексте есть маркерные списки, то экспортируем fb2-файл в UTF-8
	If bSaveUTF8 And bMarker Then sFB2Encoding = &quot;utf-8&quot;
	&apos; если в тексте есть хоть один неразрывный дефис или юникодный маркер, то экспортируем в utf-8
	If IsNoBreakDefExsist() OR IsUnicodeMarkerExistsInText() Then sFB2Encoding = &quot;utf-8&quot;
	&apos; если в документе были проставлены ударения над русскими гласными (в свойстве _fb2_AccentMark занесено True )
	If GetStringProperty( _fb2_AccentMark ) &lt;&gt; &quot;&quot; Then sFB2Encoding = &quot;utf-8&quot;
	oTextOutputStream.setEncoding( sFB2Encoding )
	
	&apos; создание fb2 файла
	oProgressBar.start( sETFB2DD.sFB2ExportProgressBarCreate, UBound( sBodyParagraphs() ) )
	oProgressBar.setValue(0)
	&apos; печатаем данные из &lt;description&gt;
	SaveDescription( sFB2Encoding, False )
	oProgress.setValue(3)
	
	&apos; печатаем данные из &lt;body&gt;
	oTextOutputStream.writeString(&quot;&lt;body&gt;&quot; &amp; chr(10))
	SaveBody()
	oProgress.setValue(4)
	oTextOutputStream.writeString(&quot;&lt;/body&gt;&quot; &amp; chr(10))
	
	oProgressLabel.Text = oProgressLabel.Text &amp; &quot;4. &quot; &amp; sETFB2DD.sFB2ExportProgressBarFootnote &amp; &quot;...&quot; &amp; chr(10)
	If UBound( vFootnoteText() ) &lt;&gt; -1 Or UBound( vEndnoteText() ) &lt;&gt; -1 Then
		Dim imaxProgress As Integer
		If UBound( vFootnoteText() ) &lt;&gt; -1 Then imaxProgress = UBound( vFootnoteText() )
		If UBound( vEndnoteText() ) &lt;&gt; -1 Then imaxProgress = imaxProgress + UBound( vEndnoteText() )
		oProgressBar.start( sETFB2DD.sFB2ExportProgressBarFootnote, imaxProgress )
		oProgressBar.setValue(0)
		SaveNotes()
	End If
	oProgress.setValue(5)
	oProgressLabel.Text = oProgressLabel.Text &amp; &quot;5. &quot; &amp; sETFB2DD.sFB2ExportProgressBarGraphics &amp; &quot;...&quot; &amp; chr(10)
	
	&apos; печатаем коды картинок, если они есть
	If UBound(Images()) &lt;&gt; -1 Then
		oProgressBar.start( sETFB2DD.sFB2ExportProgressBarGraphics, UBound(Images() )
		oProgressBar.setValue(0)
		SaveImages()
	End If
	oProgress.setValue(6)
	oProgressLabel.Text = oProgressLabel.Text &amp; sETFB2DD.sFB2ExportEnd &amp; chr(10)
	
	oTextOutputStream.writeString(&quot;&lt;/FictionBook&gt;&quot; &amp; chr(10))
	oTextOutputStream.closeOutput()
	oProgressBar.End
		
	&apos; запустить полученный файл на просмотр и валидацию, если нужно
	Dim sEndMessage	As String : sEndMessage	= sETFB2DD.sFB2ExportEnd
	Dim sFB2File	As String : sFB2File	= oExportToFB21Dlg.Model.fb2PathTextField.Text
	Dim sMess		As String : sMess		= sEndMessage &amp; chr(10) &amp; chr(10)
	
	Dim sValidateResult As String
	If bValidate Then
		sValidateResult = Validate( sFB2File, GetWorkFB2Schema() ) &apos;валидация результата
	End If

	If bFB2Execute Then
		FileExecute( ConvertToUrl( sFB2File ) )
		MsgBox sMess &amp; sValidateResult &amp; sETFB2DD.sFB2ExportReportGeneratedFB2File &amp; chr(10) &amp; _
				sFB2File &amp; chr(10) &amp; sETFB2DD.sFB2ExportReportStartToPreview, 64, sConvertorName
	Else
		MsgBox sMess &amp; sValidateResult, 64, sConvertorName
	End If
	oExportToFB21Dlg.endExecute()
	
	&apos; удаляем временные файлы
	If Dir( getOOoFBToolsTempPath(), 16 ) &lt;&gt; &quot;&quot; Then
		RmDir getOOoFBToolsTempPath()
	End If
End Sub

&apos;***************************************************************************
&apos; определяем. какая схема жанров использовалась для конвертации
Function GetWorkFB2Schema() As String
	On Error Resume Next
	Dim sFB21 As String, sFB22 As String, sFB2LibRusEc As String, sFB2Flibusta As String
	sFB21 = &quot;0&quot; : sFB22 = &quot;0&quot; : sFB2LibRusEc = &quot;0&quot; : sFB2Flibusta = &quot;0&quot;
	Dim sFileName As String : sFileName = getOOoFBToolsSettingsDir() &amp; sConstFB2PropEditorSettings
	Dim nX As Integer, nY As Integer
	
	If GetOS() = 0 Then
		GetWorkFB2Schema = &quot;\fb2-schema\FictionBook.xsd&quot;
	Else
		GetWorkFB2Schema = &quot;/fb2-schema/FictionBook.xsd&quot;
	End If
	
	If FileExists( sFileName ) Then
		Dim sLine As String
		Dim oSFA As Object, oFS As Object, oTIS As Object
		
		oSFA = createUnoService ( &quot;com.sun.star.ucb.SimpleFileAccess&quot; )
		oFS = oSFA.openFileRead ( ConvertToURL ( sFileName ) )
		oTIS = createUnoService ( &quot;com.sun.star.io.TextInputStream&quot; )
		oTIS.setInputStream (oFS)
		Do While ( NOT oTIS.isEOF() )
			sLine = oTIS.readLine()
			If sLine &lt;&gt; &quot;&quot; Then
				&apos; Устанавливаем данные
				Dim sSetting() As String : sSetting = Split(sLine, &quot;=&quot;)
				If sSetting(0) = &quot;obtnFB2LibRusEc&quot; Then
					sFB2LibRusEc = sSetting(1)
				ElseIf sSetting(0) = &quot;obtnFB2Flibusta&quot; Then
					sFB2Flibusta = sSetting(1)
				End If
			End If
		Loop
		oTIS.closeInput()
		
		If sFB2LibRusEc = 1 Then
			If GetOS() = 0 Then
				GetWorkFB2Schema = &quot;\fb2-librusec-schema\FictionBook.xsd&quot;
			Else
				GetWorkFB2Schema = &quot;/fb2-librusec-schema/FictionBook.xsd&quot;
			End If
		ElseIf sFB2Flibusta = 1 Then
			If GetOS() = 0 Then
				GetWorkFB2Schema = &quot;\fb2-flibusta-schema\FictionBook.xsd&quot;
			Else
				GetWorkFB2Schema = &quot;/fb2-flibusta-schema/FictionBook.xsd&quot;
			End If
		End If
	End If
End Function


&apos;***************************************************************************
&apos; проверка, все ли обязательные fb2-свойства документа заполнены
Function IsFB2BindingPropertiesCorrect() As String
	IsFB2BindingPropertiesCorrect = &quot;&quot;
	&apos; жанр, язык, Название, версия, ID
	Dim sErrorMess As String
    Dim UserDefProperties	As Object : UserDefProperties	= ThisComponent.DocumentProperties.getUserDefinedProperties()
    Dim PropertyValues		As Object : PropertyValues		= UserDefProperties.getPropertyValues()
    Dim PropertyValue		As new com.sun.star.beans.PropertyValue
    
    PropertyValue = GetUserProperty(_fb2_di_ID)
    MakeErrorMessage(PropertyValue, sErrorMess, &quot;ID&quot;)
    
    PropertyValue = GetUserProperty(_fb2_di_Version)
    MakeErrorMessage(PropertyValue, sErrorMess, &quot;Version&quot;)
    
    PropertyValue = GetUserProperty(_fb2_ti_BookTitle)
    MakeErrorMessage(PropertyValue, sErrorMess, &quot;BookTitle&quot;)

    PropertyValue = GetUserProperty(_fb2_ti_Lang)
    MakeErrorMessage(PropertyValue, sErrorMess, &quot;Lang&quot;)
    
    Dim i As Integer
    Dim bGenre As Boolean : bGenre = False
    For i = 0 To uBound(PropertyValues) 
        If InStr( PropertyValues(i).Name, _fb2_ti_GenreCM ) = 1 Then
        	bGenre = True : Exit For
		End If
    Next i
    If Not bGenre Then MakeErrorMessage(PropertyValue, sErrorMess, &quot;Genre&quot;)

    IsFB2BindingPropertiesCorrect = sErrorMess
End Function

&apos;***************************************************************************
&apos; вызов диалога сохнанения fb2 файла
Sub SaveFB2FileAs()
	Dim oFileDlg As Object
	Dim sArg() As String
	Dim sDir As String
	Dim sFName As String
	
	If (Not GlobalScope.BasicLibraries.isLibraryLoaded(&quot;Tools&quot;)) Then
		GlobalScope.BasicLibraries.LoadLibrary(&quot;Tools&quot;)
	End If
	
	sDir = DirectoryNameOutOfPath(sCurDocFile, &quot;/&quot;)
	sFName = ConvertFromUrl(FilenameOutOfPath(sCurDocFile, &quot;/&quot;)
	
	oFileDlg = CreateUnoService(&quot;com.sun.star.ui.dialogs.FilePicker&quot;)
	sArg() = Array(com.sun.star.ui.dialogs.TemplateDescription.FILESAVE_AUTOEXTENSION)
	
	With oFileDlg
		.initialize(sArg())
		.appendFilter(&quot;Fictionbook (.fb2)&quot;, &quot;*.fb2;*.FB2&quot;)
		.setTitle( sFB2PED.sFileDlgSaveAs )
		.setDisplayDirectory(sDir)
		.setDefaultName(sFName)
	End With
	If oFileDlg.execute() Then
		Dim sFile As String
		sFile = ConvertFromUrl(oFileDlg.Files(0))
		IF (InStr(sFile,&quot;.fb2&quot;) = 0) Then
			sFile = sFile + &quot;.fb2&quot;
		End If
		oExportToFB21Dlg.Model.fb2PathTextField.Text = sFile
	End If
	oFileDlg.Dispose()
End Sub

&apos;***************************************************************************
&apos; Читаем настройки и задаем значения контролам основной формы
Function LoadExportToFB21DlgSettings() As Boolean
	On Error Resume Next
	Dim sFileName As String : sFileName = getOOoFBToolsSettingsDir() &amp; sConstFB2ConverterDialogSettings
	If FileExists( sFileName ) Then
		Dim nX As Integer, nY As Integer
		Dim sLine As String
		Dim oSFA As Object, oFS As Object, oTIS As Object
		
		oSFA = createUnoService ( &quot;com.sun.star.ucb.SimpleFileAccess&quot; )
		oFS = oSFA.openFileRead ( ConvertToURL ( sFileName ) )
		oTIS = createUnoService ( &quot;com.sun.star.io.TextInputStream&quot; )
		oTIS.setInputStream (oFS)
		Do While ( NOT oTIS.isEOF() )
			sLine = oTIS.readLine()
			If sLine &lt;&gt; &quot;&quot; Then
				&apos; Устанавливаем данные
				Dim sSetting() As String : sSetting = Split(sLine, &quot;=&quot;)
				If sSetting(0) = &quot;X&quot; Then
					nX = sSetting(1)
				ElseIf sSetting(0) = &quot;Y&quot; Then
					nY = sSetting(1)
				End If
			End If
		Loop
		oTIS.closeInput()
		oExportToFB21Dlg.setPosSize( nX, nY, 107, 242, com.sun.star.awt.PosSize.POS )
		LoadExportToFB21DlgSettings = True
	Else
		LoadExportToFB21DlgSettings = False
	End If
End Function

&apos;***************************************************************************
&apos; записываем расположение на экране диалога Конвертера в файл настроек
Sub SaveExportToFB21DlgSettings()
	Dim oOS As Object, oFA As Object, oTOS As Object
	oFA = CreateUnoService(&quot;com.sun.star.ucb.SimpleFileAccess&quot;)
	oTOS = CreateUnoService(&quot;com.sun.star.io.TextOutputStream&quot;)
	
	oOS = oFA.openFileWrite(  getOOoFBToolsSettingsDir() &amp; sConstFB2ConverterDialogSettings )
	oOS.truncate()
	oTOS.setOutputStream( oOS )
	oTOS.setEncoding( &quot;utf-8&quot; )
	
	Dim ctrl As Object, i As Integer
	ctrl = oExportToFB21Dlg.getControls()
	For i=LBound(ctrl) To UBound(ctrl)
		If ctrl(i).getImplementationName() = &quot;stardiv.Toolkit.UnoRadioButtonControl&quot; Then
			If ctrl(i).Model.Name = &quot;obtnFB21&quot; Or ctrl(i).Model.Name = &quot;obtnFB22&quot; Then
				oTOS.writeString(ctrl(i).Model.Name &amp; &quot;=&quot; &amp; ctrl(i).Model.State &amp; chr(10))
			End If
		ElseIf ctrl(i).getImplementationName() = &quot;stardiv.Toolkit.UnoListBoxControl&quot; Then
			If ctrl(i).Model.Name = &quot;Codepage&quot; Then
				oTOS.writeString(ctrl(i).Model.Name &amp; &quot;=&quot; &amp; ctrl(i).SelectedItemPos &amp; chr(10))
			End If
		End If
	Next i
	oTOS.writeString(&quot;X=&quot; &amp; oExportToFB21Dlg.PosSize.X &amp; chr(10))
	oTOS.writeString(&quot;Y=&quot; &amp; oExportToFB21Dlg.PosSize.Y &amp; chr(10))
	oTOS.writeString(&quot;end of file&quot; &amp; chr(10))
	oTOS.closeOutput()
End Sub

&apos; ===========================================================================================================================
&apos; 												Функции экспорта
&apos; ===========================================================================================================================
Function SaveFBCorrectText(sStr As String, bCHR10 As Boolean)
	If bSuperfluous = True Then
		Dim count As Integer : count = 0
		&apos; до тех пор, пока не останется ни одной &quot;пустышки&quot;.
		Do
			count = RemoveSuperfluous(sStr)
			count = count + RemoveSuperfluousLR(sStr)
			count = count + ClearStyleSpace(sStr)
		Loop While count &gt; 0
	End If
	If bCHR10 = True Then
		oTextOutputStream.writeString(sStr &amp; chr(10))
	Else
		oTextOutputStream.writeString(sStr)
	End If
End Function

Function MakeBookTitle As String
	&apos; формируем заглавие книги
	If lBATIndex &gt; -1 Then
		lCurrentElement = lBATIndex &apos; если есть автор или название книги, то все, что &quot;выше&quot; - игнорируем - служебная зона
		Dim sBT As String, l As Long, sID As String, sBookTag As String
		sBT = &quot;&lt;title&gt;&quot; &amp; chr(10)
		For l = lCurrentElement To UBound(sBodyParagraphs)
			If sBodyParagraphs(l,1) = sStyleBookTitle Then
				If bDocLinks = True Then
					&apos; обработка ссылок внутри документа
					If FindIndexForID(l, sID, True) &lt;&gt; -1 Then &apos; нашли закладку (ссылку) для текущего элемента
						sBookTag = &quot;&lt;p &quot; &amp; &quot;id=&quot;&quot;&quot; &amp; sID &amp; &quot;&quot;&quot;&gt;&quot;
					Else &apos; для текущего элемента нет ни одной закладки (и ссылки, соответственно)
						sBookTag = &quot;&lt;p&gt;&quot; &apos; нет ни одной закладки
					End If
				Else
					sBookTag = &quot;&lt;p&gt;&quot;
				End If
				sBT = sBT &amp; sBookTag &amp; sBodyParagraphs(l,0) &amp; &quot;&lt;/p&gt;&quot; &amp; chr(10)
				oProgressBar.setValue(l) &apos; Статусбар
			Else Exit For
			End If
		Next l
		lCurrentElement = l
		MakeBookTitle = sBT &amp; &quot;&lt;/title&gt;&quot; &amp; chr(10)
	End If
End Function

Function MakePoemTitle(sArray As String, bBody As Boolean) As String
	Dim l As Long, sID As String, sPTag As String
	Dim sPoemTitle As String
	sPoemTitle = &quot;&quot;
	If bMergePoemTitle = True Then &apos; собираем Заголовки стиха, идущие один за другим в одну строку
		Dim nCount As Integer, nCountTag As String &apos; число заголовков с закладками
		nCount = 0
		nCountTag = 0
		For l = lCurrentElement To UBound(sArray)
			If sArray(l,1) = sStylePoemTitle Then
				If bDocLinks = True Then
					&apos; обработка ссылок внутри документа
					If FindIndexForID(l, sID, bBody) &lt;&gt; -1 Then &apos; нашли закладку (ссылку) для текущего элемента
						sPTag = &quot;&lt;p &quot; &amp; &quot;id=&quot;&quot;&quot; &amp; sID &amp; &quot;&quot;&quot;&gt;&quot;
						nCount = nCount+1 &apos;счетчик закладок
					Else &apos; для текущего элемента нет ни одной закладки (и ссылки, соответственно)
						If nCount = 0 Then &apos; чтобы не &quot;затереть&quot; закладки вышестоящих заголовков
							sPTag = &quot;&lt;p&gt;&quot; &apos; нет ни одной закладки
						End If
					End If
				Else
					sPTag = &quot;&lt;p&gt;&quot;
				End If
				If nCountTag = 0 Then &apos; чтобы не добавлять и другие теги &lt;p id=&gt;
					sPoemTitle = sPoemTitle &amp; sPTag
					nCountTag = nCountTag+1 &apos;счетчик закладок
				End If
				sPoemTitle = sPoemTitle &amp; sArray(l,0) &amp;  &quot; &quot;
				oProgressBar.setValue(l) &apos; Статусбар
			Else Exit For
			End If
		Next l
		sPoemTitle = Mid(sPoemTitle, 1, Len(sPoemTitle)-1)
		sPoemTitle = sPoemTitle &amp; &quot;&lt;/p&gt;&quot;
		lCurrentElement = l
	Else &apos; Заголовки стиха не будут собираться в одну строку, а будут один под другим
		For l = lCurrentElement To UBound(sArray)
			If sArray(l,1) = sStylePoemTitle Then
				If bDocLinks = True Then
					&apos; обработка ссылок внутри документа
					If FindIndexForID(l, sID, bBody) &lt;&gt; -1 Then &apos; нашли закладку (ссылку) для текущего элемента
						sPTag = &quot;&lt;p &quot; &amp; &quot;id=&quot;&quot;&quot; &amp; sID &amp; &quot;&quot;&quot;&gt;&quot;
					Else &apos; для текущего элемента нет ни одной закладки (и ссылки, соответственно)
						sPTag = &quot;&lt;p&gt;&quot; &apos; нет ни одной закладки
					End If
				Else
					sPTag = &quot;&lt;p&gt;&quot;
				End If
				sPoemTitle = sPoemTitle &amp; sPTag &amp; sArray(l,0) &amp; &quot;&lt;/p&gt;&quot; &amp; chr(10)
				oProgressBar.setValue(l) &apos; Статусбар
			Else Exit For
			End If
		Next l
		lCurrentElement = l
	End If
	If sPoemTitle &lt;&gt; &quot;&quot; Then
		MakePoemTitle = &quot;&lt;title&gt;&quot; &amp; sPoemTitle &amp; &quot;&lt;/title&gt;&quot; &amp; chr(10)
	Else
		MakePoemTitle = &quot;&quot;
	End If
End Function

Function MakePoem(sArray As String, bBody As Boolean) As String
	Dim sPoem As String, l As Long, sID As String
	Dim sPoemTitle As String, sPoemEpigraph As String, sSwitch As String
	sPoem = &quot;&quot;
	&apos; Заголовок поэмы
	sPoemTitle = MakePoemTitle(sArray, bBody)
	If sPoemTitle &lt;&gt; &quot;&quot; Then &apos; стихи с заголовка
		sPoem = sPoem &amp; chr(10) &amp; sPoemTitle
	End If
	&apos; Эпиграф Поэмы
	If sArray(lCurrentElement,1) = sStyleEpigraph Then &apos; против зацикливания - из Поэмы в Эпиграф и обратно
		sPoemEpigraph = MakeEpigraph(sArray, sStyleEpigraph, sStyleEpigraphAuthor, bBody)
	End If

	If sPoemEpigraph &lt;&gt; &quot;&quot; Then &apos; стихи с эпиграфом
		sPoem = sPoem &amp; sPoemEpigraph
	End If
	&apos; Переключатель - Stanza или SubTitle Поэмы
	sSwitch = SwitchSubTitleStanza(sArray, bBody)
	If sSwitch &lt;&gt; &quot;&quot; Then
		sPoem = sPoem &amp; sSwitch
	End If
	
	&apos; Заглушка, на случай, если есть Заголовок и (или) Эпиграф поэмы, а обязательного Подзаголовка или Станзы - нет
&apos;	If (sPoemTitle &lt;&gt; &quot;&quot; OR sPoemEpigraph &lt;&gt; &quot;&quot;) AND sSwitch = &quot;&quot; Then
&apos;		sPoem = sPoem &amp; &quot;&lt;stanza&gt;&lt;v&gt;?&lt;/v&gt;&lt;/stanza&gt;&quot; &amp; chr(10)
&apos;	End If
	
	&apos; Авторы поэмы, если они есть
	sPoem = sPoem &amp; MakePoemAuthor(sArray, bBody)
	&apos; Дата написания поэмы, если она есть
	sPoem = sPoem &amp; MakePoemDate(sArray, bBody)

	If sPoem &lt;&gt; &quot;&quot; Then
		MakePoem = &quot;&lt;poem&gt;&quot; &amp; sPoem &amp; &quot;&lt;/poem&gt;&quot;
	Else
		MakePoem = &quot;&quot;
	End If
End Function

Function SwitchSubTitleStanza(sArray As String, bBody As Boolean) As String
	Dim l As Long, sID As String, sText As String
	sText =  &quot;&quot;
	For l = lCurrentElement To UBound(sArray)
		If sArray(l,1) = sStylePoem Then
			sText = sText &amp; MakeStanza(sArray, bBody)
		ElseIf sArray(l,1) = sStylePoemSubTitle Then &apos; чередование &lt;stanza&gt; и &lt;subtitle&gt;
		&apos;	lCurrentElement = l
			sText = sText &amp; MakeSubTitle(sArray, sStylePoemSubTitle, bMergePoemSubTitle, bBody)
		&apos;	l = lCurrentElement-1
		Else
			Exit For
		End If
		oProgressBar.setValue(l) &apos; Статусбар
	Next l
	lCurrentElement = l
	If sText &lt;&gt; &quot;&quot; Then
		SwitchSubTitleStanza = sText
	Else
		SwitchSubTitleStanza = &quot;&quot;
	End If
End Function

Function MakeStanza(sArray As String, bBody As Boolean) As String
	Dim l As Long, sID As String, sStanza As String, nC As Integer
	sStanza =  &quot;&quot;
	nC = 0 &apos; счетчик строк поэмы
	For l = lCurrentElement To UBound(sArray)
		If sArray(l,1) = sStylePoem Then
			If sArray(l,0) &lt;&gt; &quot;&quot; Then &apos; стих есть
				&apos; смотрим предыдущий элемент
				If l &gt; 0 Then
					If sArray(l-1,1) &lt;&gt; sStylePoem Then &apos; не стих - открываем stanza
						sStanza = sStanza &amp; &quot;&lt;stanza&gt;&quot; &amp; chr(10)
					End If
				ElseIf l = 0 Then
					If sArray(0,1) = sStylePoem Then &apos; стих - открываем stanza
						sStanza = sStanza &amp; &quot;&lt;stanza&gt;&quot; &amp; chr(10)
					End If
				End If
				If bDocLinks = True Then &apos; обработка ссылок внутри документа
					If FindIndexForID(l, sID, bBody) &lt;&gt; -1 Then &apos; нашли закладку (ссылку) для текущего элемента
						sStanza = sStanza &amp; &quot;&lt;v &quot; &amp; &quot;id=&quot;&quot;&quot; &amp; sID &amp; &quot;&quot;&quot;&gt;&quot; &amp; sArray(l,0) &amp; &quot;&lt;/v&gt;&quot; &amp; chr(10)
					Else &apos; для текущего элемента нет ни одной закладки (и ссылки, соответственно)
						sStanza = sStanza &amp; &quot;&lt;v&gt;&quot; &amp; sArray(l,0) &amp; &quot;&lt;/v&gt;&quot; &amp; chr(10)
					End If
				Else
					sStanza = sStanza &amp; &quot;&lt;v&gt;&quot; &amp; sArray(l,0) &amp; &quot;&lt;/v&gt;&quot; &amp; chr(10)
				End If
				&apos; смотрим следующий элемент
				If l &lt; UBound(sArray) Then
					If sArray(l+1,1) &lt;&gt; sStylePoem Then &apos; не стих - закрываем stanza
						sStanza = sStanza &amp; &quot;&lt;/stanza&gt;&quot; &amp; chr(10)
					End If
				End If
			Else &apos; пустой абзац-стих - закрываем stanza
				If nC &gt; 0 Then &apos; защита, если 1-я строка Поэму - &quot;пустая строка&quot; - НЕ ПО СХЕМЕ fb2!!!
					sStanza = sStanza &amp; &quot;&lt;/stanza&gt;&quot; &amp; chr(10)
				End If
				&apos; смотрим следующий элемент
				If l &lt; UBound(sArray) Then
					If sArray(l+1,1) = sStylePoem Then &apos; стих - открываем stanza
						sStanza = sStanza &amp; &quot;&lt;stanza&gt;&quot; &amp; chr(10)
					End If
				End If
			End If
			nC = nC + 1
		Else Exit For
		End If
	Next l
	lCurrentElement = l
	If sStanza &lt;&gt; &quot;&quot; Then
		MakeStanza = sStanza
	Else
		MakeStanza = &quot;&quot;
	End If
End Function

Function MakePoemAuthor(sArray As String, bBody As Boolean) As String
	&apos; Авторы поэмы
	Dim sPoem As String, l As Long, sID As String
	l = lCurrentElement
	If lCurrentElement &gt; UBound( sArray() ) Then Exit Function
	If sArray(lCurrentElement,1) = sStylePoemAuthor Then
		If bMergePoemAuthors = True Then &apos; собираем Авторов стиха, идущих один за другим в одну строку
			Dim nCount As Integer, nCountTag As Integer &apos; число авторов поэмы с закладками
			nCount = 0
			nCountTag = 0
			Dim sAPTag As String
			For l = lCurrentElement To UBound(sArray)
				If sArray(l,1) = sStylePoemAuthor Then
					If bDocLinks = True Then
						&apos; обработка ссылок внутри документа
						If FindIndexForID(l, sID, bBody) &lt;&gt; -1 Then &apos; нашли закладку (ссылку) для текущего элемента
							sAPTag = &quot;&lt;text-author &quot; &amp; &quot;id=&quot;&quot;&quot; &amp; sID &amp; &quot;&quot;&quot;&gt;&quot;
							nCount = nCount+1 &apos;счетчик закладок
						Else &apos; для текущего элемента нет ни одной закладки (и ссылки, соответственно)
							If nCount = 0 Then &apos; чтобы не &quot;затереть&quot; закладки вышестоящих авторов
								sAPTag = &quot;&lt;text-author&gt;&quot; &apos; нет ни одной закладки
							End If
						End If
					Else
						sAPTag = &quot;&lt;text-author&gt;&quot;
					End If
					If nCountTag = 0 Then &apos; чтобы не добавлять и другие теги &lt;text-author id=&gt;
						sPoem = sPoem &amp; sAPTag
						nCountTag = nCountTag+1 &apos;счетчик закладок
					End If
					sPoem = sPoem &amp; sArray(l,0) &amp; &quot;, &quot;
					oProgressBar.setValue(l) &apos; Статусбар
				Else Exit For
				End If
			Next l
			sPoem = Mid(sPoem, 1, Len(sPoem)-2)
			sPoem = sPoem &amp; &quot;&lt;/text-author&gt;&quot;
			lCurrentElement = l
		Else &apos; Авторы стиха не будут собираться в одну строку, а будут один под другим
			For l = lCurrentElement To UBound(sArray)
				If sArray(l,1) = sStylePoemAuthor Then
					If bDocLinks = True Then
						&apos; обработка ссылок внутри документа
						If FindIndexForID(l, sID, bBody) &lt;&gt; -1 Then &apos; нашли закладку (ссылку) для текущего элемента
							sPoem = sPoem &amp; &quot;&lt;text-author &quot; &amp; &quot;id=&quot;&quot;&quot; &amp; sID &amp; &quot;&quot;&quot;&gt;&quot; &amp; sArray(l,0) &amp; &quot;&lt;/text-author&gt;&quot; &amp; chr(10)
						Else &apos; для текущего элемента нет ни одной закладки (и ссылки, соответственно)
							sPoem = sPoem &amp; &quot;&lt;text-author&gt;&quot; &amp; sArray(l,0) &amp; &quot;&lt;/text-author&gt;&quot; &amp; chr(10)
						End If
					Else
						sPoem = sPoem &amp; &quot;&lt;text-author&gt;&quot; &amp; sArray(l,0) &amp; &quot;&lt;/text-author&gt;&quot; &amp; chr(10)
					End If
					oProgressBar.setValue(l) &apos; Статусбар
				Else Exit For
				End If
			Next l
			lCurrentElement = l
		End If
	End If
	lCurrentElement = l
	MakePoemAuthor = sPoem
End Function

Function MakePoemDate(sArray As String) As String
	Dim sSTR As String
	sSTR = &quot;&quot;
	&apos; Дата написания поэмы - согласно схемы допускается только одна дата.
	&apos; Если есть еще одна строка с датой, то она будет просто текстом (&lt;p&gt;XXX&lt;/p&gt;)
	If lCurrentElement &lt;= UBound( sArray() ) Then
		If sArray(lCurrentElement,1) = sStylePoemDate Then
			sSTR = sSTR &amp; &quot;&lt;date&gt;&quot; &amp; sArray(lCurrentElement,0) &amp; &quot;&lt;/date&gt;&quot; &amp; chr(10)
			oProgressBar.setValue(lCurrentElement) &apos; Статусбар
			lCurrentElement = lCurrentElement + 1
		End If
	End If
	MakePoemDate = sSTR
End Function

Function MakeEpigraph(sArray As String, sStyle_Epigraph, sStyle_EpigraphAuthor, bBody As Boolean) As String
	Dim sEpig As String, l As Long, sID As String
	sEpig = &quot;&quot;
	For l = lCurrentElement To UBound(sArray)
		If sArray(l,1) = sStyle_Epigraph AND sArray(l,0) &lt;&gt; &quot;&quot; Then
			&apos; Просто абзацы цитаты или пустая строка
			If bDocLinks = True Then
				&apos; обработка ссылок внутри документа
				If FindIndexForID(l, sID, bBody) &lt;&gt; -1 Then &apos; нашли закладку (ссылку) для текущего элемента
					sEpig = sEpig &amp; &quot;&lt;p &quot; &amp; &quot;id=&quot;&quot;&quot; &amp; sID &amp; &quot;&quot;&quot;&gt;&quot; &amp; sArray(l,0) &amp; &quot;&lt;/p&gt;&quot; &amp; chr(10)
				Else &apos; для текущего элемента нет ни одной закладки (и ссылки, соответственно)
					sEpig = sEpig &amp; &quot;&lt;p&gt;&quot; &amp; sArray(l,0) &amp; &quot;&lt;/p&gt;&quot; &amp; chr(10)
				End If
			Else
				sEpig = sEpig &amp; &quot;&lt;p&gt;&quot; &amp; sArray(l,0) &amp; &quot;&lt;/p&gt;&quot; &amp; chr(10)
			End If
			oProgressBar.setValue(l) &apos; Статусбар
		ElseIf sArray(l,1) = sStyle_Epigraph AND sArray(l,0) = &quot;&quot; Then
			&apos; пустые строки
			sEpig = sEpig &amp; &quot;&lt;empty-line/&gt;&quot; &amp; chr(10)
		ElseIf sArray(l,1) = sStylePoem OR sArray(l,1) = sStylePoemTitle OR _
				sArray(l,1) = sStylePoemSubTitle Then
			lCurrentElement = l
			sEpig = sEpig &amp; MakePoem(sArray, bBody)
			l = lCurrentElement-1
		ElseIf sArray(l,1) = sStyleCite OR sArray(l,1) = sStyleCiteSubTitle Then
			&apos; цитаты внутри аннотации
			lCurrentElement = l
			sEpig = sEpig &amp; MakeCite(sArray, bBody)
			l = lCurrentElement-1
		Else Exit For
		End If
	Next l
	lCurrentElement = l
	
	&apos; Авторы цитаты, если они есть
	sEpig = sEpig &amp; MakeEpigraphAuthor(sArray, sStyle_EpigraphAuthor, bBody)
	
	IF sEpig &lt;&gt; &quot;&quot; Then
		MakeEpigraph = &quot;&lt;epigraph&gt;&quot; &amp; chr(10) &amp; sEpig &amp; &quot;&lt;/epigraph&gt;&quot;
	Else
		MakeEpigraph = &quot;&quot;
	End If
End Function

Function MakeEpigraphAuthor(sArray As String, sStyle_EpigraphAuthor As String, bBody As Boolean) As String
	&apos; Авторы эпиграфа
	Dim sEpig As String, l As Long, sID As String
	l = lCurrentElement
	If lCurrentElement &gt; UBound( sArray() ) Then Exit Function
	If sArray(lCurrentElement,1) = sStyle_EpigraphAuthor Then
		If bMergeEpigraphAuthors = True Then &apos; собираем Авторов епиграфа, идущих один за другим в одну строку
			Dim nCount As Integer, nCountTag As Integer &apos; число авторов эпиграфа с закладками
			nCount = 0
			nCountTag = 0
			Dim sAETag As String
			For l = lCurrentElement To UBound(sArray)
				If sArray(l,1) = sStyle_EpigraphAuthor Then
					If bDocLinks = True Then
						&apos; обработка ссылок внутри документа
						If FindIndexForID(l, sID, bBody) &lt;&gt; -1 Then &apos; нашли закладку (ссылку) для текущего элемента
							sAETag = &quot;&lt;text-author &quot; &amp; &quot;id=&quot;&quot;&quot; &amp; sID &amp; &quot;&quot;&quot;&gt;&quot;
							nCount = nCount+1 &apos;счетчик закладок
						Else &apos; для текущего элемента нет ни одной закладки (и ссылки, соответственно)
							If nCount = 0 Then &apos; чтобы не &quot;затереть&quot; закладки вышестоящих авторов
								sAETag = &quot;&lt;text-author&gt;&quot; &apos; нет ни одной закладки
							End If
						End If
					Else
						sAETag = &quot;&lt;text-author&gt;&quot;
					End If
					If nCountTag = 0 Then &apos; чтобы не добавлять и другие теги &lt;text-author id=&gt;
						sEpig = sEpig &amp; sAETag
						nCountTag = nCountTag+1 &apos;счетчик закладок
					End If
					sEpig = sEpig &amp; sArray(l,0) &amp; &quot;, &quot;
					oProgressBar.setValue(l) &apos; Статусбар
				Else Exit For
				End If
			Next l
			sEpig = Mid(sEpig, 1, Len(sEpig)-2)
			sEpig = sEpig &amp; &quot;&lt;/text-author&gt;&quot; &amp; chr(10)
			lCurrentElement = l
		Else &apos; Авторы епиграфа не будут собираться в одну строку, а будут один под другим
			For l = lCurrentElement To UBound(sArray)
				If sArray(l,1) = sStyle_EpigraphAuthor Then
					If bDocLinks = True Then
						&apos; обработка ссылок внутри документа
						If FindIndexForID(l, sID, bBody) &lt;&gt; -1 Then &apos; нашли закладку (ссылку) для текущего элемента
							sEpig = sEpig &amp; &quot;&lt;text-author &quot; &amp; &quot;id=&quot;&quot;&quot; &amp; sID &amp; &quot;&quot;&quot;&gt;&quot; &amp; sArray(l,0) &amp; &quot;&lt;/text-author&gt;&quot; &amp; chr(10)
						Else &apos; для текущего элемента нет ни одной закладки (и ссылки, соответственно)
							sEpig = sEpig &amp; &quot;&lt;text-author&gt;&quot; &amp; sArray(l,0) &amp; &quot;&lt;/text-author&gt;&quot; &amp; chr(10)
						End If
					Else
						sEpig = sEpig &amp; &quot;&lt;text-author&gt;&quot; &amp; sArray(l,0) &amp; &quot;&lt;/text-author&gt;&quot; &amp; chr(10)
					End If
					oProgressBar.setValue(l) &apos; Статусбар
				Else Exit For
				End If
			Next l
			lCurrentElement = l
		End If
	End If
	lCurrentElement = l
	MakeEpigraphAuthor = sEpig
End Function

Function MakeAnnotation(sArray As String, bBody As Boolean) As String
	Dim sAnnot As String, l As Long, sID As String, sAnnotTag As String
	sAnnot = &quot;&lt;annotation&gt;&quot; &amp; chr(10)
	For l = lCurrentElement To UBound(sArray)
		If sArray(l,1) = sStyleAnnotation AND sArray(l,0) &lt;&gt; &quot;&quot; Then
			If bDocLinks = True Then
				&apos; обработка ссылок внутри документа
				If FindIndexForID(l, sID, bBody) &lt;&gt; -1 Then &apos; нашли закладку (ссылку) для текущего элемента
					sAnnotTag = &quot;&lt;p &quot; &amp; &quot;id=&quot;&quot;&quot; &amp; sID &amp; &quot;&quot;&quot;&gt;&quot;
				Else &apos; для текущего элемента нет ни одной закладки (и ссылки, соответственно)
					sAnnotTag = &quot;&lt;p&gt;&quot; &apos; нет ни одной закладки
				End If
			Else
				sAnnotTag = &quot;&lt;p&gt;&quot;
			End If
			sAnnot = sAnnot &amp; sAnnotTag &amp; sArray(l,0) &amp; &quot;&lt;/p&gt;&quot; &amp; chr(10)
			oProgressBar.setValue(l) &apos; Статусбар
		ElseIf sArray(l,1) = sStyleAnnotation AND sArray(l,0) = &quot;&quot; Then
			&apos; пустые строки
			sAnnot = sAnnot &amp; &quot;&lt;empty-line/&gt;&quot; &amp; chr(10)
		ElseIf sArray(l,1) = sStyleAnnotationSubTitle Then
			&apos; подзаголовки
			lCurrentElement = l
			sAnnot = sAnnot &amp; MakeSubTitle(sArray, sStyleAnnotationSubTitle, bMergeAnnotationSubTitle, bBody)
			l = lCurrentElement-1
		ElseIf sArray(l,1) = sStylePoem OR sArray(l,1) = sStylePoemTitle OR _
				sArray(l,1) = sStylePoemSubTitle Then
			&apos; поэмы внутри аннотации
			lCurrentElement = l
			sAnnot = sAnnot &amp; MakePoem(sArray, bBody)
			l = lCurrentElement-1
		ElseIf sArray(l,1) = sStyleCite OR sArray(l,1) = sStyleCiteSubTitle Then
			&apos; цитаты внутри аннотации
			lCurrentElement = l
			sAnnot = sAnnot &amp; MakeCite(sArray, bBody)
			l = lCurrentElement-1
		ElseIf sArray(l,1) = &quot;Table&quot; Then
			&apos; таблица в аннотации
			sAnnot = sAnnot &amp; sArray(l,0) &amp; chr(10)
		Else
			Exit For
		End If
	Next l
	lCurrentElement = l
	sAnnot = sAnnot &amp; &quot;&lt;/annotation&gt;&quot; &amp; chr(10)
	If bELForStartAnnot = True Then
		&apos; &quot;защита&quot; - если после аннотации идет сразу Уровень, то вставляем между ними пустую строку для валидности
		sAnnot = sAnnot &amp; &quot;&lt;empty-line/&gt;&quot;
		bELForStartAnnot = False &apos; Для всех других аннотаций - не надо!!!
	End If
	MakeAnnotation = sAnnot 
End Function

Function MakeCite(sArray As String, bBody As Boolean) As String
	Dim sCite As String, l As Long, sID As String
	sCite = &quot;&quot;
	For l = lCurrentElement To UBound(sArray)
		&apos; Просто абзацы цитаты или пустая строка
		If sArray(l,1) = sStyleCite AND sArray(l,0) &lt;&gt; &quot;&quot; Then
			If bDocLinks = True Then
				&apos; обработка ссылок внутри документа
				If FindIndexForID(l, sID, bBody) &lt;&gt; -1 Then &apos; нашли закладку (ссылку) для текущего элемента
					sCite = sCite &amp; &quot;&lt;p &quot; &amp; &quot;id=&quot;&quot;&quot; &amp; sID &amp; &quot;&quot;&quot;&gt;&quot; &amp; sArray(l,0) &amp; &quot;&lt;/p&gt;&quot; &amp; chr(10)
				Else &apos; для текущего элемента нет ни одной закладки (и ссылки, соответственно)
					sCite = sCite &amp; &quot;&lt;p&gt;&quot; &amp; sArray(l,0) &amp; &quot;&lt;/p&gt;&quot; &amp; chr(10)
				End If
			Else
				sCite = sCite &amp; &quot;&lt;p&gt;&quot; &amp; sArray(l,0) &amp; &quot;&lt;/p&gt;&quot; &amp; chr(10)
			End If
			oProgressBar.setValue(l) &apos; Статусбар
		ElseIf sArray(l,1) = sStyleCite AND sArray(l,0) = &quot;&quot; Then
			&apos; пустые строки
			sCite = sCite &amp; &quot;&lt;empty-line/&gt;&quot; &amp; chr(10)
		ElseIf sArray(l,1) = sStyleCiteSubTitle Then
			&apos; подзаголовки
			lCurrentElement = l
			sCite = sCite &amp; MakeSubTitle(sArray, sStyleCiteSubTitle, bMergeCiteSubTitle, bBody)
			l = lCurrentElement-1
		ElseIf sArray(l,1) = sStylePoem OR sArray(l,1) = sStylePoemTitle OR _
				sArray(l,1) = sStylePoemSubTitle Then
			lCurrentElement = l
			sCite = sCite &amp; MakePoem(sArray, bBody)
			l = lCurrentElement-1
		ElseIf sArray(l,1) = &quot;Table&quot; Then
			&apos; таблица в цитате
			sCite = sCite &amp; sArray(l,0) &amp; chr(10)
		Else
			Exit For
		End If
	Next l
	lCurrentElement = l
	
	&apos; Авторы цитаты, если они есть
	sCite = sCite &amp; MakeCiteAuthor(sArray, bBody)
	
	IF sCite &lt;&gt; &quot;&quot; Then
		MakeCite = &quot;&lt;cite&gt;&quot; &amp; chr(10) &amp; sCite &amp; &quot;&lt;/cite&gt;&quot;
	Else
		MakeCite = &quot;&quot;
	End If
End Function

Function MakeCiteAuthor(sArray As String, bBody As Boolean) As String
	&apos; Авторы цитаты
	Dim sCite As String, l As Long, sID As String
	l = lCurrentElement
	If lCurrentElement &gt; UBound( sArray() ) Then Exit Function
	If sArray(lCurrentElement,1) = sStyleCiteAuthor Then
		If bMergeCiteAuthors = True Then &apos; собираем Авторов цитаты, идущих один за другим в одну строку
			Dim nCount As Integer, nCountTag As Integer &apos; число авторов цитаты с закладками
			nCount = 0
			nCountTag = 0
			Dim sACTag As String
			For l = lCurrentElement To UBound(sArray)
				If sArray(l,1) = sStyleCiteAuthor Then
					If bDocLinks = True Then
						&apos; обработка ссылок внутри документа
						If FindIndexForID(l, sID, bBody) &lt;&gt; -1 Then &apos; нашли закладку (ссылку) для текущего элемента
							sACTag = &quot;&lt;text-author &quot; &amp; &quot;id=&quot;&quot;&quot; &amp; sID &amp; &quot;&quot;&quot;&gt;&quot;
							nCount = nCount+1 &apos;счетчик закладок
						Else &apos; для текущего элемента нет ни одной закладки (и ссылки, соответственно)
							If nCount = 0 Then &apos; чтобы не &quot;затереть&quot; закладки вышестоящих авторов
								sACTag = &quot;&lt;text-author&gt;&quot; &apos; нет ни одной закладки
							End If
						End If
					Else
						sACTag = &quot;&lt;text-author&gt;&quot;
					End If
					If nCountTag = 0 Then &apos; чтобы не добавлять и другие теги &lt;text-author id=&gt;
						sCite = sCite &amp; sACTag
						nCountTag = nCountTag+1 &apos;счетчик закладок
					End If
					sCite = sCite &amp; sArray(l,0) &amp; &quot;, &quot;
					oProgressBar.setValue(l) &apos; Статусбар
				Else Exit For
				End If
			Next l
			sCite = Mid(sCite, 1, Len(sCite)-2)
			sCite = sCite &amp; &quot;&lt;/text-author&gt;&quot;
			lCurrentElement = l
		Else &apos; Авторы цитаты не будут собираться в одну строку, а будут один под другим
			For l = lCurrentElement To UBound(sArray)
				If sArray(l,1) = sStyleCiteAuthor Then
					If bDocLinks = True Then
						&apos; обработка ссылок внутри документа
						If FindIndexForID(l, sID, bBody) &lt;&gt; -1 Then &apos; нашли закладку (ссылку) для текущего элемента
							sCite = sCite &amp; &quot;&lt;text-author &quot; &amp; &quot;id=&quot;&quot;&quot; &amp; sID &amp; &quot;&quot;&quot;&gt;&quot; &amp; sArray(l,0) &amp; &quot;&lt;/text-author&gt;&quot; &amp; chr(10)
						Else &apos; для текущего элемента нет ни одной закладки (и ссылки, соответственно)
							sCite = sCite &amp; &quot;&lt;text-author&gt;&quot; &amp; sArray(l,0) &amp; &quot;&lt;/text-author&gt;&quot; &amp; chr(10)
						End If
					Else
						sCite = sCite &amp; &quot;&lt;text-author&gt;&quot; &amp; sArray(l,0) &amp; &quot;&lt;/text-author&gt;&quot; &amp; chr(10)
					End If
					oProgressBar.setValue(l) &apos; Статусбар
				Else Exit For
				End If
			Next l
			lCurrentElement = l
		End If
	End If
	lCurrentElement = l
	MakeCiteAuthor = sCite
End Function	

Function MakeSubtitle(sArray As String, sStyle_SubTitle As String, bMerge_SubTitle As String, bBody As Boolean) As String
	Dim sSubtitle As String, l As Long, sSubTag As String, sID As String
	If bMerge_SubTitle = True Then &apos; собираем подзаголовки, идущие один за другим в одну строку
		Dim nCount As Integer &apos; число подзаголовков с закладками
		nCount = 0
		For l = lCurrentElement To UBound(sArray)
			If sArray(l,1) = sStyle_SubTitle Then
				If bDocLinks = True Then
					&apos; обработка ссылок внутри документа
					If FindIndexForID(l, sID, bBody) &lt;&gt; -1 Then &apos; нашли закладку (ссылку) для текущего элемента
						sSubTag = &quot;&lt;subtitle &quot; &amp; &quot;id=&quot;&quot;&quot; &amp; sID &amp; &quot;&quot;&quot;&gt;&quot;
						nCount = nCount+1 &apos;счетчик закладок
					Else &apos; для текущего элемента нет ни одной закладки (и ссылки, соответственно)
						If nCount = 0 Then &apos; чтобы не &quot;затереть&quot; закладки вышестоящих подзаголовков
							sSubTag = &quot;&lt;subtitle&gt;&quot; &apos; нет ни одной закладки
						End If
					End If
				Else
					sSubTag = &quot;&lt;subtitle&gt;&quot;
				End If
				sSubtitle = sSubtitle &amp; sArray(l,0) &amp; &quot; &quot;
				oProgressBar.setValue(l) &apos; Статусбар
			Else Exit For
			End If
		Next l
		lCurrentElement = l
		If sSubTag &lt;&gt; &quot;&quot; AND sSubtitle &lt;&gt; &quot;&quot; Then
			sSubtitle = sSubTag &amp; Trim(sSubtitle) &amp; &quot;&lt;/subtitle&gt;&quot; &amp; chr(10)
		End If
	Else &apos; подзаголовки не будут собираться в одну строку, а будут один под другим
		For l = lCurrentElement To UBound(sArray)
			If sArray(l,1) = sStyle_SubTitle Then
				If bDocLinks = True Then
					&apos; обработка ссылок внутри документа
					If FindIndexForID(l, sID, bBody) &lt;&gt; -1 Then &apos; нашли закладку (ссылку) для текущего элемента
						sSubtitle = sSubtitle &amp; &quot;&lt;subtitle &quot; &amp; &quot;id=&quot;&quot;&quot; &amp; sID &amp; &quot;&quot;&quot;&gt;&quot; &amp; sArray(l,0) &amp; &quot;&lt;/subtitle&gt;&quot; &amp; chr(10)
					Else &apos; для текущего элемента нет ни одной закладки (и ссылки, соответственно)
						sSubtitle = sSubtitle &amp; &quot;&lt;subtitle&gt;&quot; &amp; sArray(l,0) &amp; &quot;&lt;/subtitle&gt;&quot; &amp; chr(10)
					End If
				Else
					sSubtitle = sSubtitle &amp; &quot;&lt;subtitle&gt;&quot; &amp; sArray(l,0) &amp; &quot;&lt;/subtitle&gt;&quot; &amp; chr(10)
				End If
				oProgressBar.setValue(l) &apos; Статусбар
			Else Exit For
			End If
		Next l
		lCurrentElement = l
	End If
	MakeSubtitle = sSubtitle
End Function

Function MakeSection(sArray As String, sLevel As String, bBody As Boolean) As String
	Dim sSect As String, sSectTag As String
	If bDocLinks = True Then
		&apos; обработка ссылок внутри документа
		Dim sID As String
		If FindIndexForID(lCurrentElement, sID, bBody) &lt;&gt; -1 Then &apos; нашли закладку (ссылку) для текущего элемента
			sSectTag = &quot;&lt;section &quot; &amp; &quot;id=&quot;&quot;&quot; &amp; sID &amp; &quot;&quot;&quot;&gt;&quot; &amp; chr(10) &amp; &quot;&lt;title&gt;&quot; &amp; chr(10)
		Else &apos; для текущего элемента нет ни одной закладки (и ссылки, соответственно)
			sSectTag = &quot;&lt;section&gt;&quot; &amp; chr(10) &amp; &quot;&lt;title&gt;&quot; &amp; chr(10)
		End If
	Else
		sSectTag = &quot;&lt;section&gt;&quot; &amp; chr(10) &amp; &quot;&lt;title&gt;&quot; &amp; chr(10)
	End If
	sSect = sSectTag &amp; sArray(lCurrentElement,0) &amp; chr(10) &amp; &quot;&lt;/title&gt;&quot;
	oProgressBar.setValue(lCurrentElement) &apos; Статусбар
	lCurrentElement = lCurrentElement+1
	MakeSection = sSect
End Function

&apos; поиск номера(индекса) абзаца из массива sLinksTo() для основного текста,
&apos; соответствующему текущему элементу из sParaStyleName (если такое соответствие есть) для сносок - из массива asFNPars()
&apos; bBody = True - основная часть книги. bBody = False - сноска
Function FindIndexForID( lCurElement As Long, sID As String, bBody As Boolean ) As Long
	FindIndexForID = -1
	If bBody = True Then
		&apos; для основной части книги
		Dim l As Long
		For l=0 To UBound( sLinksTo() )
			If sLinksTo(l,0) = lCurElement Then
				FindIndexForID = sLinksTo(l,0)
				sID = CorrectBMLink( sLinksTo(l,1) )
				Exit For
			End If
		Next l
	Else
		&apos; для сносок
		If asFNPars(lCurElement,2) &lt;&gt; &quot;&quot;  Then
			sID = CorrectBMLink( asFNPars(lCurElement, 2) )
			If sIDFNPrev &lt;&gt; &quot;&quot; Then
				If sID = sIDFNPrev Then
					sID = &quot;&quot; &apos; зашита от дублирования ID по одинаковому имени закладки (текст сноски состоит из нескольких абзацев)
					FindIndexForID = -1
				Else
					sIDFNPrev = sID
					FindIndexForID = 0
				End If
			Else
				sIDFNPrev = sID
				FindIndexForID = 0
			End If
		End If
	End If
End Function

&apos;////////////////////////////////////////////////////////////

Function IsLevel( sStyle As String ) As Boolean
	&apos; Если аргумент sStyle - это Уровень, то возвращается True, иначе - False
	If sStyle = sStyleLevel1 Or sStyle = sStyleLevel2 Or sStyle = sStyleLevel3 Or sStyle = sStyleLevel4 Or sStyle = sStyleLevel5 Or _
		 sStyle = sStyleLevel6 Or sStyle = sStyleLevel7 Or sStyle = sStyleLevel8 Or sStyle = sStyleLevel9 Or sStyle = sStyleLevel10 Then
		 IsLevel = True
	Else &apos; это не Уровень
		IsLevel = False
	End If
End Function

Function IndexOfBookTitle( sArray() As String ) As Long
	&apos; индекс Названия Книги
	IndexOfBookTitle = -1
	Dim i As Long
	For i = 0 To UBound( sArray() )
		If sArray(i,1) = sStyleBookTitle Then
			IndexOfBookTitle = i
			Exit Function
		End If
	Next i
End Function

Function IndexOf1Section( sArray() As String, lStartIndex As Long ) As Long
	&apos; индекс 1-й секции
	IndexOf1Section = -1
	If lStartIndex &gt; UBound( sArray() ) Or lStartIndex &lt; 0 Then Exit Function
	
	Dim i As Long
	For i = lStartIndex To UBound( sArray() )
		If IsLevel( sArray(i,1) ) = True Then
			IndexOf1Section = i
			Exit Function
		End If
	Next i
End Function

Function IndexOfEndSection( sArray() As String ) As Long
	&apos; индекс последней секции
	IndexOfEndSection = -1
	Dim i As Long
	For i = UBound( sArray() ) To 0 Step -1 
		If  IsLevel(sArray(i,1)) = True Then
			IndexOfEndSection = i
			Exit Function
		End If
	Next i
End Function

Function GetIndexOfNextLevel( sArray() As String, lIndexOfCurrentLevel As Long ) As Long
	GetIndexOfNextLevel = -1 &apos; следующего уровня нет
	Dim i As Long, sInput As String
	&apos; Ищем следующий индекс уровня после LevelCurrent
	If lIndexOfCurrentLevel = UBound( sArray() ) Then
		GetIndexOfNextLevel = lIndexOfCurrentLevel
		Exit Function
	End If
	For i = lIndexOfCurrentLevel+1 To UBound(sArray)
		sInput = sArray(i,1)
		If IsLevel(sInput) = True Then
			GetIndexOfNextLevel = i
			Exit For
		End If
	Next i
End Function

Function GetIndexOfPrevLevel( sArray() As String, lIndexOfCurrentLevel As Long ) As Long
	GetIndexOfPrevLevel = -1 &apos; предыдущего уровня нет
	Dim i As Long, sInput As String
	&apos; Ищем предыдущий индекс уровня до LevelCurrent
	If lIndexOfCurrentLevel &gt;= UBound( sArray ) Then
		GetIndexOfPrevLevel = lIndexOfCurrentLevel
		Exit Function
	End If
	For i = lIndexOfCurrentLevel-1 To 0 Step -1
		sInput = sArray( i,1 )
		If  IsLevel( sInput ) = True Then
			GetIndexOfPrevLevel = i
			Exit For
		End If
	Next i
End Function

Function IsAdjacentCurrentLevelsOfNextLevel( sArray() As String, lIndexOfCurrentLevel As Long ) As Integer
	&apos; данные о текущем и следующем уровне (по возрастанию);
	&apos; шаг - разница текущего и следующего уровней (current и next, напр: 1 и 2)
	&apos; знак (+ или -) показывает переход вправо с большего на меньший (напр: 5 и 2) уровень (-) или с меньшего на больший (напр: 1 и 2) уровень (+)
	&apos; 10 - если lIndexOfCurrentLevel вышел за правую границу массива (все уже обработали)
	&apos;  5 - нет следующего уровня, есть только текущий (либо в книге всего 1 Заголовок, либо текущий - последний Заголовок)
	&apos;  0 - текущий и следующий уровни - одного ранга, шаг = 0 (напр. 3 и 3)
	&apos;  1 - текущий и следующий уровни - смежные, шаг = -1 (напр. 1 и 2)
	&apos; -1 - текущий и следующий уровни - смежные, шаг = 1 (напр. 2 и 1)
	&apos;  2 - текущий и следующий уровни - не смежные, шаг &lt; -1 (напр. 1 и 4 - шаг=-3)
	&apos; -2 - текущий и следующий уровни - не смежные, шаг &gt; 1 (напр. 4 и 1 - шаг=3)
	
	If lIndexOfCurrentLevel &gt;= UBound( sArray() ) Then
		IsAdjacentCurrentLevelsOfNextLevel = 10 : Exit Function
	End If
	
	Dim lIndexOfNextLevel : lIndexOfNextLevel = GetIndexOfNextLevel( sArray(), lIndexOfCurrentLevel,1 )
	Dim nStep As Integer
	If lIndexOfNextLevel = -1 Then &apos; нет следующего уровня, есть только текущий (либо в книге всего 1 Заголовок, либо текущий - последний Заголовок)
		IsAdjacentCurrentLevelsOfNextLevel = 5
		Exit Function
	Else &apos; следующий Уровень есть
		nStep = GetLevelNumber( sArray( lIndexOfCurrentLevel,1 ) ) - GetLevelNumber( sArray( lIndexOfNextLevel,1 )
	End If
	
	If nStep = 0 Then &apos; текущий и следующий уровни - одного ранга, шаг = 0 (напр. 3 и 3)
		IsAdjacentCurrentLevelsOfNextLevel = 0
	ElseIf nStep = -1 Then &apos; текущий и следующий уровни - смежные, шаг = -1 (напр. 1 и 2)
		IsAdjacentCurrentLevelsOfNextLevel = 1
	ElseIf nStep = 1 Then &apos; текущий и следующий уровни - смежные, шаг = 1 (напр. 2 и 1)
		IsAdjacentCurrentLevelsOfNextLevel = -1
	ElseIf nStep &lt; -1 Then &apos; текущий и следующий уровни - не смежные, шаг &lt; -1 (напр. 1 и 4 - шаг=-3)
		IsAdjacentCurrentLevelsOfNextLevel = 2
	ElseIf nStep &gt; 1 Then &apos; текущий и следующий уровни - не смежные, шаг &gt; 1 (напр. 4 и 1 - шаг=3) - надо закрывать секцию
		IsAdjacentCurrentLevelsOfNextLevel = -2
	End If
End Function

Function IsAdjacentCurrentLevelsOfPrevLevel( sArray() As String, lIndexOfCurrentLevel As Long ) As Integer
	&apos; данные о текущем и предыдущем уровне (по убыванию);
	&apos; шаг - разница текущего и предыдущего уровней (prev и current, напр: 1 и 2)
	&apos; знак (+ или -) показывает переход влево с большего на меньший (напр: 2 и 5) уровень (-) или с меньшего на больший (напр: 2 и 1) уровень (+)
	&apos; 10 - если lIndexOfCurrentLevel вышел за правую границу массива (все уже обработали)
	&apos;  5 - нет предыдущего уровня, есть только текущий (либо в книге всего 1 Заголовок, либо текущий - самый 1-й Заголовок)
	&apos;  0 - текущий и предыдущий уровни - одного ранга, шаг = 0 (напр. 3 и 3)
	&apos; -1 - текущий и предыдущий уровни - смежные, шаг = 1 (напр. 1 и 2)
	&apos;  1 - текущий и предыдущий уровни - смежные, шаг = -1 (напр. 2 и 1)
	&apos; -2 - текущий и предыдущий уровни - не смежные, шаг &gt; 1 (напр. 1 и 4 - шаг=3)
	&apos;  2 - текущий и предыдущий уровни - не смежные, шаг &lt; 1 (напр. 4 и 1 - шаг=-3)
	If lIndexOfCurrentLevel &gt;= UBound( sArray() ) Then
		IsAdjacentCurrentLevelsOfPrevLevel = 10 : Exit Function
	End If
	
	Dim lIndexOfPrevLevel : lIndexOfPrevLevel = GetIndexOfPrevLevel( sArray(), lIndexOfCurrentLevel,1 )
	Dim nStep As Integer
	If lIndexOfPrevLevel = -1 Then &apos; нет предыдущего уровня, есть только текущий (либо в книге всего 1 Заголовок, либо текущий - самый 1-й Заголовок)
		IsAdjacentCurrentLevelsOfPrevLevel = -1 
		Exit Function
	Else &apos; предыдущий Уровень есть
		nStep = GetLevelNumber( sArray( lIndexOfCurrentLevel,1 ) ) - GetLevelNumber( sArray( lIndexOfPrevLevel,1 ) )
	End If
	
	If nStep = 0 Then &apos; текущий и предыдущий уровни - одного ранга, шаг = 0 (напр. 3 и 3
		IsAdjacentCurrentLevelsOfPrevLevel = 0
	ElseIf nStep = 1 Then &apos; текущий и предыдущий уровни - смежные, шаг = 1 (напр. 1 и 2)
		IsAdjacentCurrentLevelsOfPrevLevel = -1
	ElseIf nStep = -1 Then &apos; текущий и предыдущий уровни - смежные, шаг = -1 (напр. 2 и 1)
		IsAdjacentCurrentLevelsOfPrevLevel = 1
	ElseIf nStep &gt; 1 Then &apos;  текущий и предыдущий уровни - не смежные, шаг &gt; 1 (напр. 1 и 4 - шаг=3)
		IsAdjacentCurrentLevelsOfPrevLevel = -2
	ElseIf nStep &lt; 1 Then &apos; текущий и предыдущий уровни - не смежные, шаг &lt; 1 (напр. 4 и 1 - шаг=-3)
		IsAdjacentCurrentLevelsOfPrevLevel = 2
	End If
End Function

Function GetLevelNumber(Level As String) As Integer
	&apos; Возвращает номер уровня (число) из строки уровня
	Select Case Level
		Case sStyleLevel1
			GetLevelNumber = 1
		Case sStyleLevel2
			GetLevelNumber = 2
		Case sStyleLevel3
			GetLevelNumber = 3
		Case sStyleLevel4
			GetLevelNumber = 4
		Case sStyleLevel5
			GetLevelNumber = 5
		Case sStyleLevel6
			GetLevelNumber = 6
		Case sStyleLevel7
			GetLevelNumber = 7
		Case sStyleLevel8
			GetLevelNumber = 8
		Case sStyleLevel9
			GetLevelNumber = 9
		Case sStyleLevel10
			GetLevelNumber = 10
	End Select
End Function

&apos; ///////////////////////////////////////////////////////////////


</script:module>