<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="StructureAnalyzer" script:language="StarBasic">REM  *****  BASIC  *****

Private sPStyle As String
Private bExsistLevelPara As Boolean

Private asRealStyleLevel(10) As String &apos; реальные пользовательские стили Заголовков, которыми он размечает документ

Sub LevelAnalyzer()
	&apos; Анализатор корректности фарматирования Уровней
	&apos; инициализация Анализатора Структуры
	InitStructureAnalyzeMessage()
	
	Dim oDoc As Object : oDoc = ThisComponent
	oProgressBar = oDoc.CurrentController.StatusIndicator
	oProgressBar.start( sSAD.sProgressDataAcceptance, oDoc.ParagraphCount + 50 )
	oProgressBar.setValue( 0 )
	
	&apos; загрузка стилей по-умолчанию в переменные
	SetDefaultStylesInVars()
	&apos; Только теперь загружаем стили из файла в переменные
	ReadStyles( getUserPath() &amp; sConstStyles, False )
	
	Dim i As Integer
	Dim sLevelsList As String
	For i=1 To 10
		sLevelsList = sLevelsList &amp; asRealStyleLevel(i) &amp; &quot;; &quot;
	Next i
	Dim sList As String : sList = sSAD.sLevelsList &amp; chr(10) &amp; sLevelsList &amp; chr(10) &amp; chr(10)
	
	Dim sResult As String : sResult = LevelParser()
	If sResult &lt;&gt; &quot;&quot; Then
		MsgBox sList &amp; sResult &amp; sSAD.sCorrectError, 64, sSAD.sStructureAnalyzer
	Else
		If Not bExsistLevelPara Then
			MsgBox sList &amp; sSAD.sNotOneParaWithLevelSlyle, 64, sSAD.sStructureAnalyzer
		Else
			MsgBox sList &amp; sSAD.sOK, 64, sSAD.sStructureAnalyzer
		End If
	End If
	oProgressBar.End
End Sub

Function LevelParser() As String
	&apos; Анализатор корректности фарматирования Уровней
	Dim lCounter		As Long : lCounter = 0
	Dim asParagraphs()	As String &apos; массив абзацев-Уровней
	LevelParser = &quot;&quot;
	
	Dim oParEnum	As Object &apos;Счетчик, используемый для перебора параграфов
	Dim oPar		As Object &apos;Перебираемый параграф
	Dim oSectEnum	As Object &apos;Счетчик, используемый для перебора текстовых разделов
	Dim oSect		As Object &apos;Перебиремый текстовый раздел (section)
	Dim oCEnum		As Object &apos;Перебирает содержимое, такое как графические объекты
	Dim oContent	As Object &apos;Перебираемое содержимое
			
	&apos; Перебрать параграфы.
	oParEnum = ThisComponent.getText().createEnumeration()
	Do While oParEnum.hasMoreElements()
		oPar = oParEnum.nextElement()
		If oPar.supportsService(&quot;com.sun.star.text.Paragraph&quot;) Then
			oCEnum = oPar.createContentEnumeration(&quot;com.sun.star.text.TextContent&quot;)
			Do While oCEnum.hasMoreElements()
				oContent = oCEnum.nextElement()
				&apos; Привязка к параграфу
				If oContent.ShapeType = &quot;FrameShape&quot; Then
					If oContent.FrameStyleName = &quot;Frame&quot; Then
						&apos; Парсер Текстовой Врезки
						TxtFrameParser( oContent, asParagraphs() )
					End If
				End If
			Loop

			&apos; Теперь переберем текстовые разделы (sections) - привязка к символу, или вставлены как символы
			oSectEnum = oPar.createEnumeration()
			sPara = &quot;&quot;
			Do While oSectEnum.hasMoreElements()
				oSect = oSectEnum.nextElement()				
				If oSect.TextPortionType = &quot;Text&quot; Then
					&apos; парсер текстового абзаца
					sPara = sPara &amp; oSect.GetString()
				ElseIf oSect.TextPortionType = &quot;Frame&quot; Then
					oCEnum = oSect.createContentEnumeration(textGraphService)
					Do While oCEnum.hasMoreElements()
						oContent = oCEnum.nextElement()
						&apos; Привязка к символу
						If oContent.ShapeType = &quot;FrameShape&quot; Then
							If oContent.FrameStyleName = &quot;Frame&quot; Then
								&apos; Парсер Текстовой Врезки
								TxtFrameParser( oContent, asParagraphs() )
							End If
						End If
					Loop
				End If
			Loop
			&apos; Теперь - парсер элементов - по стилям
			AnalyzerStyleParser( oPar.ParaStyleName, sPara, asParagraphs() )
		End If
		lCounter = lCounter + 1
		oProgressBar.setValue( lCounter )
	Loop
	
	&apos; проверка корректности очередности Уровней
	Dim l As Long, nL As Integer, nR As Integer, nStep As Integer
	oProgressBar.start( sSAD.sProgressAnalysis, UBound( asParagraphs() )
	oProgressBar.setValue( 0 )
	bExsistLevelPara = False
	If UBound( asParagraphs() ) &gt; -1 Then
		bExsistLevelPara = True
		If GetLevelNumber( asParagraphs(l,1) ) &gt; 1 Then
			s = asParagraphs(l,0)
			If ( Len( s ) ) &gt; 512 Then
				s = Mid( asParagraphs(l+1,0), 1, 512 ) &amp; &quot; ...&quot;
			End If
			nL = GetLevelNumber( asParagraphs(l,1) )
			LevelParser = sSAD.s1BookHeader &amp; chr(10) &amp; _
					&quot;&apos;&quot; &amp; s &amp; &quot;&apos;&quot; &amp; chr(10) &amp; chr(10) &amp;_
					sSAD.sNotCorrectStyleFormat &amp; asRealStyleLevel( nL ) &amp; &quot;&apos;.&quot; &amp; chr(10) &amp; _
					sSAD.sOneStyleWasExpectedOnly &amp; asRealStyleLevel( 1 ) &amp; &quot;&apos;.&quot; &amp; chr(10) &amp; chr(10) &amp; _
					sSAD.sFB2NotValid &amp; chr(10) &amp; chr(10) &amp; _
					sSAD.sCheckDiscontinued &amp; chr(10)
		Exit Function
		End If
	End If
	
	For l = 0 To UBound( asParagraphs() )
		If l &lt; UBound( asParagraphs() ) Then
			nL = GetLevelNumber( asParagraphs(l,1) )
			nR = GetLevelNumber( asParagraphs(l+1,1) )
			If ( nR-nL &gt; 1 ) Then
				s = asParagraphs(l+1,0)
				If ( Len( s ) ) &gt; 512 Then
					s = Mid( asParagraphs(l+1,0), 1, 512 ) &amp; &quot; ...&quot;
				End If
				LevelParser = sSAD.sHeader &amp; chr(10) &amp; _
				&quot;&apos;&quot; &amp; s &amp; &quot;&apos;&quot; &amp; chr(10) &amp; chr(10) &amp;_
				sSAD.sNotCorrectStyleFormat &amp; asRealStyleLevel( nR ) &amp; &quot;&apos;.&quot; &amp; chr(10) &amp; _
				sSAD.sItWasExpectedOneOfRangeStyles &amp; chr(10) &amp; _
				&quot;&apos;&quot; &amp; asRealStyleLevel( 1 ) &amp; &quot;&apos; ... &apos;&quot; &amp; asRealStyleLevel( nL+1 ) &amp; &quot;&apos;.&quot; &amp; chr(10) &amp; chr(10) &amp; _
				sSAD.sFB2NotValid &amp; chr(10) &amp; chr(10) &amp; _
				sSAD.sCheckDiscontinued &amp; chr(10)
				Exit Function
			End If
		End If
		oProgressBar.setValue( l )
	Next l
End Function

&apos; парсер текстовой врезки
Sub TxtFrameParser( oCont As Object, asParagraphs() As String )
	Dim oParEnum As Object : oParEnum = oCont.createEnumeration()
	Do While oParEnum.hasMoreElements()
		Dim oPar As Object : oPar = oParEnum.nextElement()
		If oPar.ImplementationName = &quot;SwXParagraph&quot; Then
			Dim sFormatPara As String : sFormatPara = oPar.GetString()
			AnalyzerStyleParser( oPar.ParaStyleName, sFormatPara, asParagraphs() )
		ElseIf oPar.ImplementationName = &quot;SwXTextTable&quot; Then
			&apos; парсер таблицы
		End If
	Loop
End Sub

Sub AnalyzerStyleParser( sParaStyleName As String, sPara As String, asParagraphs() As String )
	&apos; перебор по стилям
	If sParaStyleName=sStyleLevel1 Or sParaStyleName=sStyleLevel2 Or sParaStyleName=sStyleLevel3 Or sParaStyleName=sStyleLevel4 Or _
		 sParaStyleName=sStyleLevel5 Or sParaStyleName=sStyleLevel6 Or sParaStyleName=sStyleLevel7 Or sParaStyleName=sStyleLevel8 Or _
		  sParaStyleName=sStyleLevel9 Or sParaStyleName=sStyleLevel10 Then
		  AddParasArray( sPara, sParaStyleName, True, asParagraphs() )
	Else
		&apos; Стандартный стиль Заголовка Heading, переопределенный в Пользовательских стилях ?
		If IsHeadingUserStyle( sParaStyleName ) Then
			&apos; это - стиль Заголовка Heading X (user)
			&apos; смотрим, переопределял ли User стили Level к Heading ( Heading X (user) )
			If IsLevelRedefiedToHeading( sParaStyleName, asRealStyleLevel() ) Then
				AddParasArray( sPara, sParaStyleName, True, asParagraphs() )
			End If
		End If
	End If
	sPStyle = sParaStyleName
End Sub

Sub AddParasArray( sPara As String, TextType As String, bLevel As Boolean, asParagraphs() As String )
	Dim l As Long : l = Ubound( asParagraphs(), 1 ) + 1
	&apos; для уровней - проверка на несколько строк
	If bLevel = False Then 
		If l &gt; 0 Then
			ReDim Preserve asParagraphs(l, 1)
		Else Redim asParagraphs(l, 1)
		End If
	
		asParagraphs(l,0) = sPara
		asParagraphs(l,1) = TextType
	Else
		If TextType &lt;&gt; sPStyle Then &apos; Разные уровни
			If l &gt; 0 Then
				ReDim Preserve asParagraphs(l,1)
			Else Redim asParagraphs(l,1)
			End If
			asParagraphs(l,0) = sPara
			asParagraphs(l,1) = TextType
		Else &apos; Одинаковые уровни - несколько строк - собираем их в один элемент
			Dim sText As String
			sText = asParagraphs( UBound( asParagraphs ),0 )
			asParagraphs( UBound( asParagraphs ),0 ) = sText &amp; chr(10) &amp; sPara
		End If
	End If
End Sub


&apos;///////////////////////////////////////////////////////////
&apos; соответствует ли проверяемый стиль Заголовка стилем Heading X (user)
Function IsHeadingUserStyle( sStyle As String ) As Boolean
	Dim i As Integer
	For i=1 To 10
		If sStyle = ( &quot;Heading &quot; &amp; i &amp; &quot; (user)&quot; ) Then
			IsHeadingUserStyle = True
			Exit Function
		End If
	Next i
	IsHeadingUserStyle = False
End Function

&apos; переопределял ли User стили Level к Heading ( при парсинге стиль отображается, как Heading X (user) )
Function IsLevelRedefiedToHeading( sStyle As String, sSL() As String ) As Boolean
	Dim nPos As Integer : nPos = InStr( sStyle, &quot; (user)&quot; )
	Dim sH As String : sH = Mid( sStyle, 1, nPos-1 )
	Dim i As Integer
	For i=1 To 10
		If sH = sSL(i) Then
			IsLevelRedefiedToHeading = True
			Exit Function
		End If
	Next i
	IsLevelRedefiedToHeading = False
End Function

&apos; название переопределенного Заголовка по &quot;его&quot; Heading
Function GetRedefiedLevel( nRang As Integer, sSL() As String ) As String
	GetRedefiedLevel = sSL( nRang )
End Function

</script:module>