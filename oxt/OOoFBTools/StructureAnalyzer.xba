<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="StructureAnalyzer" script:language="StarBasic">REM  *****  BASIC  *****

Private sPStyle As String
Private bExsistLevelPara As Boolean

Sub LevelAnalyzer()
	&apos; Анализатор корректности фарматирования Уровней
	&apos; инициализация Анализатора Структуры
	InitStructureAnalyzeMessage()
	
	Dim oDoc As Object : oDoc = ThisComponent
	oProgressBar = oDoc.CurrentController.StatusIndicator
	oProgressBar.start( sSAD.sProgressDataAcceptance, oDoc.ParagraphCount + 50 )
	oProgressBar.setValue( 0 )
	Dim sResult As String : sResult = LevelParser()
	If sResult &lt;&gt; &quot;&quot; Then
		MsgBox sResult &amp; sSAD.sCorrectError, 64, sSAD.sStructureAnalyzer
	Else
		If Not bExsistLevelPara Then
			MsgBox sSAD.sNotOneParaWithLevelSlyle, 64, sSAD.sStructureAnalyzer
		Else
			MsgBox sSAD.sOK, 64, sSAD.sStructureAnalyzer
		End If
	End If
	oProgressBar.End
End Sub

Function LevelParser() As String
	&apos; Анализатор корректности фарматирования Уровней
	Dim lCounter		As Long : lCounter = 0
	Dim asParagraphs()	As String &apos; массив абзацев-Уровней
		
	LevelParser = &quot;&quot;
	&apos; инициализация Пользовательских Стилей по-умолчанию в зависимости от локали
	SetDefaultStylesLocalInVars()&apos; инициализация Пользовательских Стилей по-умолчанию в зависимости от локали
	SetDefaultStylesLocalInVars()
	&apos; Только теперь загружаем стили из файла в переменные
	ReadStyles( getUserPath() &amp; sConstStyles, False )
	
	Dim oParEnum	As Object &apos;Счетчик, используемый для перебора параграфов
	Dim oPar		As Object &apos;Перебираемый параграф
	Dim oSectEnum	As Object &apos;Счетчик, используемый для перебора текстовых разделов
	Dim oSect		As Object &apos;Перебиремый текстовый раздел (section)
	Dim oCEnum		As Object &apos;Перебирает содержимое, такое как графические объекты
	Dim oContent	As Object &apos;Перебираемое содержимое
			
	&apos; Перебрать параграфы.
	oParEnum = ThisComponent.getText().createEnumeration()
	Do While oParEnum.hasMoreElements()
		oPar = oParEnum.nextElement()
		If oPar.supportsService(&quot;com.sun.star.text.Paragraph&quot;) Then
			oCEnum = oPar.createContentEnumeration(&quot;com.sun.star.text.TextContent&quot;)
			Do While oCEnum.hasMoreElements()
				oContent = oCEnum.nextElement()
				&apos; Привязка к параграфу
				If oContent.ShapeType = &quot;FrameShape&quot; Then
					If oContent.FrameStyleName = &quot;Frame&quot; Then
						&apos; Парсер Текстовой Врезки
						TxtFrameParser( oContent, asParagraphs() )
					End If
				End If
			Loop

			&apos; Теперь переберем текстовые разделы (sections) - привязка к символу, или вставлены как символы
			oSectEnum = oPar.createEnumeration()
			sPara = &quot;&quot;
			Do While oSectEnum.hasMoreElements()
				oSect = oSectEnum.nextElement()				
				If oSect.TextPortionType = &quot;Text&quot; Then
					&apos; парсер текстового абзаца
					sPara = sPara &amp; oSect.GetString()
				ElseIf oSect.TextPortionType = &quot;Frame&quot; Then
					oCEnum = oSect.createContentEnumeration(textGraphService)
					Do While oCEnum.hasMoreElements()
						oContent = oCEnum.nextElement()
						&apos; Привязка к символу
						If oContent.ShapeType = &quot;FrameShape&quot; Then
							If oContent.FrameStyleName = &quot;Frame&quot; Then
								&apos; Парсер Текстовой Врезки
								TxtFrameParser( oContent, asParagraphs() )
							End If
						End If
					Loop
				End If
			Loop
			&apos; Теперь - парсер элементов - по стилям
			AnalyzerStyleParser( oPar.ParaStyleName, sPara, asParagraphs() )
		End If
		lCounter = lCounter + 1
		oProgressBar.setValue( lCounter )
	Loop
	
	&apos; проверка корректности очередности Уровней
	Dim l As Long, nL As Integer, nR As Integer, nStep As Integer
	oProgressBar.start( sSAD.sProgressAnalysis, UBound( asParagraphs() )
	oProgressBar.setValue( 0 )
	bExsistLevelPara = False
	If UBound( asParagraphs() ) &gt; -1 Then
		bExsistLevelPara = True
		If GetLevelNumber( asParagraphs(l,1) ) &gt; 1 Then
			s = asParagraphs(l,0)
			If ( Len( s ) ) &gt; 512 Then
				s = Mid( asParagraphs(l+1,0), 1, 512 ) &amp; &quot; ...&quot;
			End If
			LevelParser = sSAD.s1BookHeader &amp; chr(10) &amp; _
					&quot;&apos;&quot; &amp; s &amp; &quot;&apos;&quot; &amp; chr(10) &amp; chr(10) &amp;_
					sSAD.sNotCorrectStyleFormat &amp; asParagraphs(l,1) &amp; &quot;&apos;.&quot; &amp; chr(10) &amp; _
					sSAD.sOneStyleWasExpectedOnly &amp; GetLevel( 1 ) &amp; &quot;&apos;.&quot; &amp; chr(10) &amp; chr(10) &amp; _
					sSAD.sFB2NotValid &amp; chr(10) &amp; chr(10) &amp; _
					sSAD.sCheckDiscontinued &amp; chr(10)
		Exit Function
		End If
	End If
	
	For l = 0 To UBound( asParagraphs() )
		If l &lt; UBound( asParagraphs() ) Then
			nL = GetLevelNumber( asParagraphs(l,1) )
			nR = GetLevelNumber( asParagraphs(l+1,1) )
			If ( nR-nL &gt; 1 ) Then
				s = asParagraphs(l+1,0)
				If ( Len( s ) ) &gt; 512 Then
					s = Mid( asParagraphs(l+1,0), 1, 512 ) &amp; &quot; ...&quot;
				End If
				LevelParser = sSAD.sHeader &amp; chr(10) &amp; _
				&quot;&apos;&quot; &amp; s &amp; &quot;&apos;&quot; &amp; chr(10) &amp; chr(10) &amp;_
				sSAD.sNotCorrectStyleFormat &amp; asParagraphs(l+1,1) &amp; &quot;&apos;.&quot; &amp; chr(10) &amp; _
				sSAD.sItWasExpectedOneOfFollowingStyles &amp; chr(10) &amp; _
				&quot;&apos;&quot; &amp; GetLevel( nL ) &amp; &quot;&apos; или &apos;&quot; &amp; GetLevel( nL+1 ) &amp; &quot;&apos;.&quot; &amp; chr(10) &amp; chr(10) &amp; _
				sSAD.sFB2NotValid &amp; chr(10) &amp; chr(10) &amp; _
				sSAD.sCheckDiscontinued &amp; chr(10)
				Exit Function
			End If
		End If
		oProgressBar.setValue( l )
	Next l
End Function

Function GetLevel( nRang As Integer ) As String
	&apos; Возвращает Уровень, соответствующий его номеру
	Select Case nRang
		Case 1
			GetLevel = sStyleLevel1
		Case 2
			GetLevel = sStyleLevel2
		Case 3
			GetLevel = sStyleLevel3
		Case 4
			GetLevel = sStyleLevel4
		Case 5
			GetLevel = sStyleLevel5
		Case 6
			GetLevel = sStyleLevel6
		Case 7
			GetLevel = sStyleLevel7
		Case 8
			GetLevel = sStyleLevel8
		Case 9
			GetLevel = sStyleLevel9
		Case 10
			GetLevel = sStyleLevel10
	End Select
End Function

&apos; парсер текстовой врезки
Sub TxtFrameParser( oCont As Object, asParagraphs() As String )
	Dim oParEnum As Object : oParEnum = oCont.createEnumeration()
	Do While oParEnum.hasMoreElements()
		Dim oPar As Object : oPar = oParEnum.nextElement()
		If oPar.ImplementationName = &quot;SwXParagraph&quot; Then
			Dim sFormatPara As String : sFormatPara = oPar.GetString()
			AnalyzerStyleParser( oPar.ParaStyleName, sFormatPara, asParagraphs() )
		ElseIf oPar.ImplementationName = &quot;SwXTextTable&quot; Then
			&apos; парсер таблицы
		End If
	Loop
End Sub

Sub AnalyzerStyleParser( sParaStyleName As String, sPara As String, asParagraphs() As String )
	&apos; перебор по стилям
	Select Case sParaStyleName
		Case sStyleLevel1
			AddParasArray( sPara, sParaStyleName, True, asParagraphs() )
		Case sStyleLevel2
			AddParasArray( sPara, sParaStyleName, True, asParagraphs() )
		Case sStyleLevel3
			AddParasArray( sPara, sParaStyleName, True, asParagraphs() )
		Case sStyleLevel4
			AddParasArray( sPara, sParaStyleName, True, asParagraphs() )
		Case sStyleLevel5
			AddParasArray( sPara, sParaStyleName, True, asParagraphs() )
		Case sStyleLevel6
			AddParasArray( sPara, sParaStyleName, True, asParagraphs() )
		Case sStyleLevel7
			AddParasArray( sPara, sParaStyleName, True, asParagraphs() )
		Case sStyleLevel8
			AddParasArray( sPara, sParaStyleName, True, asParagraphs() )
		Case sStyleLevel9
			AddParasArray( sPara, sParaStyleName, True, asParagraphs() )
		Case sStyleLevel10
			AddParasArray( sPara, sParaStyleName, True, asParagraphs() )
	End Select
	sPStyle = sParaStyleName
End Sub

Function AddParasArray( sPara As String, TextType As String, bLevel As Boolean, asParagraphs() As String )
	Dim l As Long : l = Ubound( asParagraphs(), 1 ) + 1
	&apos; для уровней - проверка на несколько строк
	If bLevel = False Then 
		If l &gt; 0 Then
			ReDim Preserve asParagraphs(l, 1)
		Else Redim asParagraphs(l, 1)
		End If
	
		asParagraphs(l,0) = sPara
		asParagraphs(l,1) = TextType
	Else
		If TextType &lt;&gt; sPStyle Then &apos; Разные уровни
			If l &gt; 0 Then
				ReDim Preserve asParagraphs(l,1)
			Else Redim asParagraphs(l,1)
			End If
			asParagraphs(l,0) = sPara
			asParagraphs(l,1) = TextType
		Else &apos; Одинаковые уровни - несколько строк - собираем их в один элемент
			Dim sText As String
			sText = asParagraphs( UBound( asParagraphs ),0 )
			asParagraphs( UBound( asParagraphs ),0 ) = sText &amp; chr(10) &amp; sPara
		End If
	End If
End Function

</script:module>