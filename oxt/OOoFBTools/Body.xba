<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="Body" script:language="StarBasic">REM  *****  BASIC  *****
Option Explicit
Public bELForStartAnnot As Boolean

Function IsAECP(sStyle As String) As Boolean
	&apos; Если аргумент sStyle - это Эпиграф, Цитата или Поэма - то возвращается True, иначе - False
	Select Case sStyle
			Case sStylePoem
				IsAECP = True
			Case sStylePoemTitle
				IsAECP = True
			Case sStylePoemSubTitle
				IsAECP = True
			Case sStylePoemAuthor
				IsAECP = True
			Case sStylePoemDate
				IsAECP = True
			Case sStyleCite
				IsAECP = True
			Case sStyleCiteSubTitle
				IsAECP = True
			Case sStyleCiteAuthor
				IsAECP = True
			Case sStyleEpigraph
				IsAECP = True
			Case sStyleEpigraphAuthor
				IsAECP = True
			Case sStyleAnnotationSubTitle
				IsAECP = True
			Case Else
				IsAECP = False
		End Select
End Function

Function SaveBody
	Dim lParaCount As Long
	If  IsLevel(sBodyParagraphs(UBound(sBodyParagraphs),1)) = True OR _
		IsAECP(sBodyParagraphs(UBound(sBodyParagraphs),1)) = True Then
		&apos; Защита от &quot;вылетания&quot; конвертора, на случай, если последний абзац -
		&apos; Уровень (в нарушение схемы), Эпиграф (в нарушение схемы), Поема, Цитата
		AddBodyArray(&quot;&lt;empty-line/&gt;&quot;, &quot;&quot;, False)
	End If
	
	lParaCount = UBound(sBodyParagraphs)
	oProgressBar.start(&quot;Экспортирование в FB2: Создание файла&quot;, (lParaCount))
	oProgressBar.setValue(0)
	
	lCurrentElement = 0
	oTextOutputStream.writeString(MakeBookTitle)
	
	MakeBody(sBodyParagraphs, True)
	
End Function

Function MakeBody(sArray As String, bBody As Boolean)
	&apos; 1. Печать абзацев, находящихся до 1-й секции (если они есть)
	&apos; Проверка на наличие Annotation, Cite, Poem Title, Poem, Para, &quot;&quot; (&lt;empty-line&gt;).
	&apos; Если есть, то до них ставим &lt;section&gt;, а перед 1-й секцией &lt;/section&gt;. Epigraph - без &lt;section&gt;...&lt;/section&gt;
	Dim lIndexOf1Section As Long, lParaCount As Long
	Dim bText As Boolean, bTextSmSection As Boolean
	lParaCount = UBound(sArray)
	lIndexOf1Section = IndexOf1Section(sArray)
	bText = False
	bTextSmSection = False
	If lIndexOf1Section = -1 Then &apos; нет ни одной секции
		While sArray(lCurrentElement,1)=sStyleEpigraph
			&apos; Если 1-е элементы - епиграф, то его не берем в &lt;section&gt;, хотя если взять - документ все равно валидный будет
			SaveElements(sArray, sArray(lCurrentElement, 1), sArray(lCurrentElement, 0), bBody)
			oProgressBar.setValue(lCurrentElement) &apos; Статусбар
		Wend
		&apos; Все остальные элементы обрамляем &lt;section&gt;
		If bBody = True Then &apos; только для body книги (не для сносок - лишняя секция)
			oTextOutputStream.writeString(&quot;&lt;section&gt;&quot; &amp; chr(10))
		End If
		While lCurrentElement &lt;= UBound(sArray)
			SaveElements(sArray, sArray(lCurrentElement, 1), sArray(lCurrentElement, 0), bBody)
			oProgressBar.setValue(lCurrentElement) &apos; Статусбар
		Wend
		If bBody = True Then &apos; только для body книги (не для сносок - лишняя секция)
			oTextOutputStream.writeString(&quot;&lt;/section&gt;&quot; &amp; chr(10))
		End If
	Else &apos;секции есть
		If lIndexOf1Section &gt; 0 Then &apos; что-то есть - записываем до 1-й секции
			While lCurrentElement &lt; lIndexOf1Section
				If sArray(lCurrentElement,1)=&quot;Para&quot; OR sArray(lCurrentElement,1)=sStylePoemTitle OR _
					sArray(lCurrentElement,1)=sStylePoem OR sArray(lCurrentElement,1)=sStyleCite OR _
					sArray(lCurrentElement,1)=sStyleSubTitle OR sArray(lCurrentElement,1)=&quot;&quot; OR _
					sArray(lCurrentElement,1)=&quot;Image&quot; OR sArray(lCurrentElement,1)=&quot;Table&quot; _
					OR sArray(lCurrentElement,1)=sStyleAnnotation Then
					If bText = False Then
						oTextOutputStream.writeString(&quot;&lt;section&gt;&quot; &amp; chr(10))
						bText = True
						&apos; &quot;защита&quot; - если после аннотации идет сразу Уровень, то вставляем между ними пустую строку для валидности
						If sArray(lCurrentElement,1)=sStyleAnnotation Then
							bELForStartAnnot = IsNeededELForAnnot( sArray(), lCurrentElement )
						End If
					End If
					SaveElements(sArray, sArray(lCurrentElement, 1), sArray(lCurrentElement, 0), bBody)
					oProgressBar.setValue(lCurrentElement) &apos; Статусбар
				Else &apos; это явно эпиграф
					If bText = True Then
						oTextOutputStream.writeString(&quot;&lt;/section&gt;&quot; &amp; chr(10))
						SaveElements(sArray, sArray(lCurrentElement, 1), sArray(lCurrentElement, 0), bBody)
						bText = False
						oProgressBar.setValue(lCurrentElement) &apos; Статусбар
					Else &apos; епиграф самый первый, как и должен 
						SaveElements(sArray, sArray(lCurrentElement, 1), sArray(lCurrentElement, 0), bBody)
						oProgressBar.setValue(lCurrentElement) &apos; Статусбар
					End If
				End If
				If bText = true AND lCurrentElement = lIndexOf1Section Then
					oTextOutputStream.writeString(&quot;&lt;/section&gt;&quot; &amp; chr(10))
				End If
			Wend
		End If
		&apos; 2. Печать всех блоков секций, начиная от 1-й
		Dim N As Integer, lNextIndex As Long, j As Long
		If lIndexOf1Section &lt;&gt; -1 Then &apos; что-то есть
			While lCurrentElement &lt;= lParaCount &apos; по индексам
				lNextIndex = GetIndexOfNextLevel(sArray, lCurrentElement)
				N = GetCountSection(sArray, lCurrentElement, lNextIndex, IndexOfEndSection(sArray))
				If lNextIndex = 0 Then
					lNextIndex = lParaCount + 1
				End If
				While lCurrentElement &lt; lNextIndex
					&apos;печатаем все абзацы между секциями (саму следующую секцию не включаем)
					If N = 0 Then &apos; смежные уровни
						If sArray(lCurrentElement,1)=&quot;Para&quot; OR sArray(lCurrentElement,1)=sStylePoemTitle OR _
							sArray(lCurrentElement,1)=sStylePoem OR sArray(lCurrentElement,1)=sStyleCite OR _
							sArray(lCurrentElement,1)=sStyleSubTitle OR sArray(lCurrentElement,1)=&quot;Image&quot; OR _
							sArray(lCurrentElement,1)=&quot;Table&quot; OR sArray(lCurrentElement,1)=&quot;&quot; Then
							If bTextSmSection = False Then
								oTextOutputStream.writeString(&quot;&lt;section&gt;&quot; &amp; chr(10))
								bTextSmSection = True
							End If
						End If
					End If
					SaveElements(sArray, sArray(lCurrentElement, 1), sArray(lCurrentElement, 0), bBody)
					oProgressBar.setValue(lCurrentElement) &apos; Статусбар
				Wend
	
				&apos; закрываем секции, взависимости от смежности уровней
				If N = 0 Then &apos; смежные уровни
					If bTextSmSection = true Then &apos; между ними есть текст. требующий взятие его в &lt;section&gt; &lt;/section&gt;
						SaveCloseSection(1)
						bTextSmSection = False &apos; для вставки &lt;section&gt; после &lt;title&gt; уровня
					End If
				Else &apos; не смежные уровни
					SaveCloseSection(N)
					bTextSmSection = False &apos; для вставки &lt;section&gt; после &lt;title&gt; уровня
				End If
				
			Wend
		End If
	End If
End Function

Function SaveNotes
	Dim lCount As Long, l As Long
	Dim sNotePars() As String
	
	oProgressBar.start(&quot;Экспортирование в FB2: Сохранение сносок&quot;, UBound(sFootnoteText())
	oProgressBar.setValue(0)
	
	oTextOutputStream.writeString(&quot;&lt;body name=&quot;&quot;notes&quot;&quot;&gt;&quot; &amp; chr(10))
	oTextOutputStream.writeString(&quot;&lt;title&gt;&quot; &amp; chr(10) &amp; &quot;&lt;p&gt;&quot; &amp; sFootnoteTitle &amp; &quot;&lt;/p&gt;&quot; &amp; chr(10) &amp; &quot;&lt;/title&gt;&quot; &amp; chr(10))
	For lCount = 0 To UBound(sFootnoteText())
		oTextOutputStream.writeString(&quot;&lt;section id=&quot;&quot;n&quot; &amp; lCount+1 &amp; &quot;&quot;&quot;&gt;&quot; &amp; chr(10))
		oTextOutputStream.writeString(&quot;&lt;title&gt;&quot; &amp; chr(10) &amp; &quot;&lt;p&gt;&quot; &amp; lCount+1 &amp; &quot;&lt;/p&gt;&quot; &amp; chr(10) &amp; &quot;&lt;/title&gt;&quot; &amp; chr(10))
		sNotePars = Split(sFootnoteText(lCount), chr(10))
		If bNotesElements = True Then &apos; экспортируем сложные структуры текста сносок
			Dim sNote As String, sType As String
			Dim sPars() As String
			For l=0 To UBound(sNotePars)
				If IsEvenNumber(l) Then
					sNote = sNotePars(l)
				Else
					sType = sNotePars(l)
				End If
				If Not IsEvenNumber(l) Then
					AddNewItemToArray2(sPars, sNote, sType)
				End If
			Next l
			lCurrentElement = 0
			MakeBody(sPars, False)
		Else	
			For l=0 To UBound(sNotePars)-1
				If sNotePars(l) = &quot;&quot; Then
					oTextOutputStream.writeString(&quot;&lt;empty-line/&gt;&quot; &amp; chr(10))
				Else
					oTextOutputStream.writeString(&quot;&lt;p&gt;&quot; &amp; sNotePars(l) &amp; &quot;&lt;/p&gt;&quot; &amp; chr(10))
				End If
			Next l
		End If
		oTextOutputStream.writeString(&quot;&lt;/section&gt;&quot; &amp; chr(10))
		oProgressBar.setValue(lCount) &apos; Статусбар
	Next lCount
	oTextOutputStream.writeString(&quot;&lt;/body&gt;&quot; &amp; chr(10))
End Function

Function IsNeededELForAnnot( sArray() As String, lCurrentElement As Long ) As Boolean
	&apos; &quot;защита&quot; - если после аннотации идет сразу Уровень, то вставляем между ними пустую строку для валидности
	Dim l As Long, lPointer As Long
	lPointer = lCurrentElement
	For l=0 To UBound(sArray())
		If sArray(lPointer,1)&lt;&gt;sStyleAnnotation Then
			If sArray(lPointer,1)=&quot;&quot; Then &apos; пустая строка после стартовой аннотации уже есть
				If bDelEL = True Then &apos; не удаляем пустую строку, даже при включенной опции удаления
					IsNeededELForAnnot = True				
				Else
					IsNeededELForAnnot = False
				End If
				Exit Function
			ElseIf IsLevel(sArray(lPointer,1)) = True Then
				IsNeededELForAnnot = True
				Exit Function
			End If
		End If
		lPointer = lPointer+1
	Next l
	IsNeededELForAnnot = False
End Function


</script:module>