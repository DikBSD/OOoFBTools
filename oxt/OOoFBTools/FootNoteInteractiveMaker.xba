<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="FootNoteInteractiveMaker" script:language="StarBasic">REM  *****  BASIC  *****
&apos; ===========================================================================================================================
&apos; 											модуль инструментов:
&apos; 										Интерактивная вставка сносок
&apos; ===========================================================================================================================
Option Explicit

Public oFootNoteInteractiveMakerDlg As Object

Private oDocControl As Object	&apos; 
Private ovCurs		As Object	&apos; видимый курсор
Private otxtCurs	As Object	&apos; текстовый курсор для перебора найденного
Private oPosTxtCurs	As Object	&apos; текстовый курсор - хранение текущей позиции найденного символа по заданному условию
Private bWorkStart	As Boolean	&apos; флаг начала работы инструмента (True). Защита от повторного запуска диалога
Private bWorkEnd	As Boolean	&apos; флаг конца работы инструмента - закрытия диалога (True)
Private bEnd		As Boolean	&apos; флаг конца поиска (признак конца документа) (True)
Private bStart		As Boolean	&apos; флаг конца поиска (признак начала документа) (True)
Private IsFirstStep As Boolean	&apos; True, если сделано нажатие кнопки поиска, т.е. поиск уже был
Private IsFirstCut	As Boolean	&apos; True, если сделано первое нажатие кнопки вырезать в буфер

Private Const sConstFootNoteFindFromBookMark	As String = &quot;_ooo_foot_note_find_from_dikbsd_&quot;	&apos; временная закладка
Private Const sConstFootNoteFindFromBookMarkPos As String = &quot;_ooo_foot_note_find_from_pos_dikbsd_&quot;	&apos; временная закладка
Private Const sConstFootNoteListBookMark		As String = &quot;_ooo_foot_note_list_dikbsd_&quot;		&apos; временная закладка


&apos; для хранения сообщений для работы со сносками
Type tFindUpIndexMakerData
	sToContinueSearch			As String &apos; Достигнут конец документа. Следущее слово не найдено. Продолжить поиск с начала?
	sToContinuePreviousSearch	As String &apos; Достигнуто начало документа. Следущее слово не найдено. Продолжить поиск с конца?
	sImpossibleToFind			As String &apos; Невозможно найти слово в выделенном объекте.
	sTitle						As String &apos; Интерактивное создание сносок
	sMarkOK						As String &apos; Выделение цветом номеров сносок закончено
	sProgress					As String &apos; Выделение цветом номеров сносок:
	sNumberInUpIndex			As String &apos; цифры в верхнем индексе
	sText						As String &apos; Текст
End Type

Public sFNUIMD As tFindUpIndexMakerData

&apos; ///////////////////////////////////////////////////////////////////////////////////////////////////////
Sub FootNoteInteractiveMakerDlg_windowActivated(oEv)
	oDocControl = ThisComponent.getCurrentController()
End Sub

Sub FootNoteInteractiveMakerDlg_windowDeactivated(oEv)
End Sub

Sub FootNoteInteractiveMakerDlg_windowOpened(oEv)
	bWorkStart = True &apos; Защита от повторного запуска диалога
End Sub

Sub FootNoteInteractiveMakerDlg_windowClosing(oEv)
	bWorkEnd	= True	&apos; флаг закрытия дмалога
	bWorkStart	= False	&apos; готовность к новому запуску диалога
	&apos; удаляем временные закладки
	DeleteAllBookMarkWithTemplate( ThisComponent.getBookmarks(), sConstFootNoteFindFromBookMark )
	DeleteAllBookMarkWithTemplate( ThisComponent.getBookmarks(), sConstFootNoteFindFromBookMarkPos )
	DeleteAllBookMarkWithTemplate( ThisComponent.getBookmarks(), sConstFootNoteListBookMark )
End Sub

Sub FootNoteInteractiveMakerDlg_windowClosed(oEv)
End Sub

Sub FootNoteInteractiveMakerDlg_windowMinimized(oEv)
End Sub

Sub FootNoteInteractiveMakerDlg_windowNormalized(oEv)
End Sub

Sub FootNoteInteractiveMakerDlg_disposing(oEv)
End Sub

&apos; ===========================================================================================================================
&apos; 										запуск формы интерактивного создания сноски
&apos; ===========================================================================================================================
&apos; инициализация и запуск диалога поиска
Sub FootNoteInteractiveMakerStart()
	If bWorkStart Then Exit Sub &apos; Защита от повторного запуска диалога
	
	GlobalScope.BasicLibraries.LoadLibrary( &quot;Tools&quot; )
	oFootNoteInteractiveMakerDlg = LoadDialog( &quot;OOoFBTools&quot;, &quot;FootNoteInteractiveMakerDlg&quot; )
	
	&apos; создание и инициализация курсоров
	oDocControl = ThisComponent.getCurrentController()
	&apos; инициализация позиции видимого курсора
	ovCurs = oDocControl.getViewCursor()
	&apos; создаем текстовый курсор - хранение текущей позиции найденного символа по заданному условию
	oPosTxtCurs = ovCurs.Text.createTextCursor()
	otxtCurs = ovCurs.Text.createTextCursor() 
	
	&apos; инициализация диалога в зависимости от локали
	InitFindUpIndexFootNoteMakerDlg()
	
	&apos; файл начтроек
	Dim sFUIMSettingsFilename As String : sFUIMSettingsFilename = getOOoFBToolsSettingsDir() &amp; &quot;FootNoteInteractiveMaker.txt&quot;

	bWorkEnd	= False &apos; еще не достигнут конец документа
	IsFirstStep	= False	&apos; еще не нажимали кнопку поиска
	IsFirstCut	= True	&apos; еще не нажимали кнопку вырезать в буфер
	
	Dim aNFNInListList() As String
	aNFNInListList() = Array( &quot;x &quot; &amp; sBTEND.sText &amp; &quot; ...&quot;, &quot;x. &quot; &amp; sBTEND.sText &amp; &quot; ...&quot;, sFNUIMD.sNumberInUpIndex &amp; &quot; ...&quot;	)
	
	Dim oList : oList = createUnoListener( &quot;FootNoteInteractiveMakerDlg_&quot;,&quot;com.sun.star.awt.XTopWindowListener&quot; )
	With oFootNoteInteractiveMakerDlg
		.addTopWindowListener( oList )
		.setVisible( True )
		.Model.lbNumberInFNListTemplate.StringItemList = aNFNInListList()
		Dim oLB As Object
		oLB = 	.getControl( &quot;lbNumberInFNListTemplate&quot; )
		oLB.SelectItemPos( 1, True )
	End With
	
	&apos; считаем положение диалога из файла настроек
	Dim nX As Integer, nY As Integer
	ReadDlgSettings( sFUIMSettingsFilename, oFootNoteInteractiveMakerDlg,  nX, nY )
	oFootNoteInteractiveMakerDlg.setPosSize( nX, nY, 54, 425, com.sun.star.awt.PosSize.POS )
	
	While Not bWorkEnd
		Wait 200     
	Wend
	
	&apos; записываем настройки диалога
	SaveSettings( sFUIMSettingsFilename, oFootNoteInteractiveMakerDlg )
	oFootNoteInteractiveMakerDlg.setVisible( False )
End Sub

&apos; ===========================================================================================================================
&apos; 											0. выделение абзаца текста сноски
&apos; ===========================================================================================================================
&apos; Выделение абзаца текста сноски
Sub SelectFNTextPara()
	Dim oDocControl	As Object : oDocControl	= ThisComponent.getCurrentController()
	Dim ovCurs		As Object : ovCurs		= oDocControl.getViewCursor()
	SelectFNText( oDocControl, ovCurs )
End Sub

&apos;********************************************************************
&apos; Выделение абзаца текста сноски
Sub SelectFNText( ByRef oDocControl As Object, ByRef ovCurs As Object )
	Dim otxtTempCurs As Object : otxtTempCurs = ovCurs.getText().CreateTextCursorByRange( ovCurs )
	otxtTempCurs.gotoStartOfParagraph( False )
	Dim s As String
	otxtTempCurs.collapseToEnd()
	Dim oLB As Object : oLB = oFootNoteInteractiveMakerDlg.getControl( &quot;lbNumberInFNListTemplate&quot; )
	Do While otxtTempCurs.goRight( 1, True )
		s = Right( otxtTempCurs.getString(), 1 )
		If s = chr(32) Or s = chr(160) Or s = chr(9) Or s = &quot;.&quot; Then &apos; пробел, неразрывный пробле, табуляция или точка
			ovCurs.goRight( 1, False )
		Else
			&apos; для цифр в верхнем индексе
			If otxtTempCurs.CharEscapement &gt; 0 Then
				If IsNumeric( s ) Then &apos; цифра в верхнем индексе
					ovCurs.goRight( 1, False )
				Else &apos; символ в верхнем индексе
					&apos; TODO ввести опцию: ищем только цифры или еще и символы в верхнем индексе (неверно распознанная цифра после OCR)
					Exit Do
				End If
			ElseIf otxtTempCurs.CharEscapement = 0 Then
				&apos; для цифр без индекса
				If IsNumeric( s ) Then &apos; цифра без индекса
					ovCurs.goRight( 1, False )
				Else &apos; символ без индекса
					&apos; TODO ввести опцию: ищем только цифры или еще и символы  (неверно распознанная цифра после OCR)
					Exit Do
				End If
			End If
		End If
		otxtTempCurs.collapseToEnd()
	Loop
	&apos; выделяем текст сноски до конца абзаца
	otxtTempCurs.gotoEndOfParagraph( True )
	oDocControl.Select( otxtTempCurs )
End Sub

&apos; ===========================================================================================================================
&apos; 					1. вырезание выделенного текста в буфер обмена и переход на номер сноски в верхнем индексе
&apos; ===========================================================================================================================
Sub CutSelectedTextInBufferAndGoToFootNoteUpIndex()
	&apos;  очистка всех цветов для выделенного символа
	ClearFont_Back_BackgroundColor()
	&apos; вырезать выделенный текст в буфер обмена
	CutSelectedTextInBuffer()
	&apos; для только первого поиска номера сноски:
	If IsFirstCut Then
		&apos; переход на 20 абзацев выше - с этого места будем искать номер сноски
		Dim otxtCursor : otxtCursor = ThisComponent.Text.createTextCursor()
		otxtCursor.gotoRange( ovCurs.getStart(), False )
		Dim i As Integer
		For i = 0 To 19
			otxtCursor.gotoPreviousParagraph( False )
		Next i
		ovCurs.gotoRange( otxtCursor, False )
&apos;		ovCurs.goUp( 60, False ) &apos; строк (вместо алгоритма выше)
	End If
	IsFirstCut = False &apos; с этого момента поиск делаем только от временной закладки
	&apos; переход на номер сноски в верхнем индексе
	FindNextFootNoteUpIndex()
End Sub

&apos;***************************************************************************
&apos; вырезать выделенный текст в буфер обмена
Sub CutSelectedTextInBuffer()
	&apos; вырезаем выделенный текст в буфер обмена
	_UnoCut()
	&apos; удаляем неактуальную закладку списка сносок и ставим новую в место выреза текста
	DeleteAllBookMarkWithTemplate( ThisComponent.getBookmarks(), sConstFootNoteListBookMark )
	ovCurs.goDown( 1, False )
	_UnoInsertBookmark( sConstFootNoteListBookMark )
	IsFirstStep = False &apos; теперь нужен поиск номера сноски в тексте
End Sub

&apos; ===========================================================================================================================
&apos; 										2. вставка текста сноски из буфер обмена
&apos; ===========================================================================================================================
Sub InsertNoteText()
	&apos; удаляем временные неактуальныю уже закладки для номера сноски и ставим актуальные
	DeleteAllBookMarkWithTemplate( ThisComponent.getBookmarks(), sConstFootNoteFindFromBookMark )
	DeleteAllBookMarkWithTemplate( ThisComponent.getBookmarks(), sConstFootNoteFindFromBookMarkPos )
	_UnoInsertBookmark( sConstFootNoteFindFromBookMark )
	&apos; ставим временную закладку справа от места положения номера сноски
	ovCurs.collapseToEnd()
	_UnoInsertBookmark( sConstFootNoteFindFromBookMarkPos )
	&apos; переход назад на закладку номера сноски
	Dim oBookMarks As Object : oBookMarks = ThisComponent.getBookmarks()
	If oBookMarks.hasByName( sConstFootNoteFindFromBookMark ) Then
		GoToViewCursorToBookMark( ovCurs, sConstFootNoteFindFromBookMark, True )
	End If
	&apos; очистить стиль символа - на случай верхнего регистра и т.д.
	ClearSymbolFormat()
	&apos; удалить выделенные остатки текста сноски, вставить очередную сноску, вставить текст сноски
	_UnoDelete()
	If oFootNoteInteractiveMakerDlg.GetControl( &quot;optbtnFootnote&quot; ).State Then
		_UnoInsertFootnote()
	Else
		_UnoInsertEndnote()
	End If
	_UnoPaste()
	&apos; переход на обрабатываемый список сносок, если есть закладка sConstFootNoteListBookMark
	If oBookMarks.hasByName( sConstFootNoteListBookMark ) Then
		GoToViewCursorToBookMark( ovCurs, sConstFootNoteListBookMark, True )
		&apos; переходим к первому символу/цифре после номера сноски (пропускаеи цифры в верхнем индексе и пробелы сначала абзаца)
		ovCurs.gotoStartOfLine( False )
		&apos; выделяем абзац текста сноски (игнорируем ее номер в верхнем индексе и все пробелы/тапбуляции ДО текста, если они есть)
		SelectFNText( oDocControl, ovCurs )
	End If
End Sub

&apos; ===========================================================================================================================
&apos; 											поиск предыдущего номера сноски в верхнем индексе
&apos; ===========================================================================================================================
&apos; Поиск номера сноски в верхнем индексе
Sub FindPreviousFootNoteUpIndex()
	bStart = False &apos; признак начала документа
	
	If Not IsFirstStep Then &apos; только для случая, когда после вырезания текста в буфер ни разу не производили поиск
		&apos; переход на закладку sConstFootNoteFindFromBookMarkPos, если она есть
		Dim oBookMarks As Object : oBookMarks = ThisComponent.getBookmarks()
		If oBookMarks.hasByName( sConstFootNoteFindFromBookMarkPos ) Then
			GoToViewCursorToBookMark( ovCurs, sConstFootNoteFindFromBookMarkPos, True )
		End If
	End If

	&apos; проверка, является ли объект, где производится поиск - текстом
	If Not IsSelTextRange( oDocControl ) Then
		MsgBox sFNUIMD.sImpossibleToFind, 64, sFNUIMD.sTitle
		Exit Sub
	End If
	&apos; переместить курсор на позицию видимого курсора
	otxtCurs.gotoRange( ovCurs.getStart(), False )

	&apos; ищем заданное регулярное выражение
	FindRegInTextPrevious( ovCurs, &quot;[:digit:]+&quot;, sFNUIMD.sTitle )
	
	IsFirstStep = True
End Sub

&apos;***************************************************************************
&apos; ищем заданный регекс
Sub FindRegInTextPrevious( ovCurs, sFind As String, sTitle As String )
	If Not IsSelTextRange( oDocControl ) Then
		MsgBox sFNUIMD.sImpossibleToFind, 64, sTitle
		Exit Sub
	End If
	otxtCurs = ovCurs.Text.createTextCursorByRange( ovCurs )
	&apos; поиск и обработка искомого слова
	On Error Resume Next
	If FindPreviousInText( sFind ) Then &apos; еще не дошли до начала документа
		&apos; только для символов верхнего индекса
		If otxtCurs.CharEscapement &lt; 0 Then
			&apos; снимаем выделение с последнего слова - оно было уже обработано, просто поиск закончился на нем
			ovCurs.collapseToStart()
			oDocControl.Select( otxtCurs ) &apos; снимаем предыдущее выделяем и ищем заново с конца документа
			FindRegInTextPrevious( ovCurs, sFind, sTitle ) &apos; рекурсия
		Else
			oPosTxtCurs.GotoRange( otxtCurs, False )
		End If
		If bStart = False Then
			oDocControl.Select( otxtCurs )
		Else
			oDocControl.Select( oPosTxtCurs )
		End If
	Else &apos; начало документа
		&apos; снимаем выделение с последнего слова - оно было уже обработано, просто поиск закончился на нем
		ovCurs.collapseToEnd()
		If MsgBox( sFNUIMD.sToContinuePreviousSearch, 32 + 4 + 128, sTitle ) &lt;&gt; 6 Then
			bStart = True : Exit Sub
		End If
		oDocControl.Select( otxtCurs ) &apos; снимаем предыдущее выделяем и ищем заново с конца документа
		FindRegInTextPrevious( ovCurs, sFind, sTitle ) &apos; рекурсия
	End If
End Sub

&apos;***************************************************************************
&apos; поиск предыдущего заданного регекса в документе
Function FindPreviousInText( sFind ) As Boolean
	&apos; задаем поиск верхнего индекса
	Dim SrchAttributes(0) As New com.sun.star.beans.PropertyValue
	SrchAttributes(0).Name	= &quot;CharEscapement&quot;

	Dim oDesc : oDesc = ThisComponent.createSearchDescriptor()
	With oDesc
		.SearchRegularExpression = True
		.SetSearchAttributes(SrchAttributes())
		.SearchString = sFind
&apos;		.SearchStyles = True
		.ValueSearch = False
		.SearchBackwards = True
	End With
	
	otxtCurs.collapseToStart()
	Dim Found : Found = ThisComponent.findNext( otxtCurs.getEnd(), oDesc )
	
	if IsNull( Found ) Then &apos; начало документа - ничего не нашли
		otxtCurs = ThisComponent.Text.createTextCursor() 
		otxtCurs.gotorange( ThisComponent.Text.getEnd(), False )
		FindPreviousInText = False &apos; начало документа - ничего не нашли
		Exit Function
	End If

	otxtCurs = Found.Text.createTextCursor()
	With otxtCurs
		.gotorange( Found.getStart(), False )
		.gotorange( Found.getEnd(), True )
	End With

	FindPreviousInText = True &apos; нашли искомое регулярное выражение
End Function

&apos; ===========================================================================================================================
&apos; 											поиск следующего номера сноски в верхнем индексе
&apos; ===========================================================================================================================
&apos; Поиск номера сноски в верхнем индексе
Sub FindNextFootNoteUpIndex()
	bEnd = False &apos; признак конца документа
	
	If Not IsFirstStep Then &apos; только для случая, когда после вырезания текста в буфер ни разу не производили поиск
		&apos; переход на закладку sConstFootNoteFindFromBookMarkPos, если она есть
		Dim oBookMarks As Object : oBookMarks = ThisComponent.getBookmarks()
		If oBookMarks.hasByName( sConstFootNoteFindFromBookMarkPos ) Then
			GoToViewCursorToBookMark( ovCurs, sConstFootNoteFindFromBookMarkPos, True )
		End If
	End If

	&apos; проверка, является ли объект, где производится поиск - текстом
	If Not IsSelTextRange( oDocControl ) Then
		MsgBox sFNUIMD.sImpossibleToFind, 64, sFNUIMD.sTitle
		Exit Sub
	End If
	&apos; переместить курсор на позицию видимого курсора
	otxtCurs.gotoRange( ovCurs.getStart(), False )

	&apos; ищем заданное регулярное выражение
	FindRegInText( ovCurs, &quot;[:digit:]+&quot;, sFNUIMD.sTitle )
	
	&apos; выбор справа всех цифр в верхнем индексе до символа, или до числа не в верхнем индексе
	Dim txtTempCursor As Object : txtTempCursor = ovCurs.Text.createTextCursorByRange( ovCurs.End )
	Dim s As String
	txtTempCursor.collapseToEnd()
	Do While txtTempCursor.goRight( 1, True )
		s = Right( txtTempCursor.getString(), 1 )
		If ( s &lt;&gt; chr(32) And s &lt;&gt; chr(160) And s &lt;&gt; chr(9) ) And txtTempCursor.CharEscapement &gt; 0 Then &apos; пропускаем пробел, неразрывный пробел и табуляция
			&apos; TODO ввести опцию: ищем только цифры или еще и символы в верхнем индексе (неверно распознанная цифра после OCR)
			If  IsNumeric( s ) Then
				ovCurs.goRight( 1, True )
				oDocControl.Select( ovCurs )
			Else
				Exit Do
			End If
		Else
			Exit Do
		End If
		txtTempCursor.collapseToEnd()
	Loop 
	IsFirstStep = True
End Sub

&apos;***************************************************************************
&apos; ищем заданный регекс
Sub FindRegInText( ovCurs, sFind As String, sTitle As String )
	If Not IsSelTextRange( oDocControl ) Then
		MsgBox sFNUIMD.sImpossibleToFind, 64, sTitle
		Exit Sub
	End If
	otxtCurs = ovCurs.Text.createTextCursorByRange( ovCurs )
	&apos; поиск и обработка искомого слова
	On Error Resume Next
	If FindNextInText( sFind ) Then &apos; еще не дошли до конца документа
		&apos; только для символов верхнего индекса
		If otxtCurs.CharEscapement &lt; 0 Then
			&apos; снимаем выделение с последнего слова - оно было уже обработано, просто поиск закончился на нем
			ovCurs.collapseToEnd()
			oDocControl.Select( otxtCurs ) &apos; снимаем предыдущее выделяем и ищем заново с начала документа
			FindRegInText( ovCurs, sFind, sTitle ) &apos; рекурсия
		Else
			oPosTxtCurs.GotoRange( otxtCurs, False )
		End If
		If bEnd = False Then
			oDocControl.Select( otxtCurs )
		Else
			oDocControl.Select( oPosTxtCurs )
		End If
	Else &apos; конец документа
		&apos; снимаем выделение с последнего слова - оно было уже обработано, просто поиск закончился на нем
		ovCurs.collapseToEnd()
		If MsgBox( sFNUIMD.sToContinueSearch, 32 + 4 + 128, sTitle ) &lt;&gt; 6 Then
			bEnd = True : Exit Sub
		End If
		oDocControl.Select( otxtCurs ) &apos; снимаем предыдущее выделяем и ищем заново с начала документа
		FindRegInText( ovCurs, sFind, sTitle ) &apos; рекурсия
	End If
End Sub

&apos;***************************************************************************
&apos; поиск следующего заданного регекса в документе
Function FindNextInText( sFind ) As Boolean
	&apos; задаем поиск верхнего индекса
	Dim SrchAttributes(0) As New com.sun.star.beans.PropertyValue
	SrchAttributes(0).Name	= &quot;CharEscapement&quot;

	Dim oDesc : oDesc = ThisComponent.createSearchDescriptor()
	With oDesc
		.SearchRegularExpression = True
		.SetSearchAttributes(SrchAttributes())
		.SearchString = sFind
&apos;		.SearchStyles = True
		.ValueSearch = False
		.SearchBackwards = False
	End With

	otxtCurs.collapseToEnd()
	Dim Found : Found = ThisComponent.findNext( otxtCurs.getStart(), oDesc )
	
	if IsNull( Found ) Then &apos; конец документа - ничего не нашли
		otxtCurs = ThisComponent.Text.createTextCursor() 
		otxtCurs.gotorange( ThisComponent.Text.getStart(), False )
		FindNextInText = False &apos; конец документа - ничего не нашли
		Exit Function
	End If

	otxtCurs = Found.Text.createTextCursor()
	With otxtCurs
		.gotorange( Found.getStart(), False )
		.gotorange( Found.getEnd(), True )
	End With

	FindNextInText = True &apos; нашли искомое регулярное выражение
End Function


&apos; ===========================================================================================================================
&apos; 										3.	пометка заданным маркером и цветом шрифта номеров сносок
&apos; ===========================================================================================================================

&apos; пометка заданным маркером и цветом шрифта номеров сносок
Sub MarkFootNoteNumbers()
	Dim oProgressBar As Object : oProgressBar = ThisComponent.CurrentController.StatusIndicator
	oProgressBar.start( sFNUIMD.sProgress, 4 )
	oProgressBar.setValue(1)
	&apos; пометка заданным маркером и цветом шрифта всех цифр в верхнем индексе
	MarkTextForTemplate( &quot;[:digit:]+&quot;, 16711680, 16776960, True )
	oProgressBar.setValue(2)
&apos;	&apos; убираем цвет у цифр, спереди которых - пробелы (из-за багов LO4 на отмеченных цветом цифрах не срабатывает поиск ^[:space:]*[:digit:]+)
&apos;	ClearSpaceNumberColor()
&apos;	oProgressBar.setValue(3)
	&apos; пометка номеров примечаний в списках примечаний в зависимости от режима поиска
	Dim oLB As Object : oLB = oFootNoteInteractiveMakerDlg.getControl( &quot;lbNumberInFNListTemplate&quot; )
	If oLB.SelectedItemPos = 1 Then
		&apos; пометка заданным маркером и цветом шрифта только стартовых цифр в верхнем индексе (номера сносок в списках текста сносок)
		MarkTextForTemplate( &quot;^[:space:]*[:digit:]+&quot;, 16711680, 10079487, True )
	ElseIf oLB.SelectedItemPos = 0 Then
		&apos; пометка заданным маркером и цветом шрифта только стартовых цифр без индекса (номера сносок в списках текста сносок)
		MarkTextForTemplate( &quot;^[:space:]*[:digit:]+&quot;, 16711680, 10079487, False )
	Else
		&apos; пометка заданным маркером и цветом шрифта только стартовых цифр без индекса (номера сносок в списках текста сносок)
		MarkTextForTemplate( &quot;^[:space:]*[:digit:]+\.&quot;, 16711680, 10079487, False )
	End If
	
	oProgressBar.setValue(3)
	MsgBox sFNUIMD.sMarkOK, 64, sFNUIMD.sTitle
	oProgressBar.end
End Sub

&apos;***************************************************************************
&apos; пометка заданным маркером и цветом шрифта текста по шаблону
Sub MarkTextForTemplate( ByRef SearchStr As String, ByRef FontColor As Long, ByRef BackColor As Long, bForUpIndex As Boolean )
	Dim oDoc		As Object : oDoc		= ThisComponent
	Dim oSearch		As Object : oSearch		= oDoc.createReplaceDescriptor()
	Dim oDocControl	As Object : oDocControl = ThisComponent.getCurrentController()
		
	With oSearch
		If bForUpIndex = True Then
			&apos; для цифр в верхнем индексе
			Dim SrchAttributes(0) As New com.sun.star.beans.PropertyValue
			SrchAttributes(0).Name	= &quot;CharEscapement&quot;
			.SetSearchAttributes( SrchAttributes() )
		End If
&apos;		.ReplaceAttributes( ReplAttributes() ) &apos; выдает ошибку (bug LO?)
		.SearchString				= SearchStr
&apos;		.SearchStyles 				= True
		.SearchRegularExpression	= True
		.ValueSearch 				= False
		.SearchAll					= True
	End With
	
	
	&apos; TODO - проверить опции поиска, чтобы искал и 1-ю цифру
	Dim oFoundAll As Object
	oFoundAll = oDoc.findFirst( oSearch )
	If Not IsNull( oFoundAll ) Then
		If oFoundAll.String &lt;&gt; &quot;&quot; Then
			oDocControl.Select( oFoundAll )
			&apos; пометка заданным маркером и цветом шрифта выделенного текста
			MarkSelectedText( FontColor, BackColor )
			oDocControl.ViewCursor.gotoStart( False )
		End If
	End If
	
	oFoundAll = oDoc.findAll( oSearch )
	If oFoundAll.Count &gt; 0 Then
		oDocControl.Select( oFoundAll )
		&apos; пометка заданным маркером и цветом шрифта выделенного текста
		MarkSelectedText( FontColor, BackColor )
		oDocControl.ViewCursor.gotoStart( False )
	End If
End Sub

&apos;***************************************************************************
&apos; пометка заданным маркером и цветом шрифта выделенного текста
Sub MarkSelectedText( ByRef FontColor As Long, ByRef BackColor As Long )
	Dim oDoc	As Object : oDoc	= ThisComponent.CurrentController.Frame
	Dim oDisp	As Object : oDisp	= createUnoService(&quot;com.sun.star.frame.DispatchHelper&quot;)
	
	&apos; цвет цифр
	Dim pvArgs1(0) As New com.sun.star.beans.PropertyValue
	pvArgs1(0).Name = &quot;FontColor&quot;
	pvArgs1(0).Value = FontColor
	oDisp.executeDispatch( oDoc, &quot;.uno:FontColor&quot;, &quot;&quot;, 0, pvArgs1() )

	&apos; цвет фона цифр
	Dim pvArgs2(0) As New com.sun.star.beans.PropertyValue
	pvArgs2(0).Name = &quot;BackColor&quot;
	pvArgs2(0).Value = BackColor
	oDisp.executeDispatch( oDoc, &quot;.uno:BackColor&quot;, &quot;&quot;, 0, pvArgs2() )
End Sub

&apos;***************************************************************************
&apos; убираем цвет у цифр, с переди которых - пробулы
Sub ClearSpaceNumberColor()
	Dim oDoc	As Object : oDoc	= ThisComponent.CurrentController.Frame
	Dim oDisp	As Object : oDisp	= createUnoService(&quot;com.sun.star.frame.DispatchHelper&quot;)

	Dim args1(18) As New com.sun.star.beans.PropertyValue
	args1(0).Name = &quot;SearchItem.StyleFamily&quot;
	args1(0).Value = 2
	args1(1).Name = &quot;SearchItem.CellType&quot;
	args1(1).Value = 0
	args1(2).Name = &quot;SearchItem.RowDirection&quot;
	args1(2).Value = true
	args1(3).Name = &quot;SearchItem.AllTables&quot;
	args1(3).Value = false
	args1(4).Name = &quot;SearchItem.Backward&quot;
	args1(4).Value = false
	args1(5).Name = &quot;SearchItem.Pattern&quot;
	args1(5).Value = false
	args1(6).Name = &quot;SearchItem.Content&quot;
	args1(6).Value = false
	args1(7).Name = &quot;SearchItem.AsianOptions&quot;
	args1(7).Value = false
	args1(8).Name = &quot;SearchItem.AlgorithmType&quot;
	args1(8).Value = 1
	args1(9).Name = &quot;SearchItem.SearchFlags&quot;
	args1(9).Value = 65536
	args1(10).Name = &quot;SearchItem.SearchString&quot;
	args1(10).Value = &quot;^[:space:]+[:digit:]+&quot;
	args1(11).Name = &quot;SearchItem.ReplaceString&quot;
	args1(11).Value = &quot;&quot;
	args1(12).Name = &quot;SearchItem.Locale&quot;
	args1(12).Value = 255
	args1(13).Name = &quot;SearchItem.ChangedChars&quot;
	args1(13).Value = 2
	args1(14).Name = &quot;SearchItem.DeletedChars&quot;
	args1(14).Value = 2
	args1(15).Name = &quot;SearchItem.InsertedChars&quot;
	args1(15).Value = 2
	args1(16).Name = &quot;SearchItem.TransliterateFlags&quot;
	args1(16).Value = 1280
	args1(17).Name = &quot;SearchItem.Command&quot;
	args1(17).Value = 1
	args1(18).Name = &quot;Quiet&quot;
	args1(18).Value = true
	oDisp.executeDispatch(oDoc, &quot;.uno:ExecuteSearch&quot;, &quot;&quot;, 0, args1())

	&apos; убираем цвет шрифта
	Dim args2(0) As New com.sun.star.beans.PropertyValue
	args2(0).Name = &quot;FontColor&quot;
	args2(0).Value = -1
	oDisp.executeDispatch(oDoc, &quot;.uno:FontColor&quot;, &quot;&quot;, 0, args2())

	&apos; убираем цвет фона
	oDisp.executeDispatch(oDoc, &quot;.uno:BackColor&quot;, &quot;&quot;, 0, Array())
End Sub

&apos; ==================================================================================================
&apos; 								локализация интерактивной вставки сносок
&apos; ==================================================================================================
&apos; инициализация сообщений интерактивной вставки сносок в зависимости от локали
Sub InitFindUpIndexFootNoteMakerDataMessage()
	If getOOoLocal() = &quot;ru&quot; OR getOOoLocal() = &quot;uk&quot; Then
		With sFNUIMD
			.sToContinueSearch	= &quot;Достигнут конец документа.&quot; &amp; chr(10) &amp; &quot;Ничего не найдено.&quot; &amp; chr(10) &amp; chr(10) &amp; _
									&quot;Продолжить поиск с начала?&quot;
			.sToContinuePreviousSearch	= &quot;Достигнуто начало документа.&quot; &amp; chr(10) &amp; &quot;Ничего не найдено.&quot; &amp; chr(10) &amp; chr(10) &amp; _
									&quot;Продолжить поиск с конца?&quot;
			.sImpossibleToFind	= &quot;Невозможно найти слово в выделенном объекте.&quot;
			.sTitle				= &quot;Интерактивное создание сносок&quot;
			.sMarkOK			= &quot;Выделение цветом номеров сносок закончено.&quot;
			.sProgress			= &quot;Разметка цветом:&quot;
			.sNumberInUpIndex	= &quot;цифры в верхнем индексе&quot;
			.sText				= &quot;Текст&quot;
		End With
	Else
		With sFNUIMD
			.sToContinueSearch	= &quot;The end of the document is reached. &quot; &amp; chr (10) &amp; &quot;Up Index is not found.&quot; &amp; chr (10) &amp; chr (10) &amp; _
									&quot;To continue search from the beginning?&quot;
			.sToContinuePreviousSearch	= &quot;The start of the document is reached. &quot; &amp; chr (10) &amp; &quot;Up Index is not found.&quot; &amp; chr (10) &amp; chr (10) &amp; _
									&quot;To continue search from the end?&quot;
			.sImpossibleToFind	= &quot;It is impossible to find a Word in the allocated Object.&quot;
			.sTitle				= &quot;Interactive FootNotes building&quot;
			.sMarkOK			= &quot;The Color Separation the Footnotes Numbers is finished.&quot;
			.sProgress			= &quot;Color Marking:&quot;
			.sNumberInUpIndex	= &quot;Numers in Upper Index&quot;
			.sText				= &quot;the Text&quot;
		End With
	End If
End Sub

&apos; ***********************************************************************************************
&apos; инициализация диалога интерактивной вставки сносок по шаблону в зависимости от локали
Sub InitFindUpIndexFootNoteMakerDlg()
	&apos; инициализация сообщений интерактивной вставки сносок в зависимости от локали
	InitFindUpIndexFootNoteMakerDataMessage()
	
	oFootNoteInteractiveMakerDlg.getModel.Title	= sFNUIMD.sTitle
	
	If getOOoLocal() = &quot;ru&quot; OR getOOoLocal() = &quot;uk&quot; Then
		With oFootNoteInteractiveMakerDlg.getModel
			.selecFNTextCmdBtn.Label		= &quot;0. Выделить текст сноски&quot;
			.cutSelectedTextCmdBtn.Label	= &quot;1. Вырезать в буфер&quot;
			.insertFootNoteCmdBtn.Label		= &quot;2. Вставить сноску&quot;
			.findPrevUpIndexCmdBtn.Label	= &quot;Предыдущий номер сноски&quot;
			.findNextUpIndexCmdBtn.Label	= &quot;Следующий номер сноски&quot;
			.MarkNumbersUpIndexCmdBtn.HelpText	= &quot;Выделение цветом номеров сносок для наглядности&quot; 
			.lblNumberInFNListTemplate.Label	= &quot;Шаблон для № примечания в списке:&quot;
			
			.lblFENoteType.Label			= &quot;Тип генерируемых сносок:&quot;
			.optbtnFootnote.Label			= &quot;Сноска&quot;
			.optbtnEndnote.Label			= &quot;Концевая сноска&quot;
		End With
	Else
		With oFootNoteInteractiveMakerDlg.getModel
			.selecFNTextCmdBtn.Label		= &quot;0. Select Footnote Text&quot;
			.cutSelectedTextCmdBtn.Label	= &quot;1. Cut to Buffer&quot;
			.insertFootNoteCmdBtn.Label		= &quot;2. Insert FotNote&quot;
			.findPrevUpIndexCmdBtn.Label	= &quot;Previous FootNote №&quot;
			.findNextUpIndexCmdBtn.Label	= &quot;Next FootNote №&quot;
			.MarkNumbersUpIndexCmdBtn.HelpText	= &quot;Color mark thr Footnotes Numbers for clarity&quot; 
			.lblNumberInFNListTemplate.Label	= &quot;the Pattern for № Notes in the List:&quot;
			
			.lblFENoteType.Label			= &quot;Type generated footnotes:&quot;
			.optbtnFootnote.Label			= &quot;Footnote&quot;
			.optbtnEndnote.Label			= &quot;EndNote&quot;
		End With
	End If
End Sub

</script:module>