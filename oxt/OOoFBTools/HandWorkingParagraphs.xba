<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="HandWorkingParagraphs" script:language="StarBasic">REM  *****  BASIC  *****
&apos; =============================================================================================================
&apos; 										модуль инструмента:
&apos; 								ручная обработка абзацев (склейка)
&apos; =============================================================================================================
Option Explicit

Private oHWPDlg As Object
Private bWorkStart			As Boolean &apos; флаг начала работы инструмента (True). Защита от повторного запуска диалога
Private bWorkEnd			As Boolean &apos; флаг конца работы инструмента - закрытия диалога (True)

Private sHWPSettingsFilename As String &apos; файл настроек

&apos; =============================================================================================================
Sub HandWorkingParagraphsDlg_windowActivated(oEv)
End Sub

Sub HandWorkingParagraphsDlg_windowDeactivated(oEv)
End Sub

Sub HandWorkingParagraphsDlg_windowOpened(oEv)
	bWorkStart = True &apos; Защита от повторного запуска диалога
End Sub

Sub HandWorkingParagraphsDlg_windowClosing(oEv)
	bWorkEnd	= True	&apos; флаг закрытия дмалога
	bWorkStart	= False	&apos; готовность к новому запуску диалога
	&apos; записываем настройки диалога
 	SaveSettings( sHWPSettingsFilename, oHWPDlg )
End Sub

Sub HandWorkingParagraphsDlg_windowClosed(oEv)
End Sub

Sub HandWorkingParagraphsDlg_windowMinimized(oEv)
End Sub

Sub HandWorkingParagraphsDlg_windowNormalized(oEv)
End Sub

Sub HandWorkingParagraphsDlg_disposing(oEv)
End Sub

&apos; =============================================================================================================
&apos; инициализация и запуск диалога поиска
Sub HandWorkingParagraphsStart()
	If bWorkStart Then Exit Sub &apos; Защита от повторного запуска диалога
	
	&apos; файл настроек
	sHWPSettingsFilename = getOOoFBToolsSettingsDir() &amp; &quot;hand_working_paragraphs.txt&quot;

	GlobalScope.BasicLibraries.LoadLibrary( &quot;Tools&quot; )   
	oHWPDlg = LoadDialog( &quot;OOoFBTools&quot;, &quot;HandWorkingParagraphsDlg&quot; )
	
	&apos; инициализация диалога в зависимости от локали
	InitHandWorkingParagraphsDlg()

	Dim aModeList() As String : aModeList() = Array( sHWPD.sBreakPara, sHWPD.sBreakLine )
	With oHWPDlg
		.Model.lbHWPMode.StringItemList = aModeList()
		.getControl( &quot;lbHWPMode&quot; ).SelectItemPos( 0, True )
		.getControl( &quot;lbHWPModeType&quot; ).SelectItemPos( 0, True )
	End With
	
	&apos; считаем положение диалога из файла настроек
	Dim nX As Integer, nY As Integer
	ReadDlgSettings( sHWPSettingsFilename, oHWPDlg, nX, nY )
	oHWPDlg.setPosSize( nX, nY, 54, 350, com.sun.star.awt.PosSize.POS )

	bWorkEnd = False
	
	Dim oList : oList = createUnoListener( &quot;HandWorkingParagraphsDlg_&quot;,&quot;com.sun.star.awt.XTopWindowListener&quot; )
	With oHWPDlg
		.addTopWindowListener( oList )
		.setVisible( True )
	End With
	While Not bWorkEnd
		Wait 200     
	Wend
	
	oHWPDlg.setVisible( False )
End Sub

&apos; Изменение Вида обработки при изменении Режима обработки абзацев
Sub lbHWPModeChange()
	With sHWPD
		Dim aModeTypeList() As String
		Select Case oHWPDlg.GetControl( &quot;lbHWPMode&quot; ).SelectedItemPos
			Case 0 &apos; Обрыв абзаца (¶)
				aModeTypeList() = Array( .sSpliceReplaceParaToSpace, _
										.sSpliceRemovePara, _
										.sReplaceBreakParaToBR )
			Case 1 &apos; Разрыв строки (↵)
				aModeTypeList() = Array( .sSpliceReplaceBRToSpace, _
										.sSpliceRemoveBR, _
										.sReplaceBRToBreakPara )
		End Select
		With oHWPDlg
			.Model.lbHWPModeType.StringItemList = aModeTypeList()
			.getControl( &quot;lbHWPModeType&quot; ).SelectItemPos( 0, True )
		End With
	End With
End Sub

&apos; Обработка выделенных абзацев по указанному виду обработки
Sub cmdBtnWorkClick()
	Dim lSel	As Integer : lSel = GetSelectionCount() &apos; число выделенных фрагментов текста
	Dim nCount	As Integer : nCount = 0
	&apos; проверка, что выделено
	If lSel = -1 Then
		MsgBox sHWPD.sSelectTextOnly, 64, sHWPD.sHandWorkingParagraphs
		Exit Sub
	End If
	
	Dim oCurs() As Object, l As Integer
	If Not CreateSelectedTextIterator( ThisComponent, sHWPD.sNoSelectText &amp; chr(10) &amp; _
										sHWPD.sProcessAllDoc, sHWPD.sHandWorkingParagraphs, oCurs() ) Then Exit Sub
	
	oHWPDlg.Enable = False
	
	For l = LBound( oCurs() ) To UBound( oCurs() )
		Select Case oHWPDlg.GetControl( &quot;lbHWPMode&quot; ).SelectedItemPos
			Case 0 &apos; Обрыв абзаца (¶)
				Select Case oHWPDlg.GetControl( &quot;lbHWPModeType&quot; ).SelectedItemPos
					Case 0 &apos; Склейка в 1 абзац (Замена ¶ на 1 пробел)
						nCount = nCount + ParagraphsWorker( ThisComponent, oCurs(l, 0), oCurs(l, 1), &quot;$&quot;, &quot; &quot; )
					Case 1 &apos; Склейка в 1 абзац (Удаление ¶)
						nCount = nCount + ParagraphsWorker( ThisComponent, oCurs(l, 0), oCurs(l, 1), &quot;$&quot;, &quot;&quot; )
					Case 2 &apos; Заменить обрыв абзаца ¶ на разрыв строки (\n)
						nCount = nCount + ParagraphsWorker( ThisComponent, oCurs(l, 0), oCurs(l, 1), &quot;$&quot;, chr(10) )
				End Select
			Case 1 &apos; Разрыв строки (↵)
				Select Case oHWPDlg.GetControl( &quot;lbHWPModeType&quot; ).SelectedItemPos
					Case 0 &apos; Склейка в 1 абзац (Замена ↵ на 1 пробел)
						nCount = nCount + ParagraphsWorker( ThisComponent, oCurs(l, 0), oCurs(l, 1), chr(10), &quot; &quot; )
					Case 1 &apos; Склейка в 1 абзац (Удаление ↵)
						nCount = nCount + ParagraphsWorker( ThisComponent, oCurs(l, 0), oCurs(l, 1), chr(10), &quot;&quot; )
					Case 2 &apos; Заменить ↵ на абзац (¶)
						nCount = nCount + ParagraphsWorker( ThisComponent, oCurs(l, 0), oCurs(l, 1), chr(10), chr(13) )
				End Select
		End Select
	Next l

	If lSel &lt;&gt; -1 Then
		Dim sMess As String
		If nCount &gt; 0 Then &apos; обработка была сделана
			If lSel = 0 Then
				sMess = sHWPD.sProcessAllDocEnd &amp; chr(10)
			Else
				sMess = sHWPD.sProcessSelectedFragments &amp; &quot;: &quot; &amp; lSel &amp; chr(10) &amp; _
						sHWPD.sProcessPara &amp; &quot;: &quot; &amp; nCount
			End If
		Else &apos; обработки не было - не найдено условие в абзацах
			Dim sM As String : sM = sHWPD.sNotTermsFindInText
			If lSel = 0 Then
				sMess = sHWPD.sNotProcessAllDocEnd &amp; &quot; &quot; &amp; sM &amp; chr(10)
			Else
				sMess = sHWPD.sNotProcessSelTextEnd &amp; &quot; &quot; &amp; sM &amp; chr(10)
			End If
		End If
		MsgBox sMess, 64, sHWPD.sHandWorkingParagraphs
	End If

	oHWPDlg.Enable = True

End Sub

&apos; =============================================================================================================
&apos; 					Функции обработки абзацев для выбранного Режима и Типа обработки
&apos; =============================================================================================================
Function ParagraphsWorker( oDoc As Object, oLCurs As Object, oRCurs As Object, sFindReg As String, sReplaceReg As String ) As Integer
	ParagraphsWorker = 0
	If IsNull(oLCurs) Or IsNull( oRCurs ) Or IsNull( oDoc ) Then Exit Function
	Dim oCursorL As Object : oCursorL = oLCurs.getText().createTextCursorByRange( oLCurs )
	Dim oCursorR As Object : oCursorR = oRCurs.getText().createTextCursorByRange( oRCurs )
&apos;	If oCursorL.Text.compareRegionEnds( oCursorL, oCursorR ) &lt;= 0 Then Exit Function
	
	Dim vSearch As Variant : vSearch = oDoc.createSearchDescriptor()
	With vSearch
		.SearchString				= sFindReg
		.SearchCaseSensitive		= False
		.SearchRegularExpression	= True
	End With

	Dim vFound As Object: vFound = oDoc.findNext( oCursorL, vSearch )
	Do While ( ( Not IsNull(vFound ) AND oCursorL.Text.compareRegionEnds( oCursorL, oCursorR ) &gt; 0 ) )
		On Local Error Resume Next &apos; TODO код следующей строки то срабатывает, не выдает ошибку. если выделены сноски и текст в документе.
		If vFound.Text.compareRegionEnds( vFound, oCursorR ) &lt; 0 Then Exit Function
		vFound.setString( sReplaceReg )
		ParagraphsWorker = ParagraphsWorker + 1
		vFound = oDoc.findNext( vFound.End, vSearch )
	Loop
End Function

&apos; =====================================================================================
&apos; 			локализация диалога ручной обработки абзацев
&apos; =====================================================================================
&apos; для хранения сообщений для работы со сносками
Type tHWPData
	sNoSelectText						As String &apos; Нет ни одного выделенного фрагмента текста для обработки!
	sProcessAllDoc						As String &apos; Обрабатывать весь документ?
	sProcessAllDocEnd					As String &apos; Обработан весь документ:
	sProcessSelectedFragments			As String &apos; Обработано выделенных фрагментов текста
	sProcessPara						As String &apos; &quot;Обработано абзацев&quot;
	sNotFoundSelectedTextForTemplate	As String &apos; Не найдено ни одного текстового фрагмента, удовлетворяющего заданному шаблону поиска примечаний!
	sNotProcessAllDocEnd				As String &apos; Весь документ не обработан,
	sNotProcessSelTextEnd				As String &apos; Выделенные фрагменты текста не обработаны,
	sNotTermsFindInText					As String &apos; т.к. в абзацах не найдено заданное условие обработки.
	
	sBreakPara							As String &apos; Обрыв абзаца (¶)
	sBreakLine							As String &apos; Разрыв строки (\n)
	sSelectTextOnly						As String &apos; Можно выделять только текст!
	sHandWorkingParagraphs				As String &apos; Ручная обработка абзацев
	sSpliceReplaceParaToSpace			As String &apos; Склейка в 1 абзац ( Замена обрыв абзаца ¶ на 1 пробел )
	sSpliceRemovePara					As String &apos; Склейка в 1 абзац ( Удаление обрыв абзаца ¶ )
	sReplaceBreakParaToBR				As String &apos; Заменить обрыв абзаца ¶ на разрыв строки \n
	sSpliceReplaceBRToSpace				As String &apos; Склейка в 1 абзац ( Замена обрыва строки \n на 1 пробел )
	sSpliceRemoveBR						As String &apos; Склейка в 1 абзац ( Удаление обрыва строки \n )
	sReplaceBRToBreakPara				As String &apos; Заменить разрыв строки \n на обрыв абзаца ¶
End Type

Public sHWPD As tHWPData

&apos; =====================================================================================
&apos; инициализация сообщений  диалога ручной обработки абзацев в зависимости от локали
Sub InitHWPDataMessage()
	If getOOoLocal() = &quot;ru&quot; OR getOOoLocal() = &quot;uk&quot; Then
		With sHWPD
			.sNoSelectText				= &quot;Нет ни одного выделенного фрагмента текста для обработки!&quot;
			.sProcessAllDoc				= &quot;Обрабатывать весь документ?&quot;
			.sProcessAllDocEnd			= &quot;Обработан весь документ:&quot;
			.sProcessSelectedFragments	= &quot;Обработано выделенных фрагментов текста&quot;
			.sProcessPara				= &quot;Обработано абзацев&quot;
			.sNotFoundSelectedTextForTemplate	= &quot;Не найдено ни одного текстового фрагмента, удовлетворяющего заданному шаблону поиска примечаний!&quot;
			.sNotProcessAllDocEnd				= &quot;Весь документ не обработан,&quot;
			.sNotProcessSelTextEnd				= &quot;Выделенные фрагменты текста не обработаны,&quot;
			.sNotTermsFindInText				= &quot;т.к. в абзацах не найдено заданное условие обработки.&quot;
			
			.sBreakPara					= &quot;Обрыв абзаца (¶)&quot;
			.sBreakLine					= &quot;Разрыв строки (\n)&quot;
			.sSelectTextOnly			= &quot;Можно выделять только текст!&quot;
			.sHandWorkingParagraphs		= &quot;Ручная обработка абзацев&quot;
			.sSpliceReplaceParaToSpace	= &quot;Склейка в 1 абзац ( Замена обрыв абзаца ¶ на 1 пробел )&quot;
			.sSpliceRemovePara			= &quot;Склейка в 1 абзац ( Удаление обрыв абзаца ¶ )&quot;
			.sReplaceBreakParaToBR		= &quot;Заменить обрыв абзаца ¶ на разрыв строки \n&quot;
			.sSpliceReplaceBRToSpace	= &quot;Склейка в 1 абзац ( Замена обрыва строки \n на 1 пробел )&quot;
			.sSpliceRemoveBR			= &quot;Склейка в 1 абзац ( Удаление обрыва строки \n )&quot;
			.sReplaceBRToBreakPara		= &quot;Заменить разрыв строки \n на обрыв абзаца ¶&quot;
		End With
	Else
		With sHWPD
			.sNoSelectText				= &quot;No text selected for processing!&quot;
			.sProcessAllDoc				= &quot;Process the entire document?&quot;
			.sProcessAllDocEnd			= &quot;The entire document processed:&quot;
			.sProcessSelectedFragments	= &quot;Text selections processed&quot;
			.sProcessPara				= &quot;Paragraphs processed&quot;
			.sNotFoundSelectedTextForTemplate	= &quot;No text part was found matching the specified footnote/endnote search pattern!&quot;
			.sNotProcessAllDocEnd				= &quot;The entire document processed,&quot;
			.sNotProcessSelTextEnd				= &quot;Text selections were not processed,&quot;
			.sNotTermsFindInText				= &quot;as the specified condition for processing was not found in the paragraphs.&quot;
			
			.sBreakPara					= &quot;Paragraph break (¶)&quot;
			.sBreakLine					= &quot;Line break (\n)&quot;
			.sSelectTextOnly			= &quot;Only text can be selected!&quot;
			.sHandWorkingParagraphs		= &quot;Manual processing of paragraphs&quot;
			.sSpliceReplaceParaToSpace	= &quot;Join to 1 paragraph (Replace paragraph break ¶ with 1 space)&quot;
			.sSpliceRemovePara			= &quot;Join to 1 paragraph (Remove paragraph break ¶)&quot;
			.sReplaceBreakParaToBR		= &quot;Remove paragraph break ¶ with line break \n&quot;
			.sSpliceReplaceBRToSpace	= &quot;Join to 1 paragraph (Replace line break \n with 1 space)&quot;
			.sSpliceRemoveBR			= &quot;Join to 1 paragraph (Remove line break \n)&quot;
			.sReplaceBRToBreakPara		= &quot;Remove line break \n with paragraph break ¶&quot;
		End With
	End If
End Sub

Sub InitHandWorkingParagraphsDlg()
	InitHWPDataMessage()
	oHWPDlg.getModel.Title	= sHWPD.sHandWorkingParagraphs
	
	If getOOoLocal() = &quot;ru&quot; OR getOOoLocal() = &quot;uk&quot; Then
		With oHWPDlg.getModel
			.lblHWPMode.Label		= &quot;Режим обработки:&quot;
			.lblHWPModeType.Label	= &quot;Тип обработки:&quot;
			.cmdBtnWork.Label		= &quot;Обработать&quot;
		End With
	Else
		With oHWPDlg.getModel
			.lblHWPMode.Label		= &quot;Processing mode:&quot;
			.lblHWPModeType.Label	= &quot;Processing type:&quot;
			.cmdBtnWork.Label		= &quot;Process&quot;
		End With
	End If
End Sub

</script:module>