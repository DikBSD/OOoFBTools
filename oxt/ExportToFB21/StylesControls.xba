<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE script:module PUBLIC "-//OpenOffice.org//DTD OfficeDocument 1.0//EN" "module.dtd">
<script:module xmlns:script="http://openoffice.org/2000/script" script:name="StylesControls" script:language="StarBasic">REM  *****  BASIC  *****
Option Explicit

Private oStylesDlg As Object
Public sStylesFilename As String

Private bStyleExecute As Boolean

&apos; Данные книги
Public sStyleBookAuthor As String
Public sStyleBookTitle As String
&apos; Анотация
Public sStyleAnnotation As String
&apos; Эпиграф
Public sStyleEpigraph As String
Public sStyleEpigraphAuthor As String
&apos; Поэма
Public sStylePoemTitle As String
Public sStylePoem As String
Public sStylePoemAuthor As String
&apos; Цитата
Public sStyleCite As String
Public sStyleCiteAuthor As String
&apos; Подзаголовок
Public sStyleSubTitle As String
&apos; Уровни
Public sStyleLevel1 As String
Public sStyleLevel2 As String
Public sStyleLevel3 As String
Public sStyleLevel4 As String
Public sStyleLevel5 As String
Public sStyleLevel6 As String
Public sStyleLevel7 As String
Public sStyleLevel8 As String
Public sStyleLevel9 As String
Public sStyleLevel10 As String

&apos; &quot;Служебные&quot; стили для автоматического формирования &lt;Description&gt;
Public sStyleBookAnnotation As String
Public sStylePaperBookName As String
Public sStylePaperBookPublisher As String
Public sStylePaperBookCity As String
Public sStylePaperBookYear As String
Public sStylePaperBookISBN As String
Public sStylePaperBookSequence As String
Public sStylePaperBookSequenceNumber As String


Function SetUserStyles
	DialogLibraries.LoadLibrary(&quot;ExportToFictionBook&quot;)
	oStylesDlg = CreateUnoDialog(DialogLibraries.ExportToFictionBook.StylesDlg)
	
	&apos; файл пользовательских стилей
	sStylesFilename = pmxCurDir() &amp; &quot;/ExportToFB21/styles.txt&quot;
	
	&apos; считывание стилей из файла. Если его нет - то задаем по умолчанию
	If ReadStyles = False Then
		SetStylesControlsDefault &apos; Задаем название стилей в контролы по умолчанию
	End If
	
	With oStylesDlg.Model
		.Title = &quot;Определение пользовательских стилей&quot;
	End With
	
	&apos; центрирование на экране
	ToScreenCenter(oStylesDlg)
	
	oStylesDlg.execute()
	SetUserStyles = bStyleExecute
End Function

Function StylesDlgOk
	&apos; Принятие стилей
	SaveStyles &apos; сохраняем стили в файл
	
	bStyleExecute = True
	oStylesDlg.endExecute()
End Function

Function StylesDlgCanceled
	bStyleExecute = False
	oStylesDlg.endExecute()
End Function

Function ReadStyles As Boolean
	&apos; Читаем стили и задаем значения контролам формы стилей
	If FileExists(sStylesFilename) Then
		Dim iFileNo As Integer, sCurrentLine As String
		&apos; Установление свободного файлового манипулятора
		iFileNo = Freefile
		&apos; Открытие файла (в режиме на чтение)
		Open sStylesFilename For Input As #iFileNo
		&apos; Проверка, был ли достигнут конец файла
		Do While NOT eof(iFileNo)
			&apos; Чтение строки
			Line Input #iFileNo, sCurrentLine
			If sCurrentLine &lt;&gt; &quot;&quot; Then
				&apos; Устанавливаем данные стилей
				SetStyles(sCurrentLine)
			End If
		Loop
		&apos; Закрытие файла
		Close #iFileNo
		ReadStyles = True
	Else
		ReadStyles = False
	End If
End Function

Function SaveStyles
	&apos; записываем стили
	Dim iFileNo As Integer, sCurrentLine As String
	iFileNo = Freefile &apos; Установление свободного файлового манипулятора
	Open sStylesFilename For Output As #iFileNo &apos; Открытие файла (в режиме на запись)
	
	Dim ctrl As Object, i As Integer
	ctrl = oStylesDlg.getControls()
	For i=LBound(ctrl) To UBound(ctrl)
		&apos; сохраняем данные только Edit
		If ctrl(i).getImplementationName() = &quot;stardiv.Toolkit.UnoEditControl&quot; Then
			Print #iFileNo, ctrl(i).Model.Name &amp; &quot;=&quot; &amp; ctrl(i).Model.Text
		End If
	Next i
	
	Close #iFileNo &apos; Закрытие файла
End Function

Function SetStyles(sCurrentLine)
	Dim sStyles() As String
	sStyles = Split(sCurrentLine, &quot;=&quot;)
	oStylesDlg.GetControl(sStyles(0)).Text = sStyles(1)
End Function

Function SetStylesControlsDefault
	&apos; Установка стилей по умолчанию в контролы
	&apos; Данные книги
	oStylesDlg.GetControl(&quot;tfBookAuthor&quot;).Text = &quot;Book Author&quot;
	oStylesDlg.GetControl(&quot;tfBookTitle&quot;).Text = &quot;Book Title&quot;
	&apos; Анотация
	oStylesDlg.GetControl(&quot;tfAnnotation&quot;).Text = &quot;Annotation&quot;
	&apos; Эпиграф
	oStylesDlg.GetControl(&quot;tfEpigraph&quot;).Text = &quot;Epigraph&quot;
	oStylesDlg.GetControl(&quot;tfEpigraphAuthor&quot;).Text = &quot;Epigraph Author&quot;
	&apos; Поэма
	oStylesDlg.GetControl(&quot;tfPoemTitle&quot;).Text = &quot;Poem Title&quot;
	oStylesDlg.GetControl(&quot;tfPoem&quot;).Text = &quot;Poem&quot;
	oStylesDlg.GetControl(&quot;tfPoemAuthor&quot;).Text = &quot;Poem Author&quot;
	&apos; Цитата
	oStylesDlg.GetControl(&quot;tfCite&quot;).Text = &quot;Cite&quot;
	oStylesDlg.GetControl(&quot;tfCiteAuthor&quot;).Text = &quot;Cite Author&quot;
	&apos; Подзаголовок
	oStylesDlg.GetControl(&quot;tfSubTitle&quot;).Text = &quot;SubTitle&quot;
	&apos; Уровни
	oStylesDlg.GetControl(&quot;tfLevel1&quot;).Text = &quot;Level 1&quot;
	oStylesDlg.GetControl(&quot;tfLevel2&quot;).Text = &quot;Level 2&quot;
	oStylesDlg.GetControl(&quot;tfLevel3&quot;).Text = &quot;Level 3&quot;
	oStylesDlg.GetControl(&quot;tfLevel4&quot;).Text = &quot;Level 4&quot;
	oStylesDlg.GetControl(&quot;tfLevel5&quot;).Text = &quot;Level 5&quot;
	oStylesDlg.GetControl(&quot;tfLevel6&quot;).Text = &quot;Level 6&quot;
	oStylesDlg.GetControl(&quot;tfLevel7&quot;).Text = &quot;Level 7&quot;
	oStylesDlg.GetControl(&quot;tfLevel8&quot;).Text = &quot;Level 8&quot;
	oStylesDlg.GetControl(&quot;tfLevel9&quot;).Text = &quot;Level 9&quot;
	oStylesDlg.GetControl(&quot;tfLevel10&quot;).Text = &quot;Level 10&quot;
	&apos; &quot;Служебные&quot; стили для автоматического формирования &lt;Description&gt;
	&apos; Анотация Книги
	oStylesDlg.GetControl(&quot;tfBookAnnotation&quot;).Text = &quot;Book Annotation&quot;
	oStylesDlg.GetControl(&quot;tfPaperBookName&quot;).Text = &quot;PaperBook Name&quot;
	oStylesDlg.GetControl(&quot;tfPaperBookPublisher&quot;).Text = &quot;PaperBook Publisher&quot;
	oStylesDlg.GetControl(&quot;tfPaperBookCity&quot;).Text = &quot;PaperBook City&quot;
	oStylesDlg.GetControl(&quot;tfPaperBookYear&quot;).Text = &quot;PaperBook Year&quot;
	oStylesDlg.GetControl(&quot;tfPaperBookISBN&quot;).Text = &quot;PaperBook ISBN&quot;
	oStylesDlg.GetControl(&quot;tfPaperBookSequence&quot;).Text = &quot;PaperBook Sequence&quot;
	oStylesDlg.GetControl(&quot;tfPaperBookSequenceNumber&quot;).Text = &quot;PaperBook SequenceNumber&quot;

End Function

Function ReadStylesInVars As Boolean
	&apos; Читаем стили в переменные
	If FileExists(sStylesFilename) Then
		Dim iFileNo As Integer, sCurrentLine As String
		&apos; Установление свободного файлового манипулятора
		iFileNo = Freefile
		&apos; Открытие файла (в режиме на чтение)
		Open sStylesFilename For Input As #iFileNo
		&apos; Проверка, был ли достигнут конец файла
		Do While NOT eof(iFileNo)
			&apos; Чтение строки
			Line Input #iFileNo, sCurrentLine
			If sCurrentLine &lt;&gt; &quot;&quot; Then
				&apos; Устанавливаем данные стилей
				SetStylesInVars(sCurrentLine)
			End If
		Loop
		&apos; Закрытие файла
		Close #iFileNo
		ReadStylesInVars = True
	Else
		ReadStylesInVars = False
	End If
End Function

Function SetStylesInVars(sCurrentLine)
	Dim sStyles() As String
	sStyles = Split(sCurrentLine, &quot;=&quot;)
	Select Case sStyles(0)
		Case &quot;tfBookAuthor&quot;
			sStyleBookAuthor = sStyles(1)
		Case &quot;tfBookTitle&quot;
			sStyleBookTitle = sStyles(1)
		Case &quot;tfAnnotation&quot;
			sStyleAnnotation = sStyles(1)
		Case &quot;tfEpigraph&quot;
			sStyleEpigraph = sStyles(1)
		Case &quot;tfEpigraphAuthor&quot;
			sStyleEpigraphAuthor = sStyles(1)
		Case &quot;tfCite&quot;
			sStyleCite = sStyles(1)
		Case &quot;tfCiteAuthor&quot;
			sStyleCiteAuthor = sStyles(1)
		Case &quot;tfPoemTitle&quot;
			sStylePoemTitle = sStyles(1)
		Case &quot;tfPoem&quot;
			sStylePoem = sStyles(1)
		Case &quot;tfPoemAuthor&quot;
			sStylePoemAuthor = sStyles(1)
		Case &quot;tfSubTitle&quot;
			sStyleSubTitle = sStyles(1)
		Case &quot;tfLevel1&quot;
			If Instr(sStyles(1),&quot;Заголовок &quot;) &gt; 0 Then
				sStyleLevel1 = &quot;Heading 1&quot;
			Else
				sStyleLevel1 = sStyles(1)
			End If
		Case &quot;tfLevel2&quot;
			If Instr(sStyles(1),&quot;Заголовок &quot;) &gt; 0 Then
				sStyleLevel2 = &quot;Heading 2&quot;
			Else
				sStyleLevel2 = sStyles(1)
			End If
		Case &quot;tfLevel3&quot;
			If Instr(sStyles(1),&quot;Заголовок &quot;) &gt; 0 Then
				sStyleLevel3 = &quot;Heading 3&quot;
			Else
				sStyleLevel3 = sStyles(1)
			End If
		Case &quot;tfLevel4&quot;
			If Instr(sStyles(1),&quot;Заголовок &quot;) &gt; 0 Then
				sStyleLevel4 = &quot;Heading 4&quot;
			Else
				sStyleLevel4 = sStyles(1)
			End If
		Case &quot;tfLevel5&quot;
			If Instr(sStyles(1),&quot;Заголовок &quot;) &gt; 0 Then
				sStyleLevel5 = &quot;Heading 5&quot;
			Else
				sStyleLevel5 = sStyles(1)
			End If
		Case &quot;tfLevel6&quot;
			If Instr(sStyles(1),&quot;Заголовок &quot;) &gt; 0 Then
				sStyleLevel6 = &quot;Heading 6&quot;
			Else
				sStyleLevel6 = sStyles(1)
			End If
		Case &quot;tfLevel7&quot;
			If Instr(sStyles(1),&quot;Заголовок &quot;) &gt; 0 Then
				sStyleLevel7 = &quot;Heading 7&quot;
			Else
				sStyleLevel7 = sStyles(1)
			End If
		Case &quot;tfLevel8&quot;
			If Instr(sStyles(1),&quot;Заголовок &quot;) &gt; 0 Then
				sStyleLevel8 = &quot;Heading 8&quot;
			Else
				sStyleLevel8 = sStyles(1)
			End If
		Case &quot;tfLevel9&quot;
			If Instr(sStyles(1),&quot;Заголовок &quot;) &gt; 0 Then
				sStyleLevel9 = &quot;Heading 9&quot;
			Else
				sStyleLevel9 = sStyles(1)
			End If
		Case &quot;tfLevel10&quot;
			If Instr(sStyles(1),&quot;Заголовок &quot;) &gt; 0 Then
				sStyleLevel10 = &quot;Heading 10&quot;
			Else
				sStyleLevel10 = sStyles(1)
			End If
		&apos; &quot;Служебные&quot; стили для автоматического формирования &lt;Description&gt;
		Case &quot;tfBookAnnotation&quot;
			sStyleBookAnnotation = sStyles(1)
		Case &quot;tfPaperBookName&quot;
			sStylePaperBookName = sStyles(1)
		Case &quot;tfPaperBookPublisher&quot;
			sStylePaperBookPublisher = sStyles(1)
		Case &quot;tfPaperBookCity&quot;
			sStylePaperBookCity = sStyles(1)
		Case &quot;tfPaperBookYear&quot;
			sStylePaperBookYear = sStyles(1)
		Case &quot;tfPaperBookISBN&quot;
			sStylePaperBookISBN = sStyles(1)
		Case &quot;tfPaperBookSequence&quot;
			sStylePaperBookSequence = sStyles(1)
		Case &quot;tfPaperBookSequenceNumber&quot;
			sStylePaperBookSequenceNumber = sStyles(1)
	End Select
End Function

Function SetStylesVarsDefault
	&apos; Установка стилей по умолчанию в переменные
	&apos; Данные книги
	sStyleBookAuthor = &quot;Book Author&quot;
	sStyleBookTitle	 = &quot;Book Title&quot;
	&apos; Анотация
	sStyleAnnotation = &quot;Annotation&quot;
	&apos; Эпиграф
	sStyleEpigraph		= &quot;Epigraph&quot;
	sStyleEpigraphAuthor= &quot;Epigraph Author&quot;
	&apos; Поэма
	sStylePoemTitle	 = &quot;Poem Title&quot;
	sStylePoem		 = &quot;Poem&quot;
	sStylePoemAuthor = &quot;Poem Author&quot;
	&apos; Цитата
	sStyleCite		  = &quot;Cite&quot;
	sStyleCiteAuthor  = &quot;Cite Author&quot;
	&apos; Подзаголовок
	sStyleSubTitle	 = &quot;SubTitle&quot;
	&apos; Уровни
	sStyleLevel1	 = &quot;Level 1&quot;
	sStyleLevel2 	 = &quot;Level 2&quot;
	sStyleLevel3 	 = &quot;Level 3&quot;
	sStyleLevel4 	 = &quot;Level 4&quot;
	sStyleLevel5 	 = &quot;Level 5&quot;
	sStyleLevel6 	 = &quot;Level 6&quot;
	sStyleLevel7 	 = &quot;Level 7&quot;
	sStyleLevel8 	 = &quot;Level 8&quot;
	sStyleLevel9 	 = &quot;Level 9&quot;
	sStyleLevel10 	 = &quot;Level 10&quot;
	
	&apos; &quot;Служебные&quot; стили для автоматического формирования &lt;Description&gt;
	sStyleBookAnnotation = &quot;Book Annotation&quot;
	sStylePaperBookName = &quot;PaperBook Name&quot;
	sStylePaperBookPublisher = &quot;PaperBook Publisher&quot;
	sStylePaperBookCity = &quot;PaperBook City&quot;
	sStylePaperBookYear = &quot;PaperBook Year&quot;
	sStylePaperBookISBN = &quot;PaperBook ISBN&quot;
	sStylePaperBookSequence = &quot;PaperBook Sequence&quot;
	sStylePaperBookSequenceNumber = &quot;PaperBook SequenceNumber&quot;

End Function

</script:module>